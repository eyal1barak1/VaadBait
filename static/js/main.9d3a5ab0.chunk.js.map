{"version":3,"sources":["components/HOANavbar/HOANavbr.js","components/HomePageCard/HomePageCard.js","pages/HomePage/HomePage.js","model/UserModel.js","pages/LoginPage/LoginPage.js","pages/SignupPage/SignupPage.js","components/NewMessageModal/NewMessageModal.js","components/CommentsItem/CommentsItem.js","components/CommentsList/CommentsList.js","model/CommentModel.js","components/CommentsApp/CommentsApp.js","components/MessageCard/MessageCard.js","components/Accordion/MessagesAccordion.js","components/FilterContent/FilterContent.js","model/MessageModel.js","pages/MessagesPage/MessagesPage.js","components/VoteOptions/VoteOptions.js","components/NewVoteModal/NewVoteModal.js","components/Accordion/VotesAccordion.js","components/DateModal/DateModal.js","components/PieChart/PieChart.js","components/Timer/Timer.js","components/ActiveVoteCard/ActiveVoteCard.js","components/VoteResultCard/VoteResultCard.js","model/VoteModel.js","pages/VotingPage/VotingPage.js","components/NewTenantModal/NewTenantModal.js","components/TenantCard/TenantCard.js","components/Accordion/TenantsAccordion.js","pages/TenantsPage/TenantsPage.js","model/ImageModel.js","App.js","reportWebVitals.js","index.js"],"names":["HoaNavbr","props","activeUser","onLogout","tenantLink","role","Nav","Link","href","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","className","disabled","fname","lname","onClick","HomePageCard","img","desc","Card","Header","Img","variant","src","HomePage","Jumbotron","Container","Row","Col","UserModel","parseUser","this","get","email","url","building","LoginPage","useState","setEmail","pwd","setPwd","showLoginError","setShowLoginError","redirectToMessages","setRedirectToMessages","onLogin","a","Parse","User","logIn","console","error","to","icon","faArrowLeft","Alert","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","Text","Button","block","SignupPage","setfname","setlname","setBuilding","ACL","setPublicReadAccess","newUser","set","signUp","then","catch","NewMessageModal","show","handleClose","addMessage","isUpdate","messageId","updateMessageContent","phImg","title","setTitle","details","setDetails","priority","SetPriority","setImg","placeHolderImage","closeModal","imgURL","URL","createObjectURL","Modal","onHide","size","closeButton","Title","Body","as","column","sm","rows","accept","files","length","Image","width","height","Footer","CommentsItem","completed","text","itemClass","added_item","SetAdded_item","useEffect","classList","add","setTimeout","listItem","remove","ref","li","alt","roundedCircle","CommentsList","items","map","item","done","userFname","userLname","CommentModel","parseComment","CommentsApp","message","setText","setItems","ParseComments","Object","extend","query","Query","equalTo","find","parseComments","fetchData","event","style","visibility","myNewObject","save","concat","MessageCard","removeMessage","showModal","setShowModal","fluid","md","MessagesAccordion","panels","updateMessage","Accordion","panel","index","activeUserId","eventKey","toString","isRead","includes","FilterContent","filteredText","onFilterChange","FilterPriority","Sort","isMessagesPage","InputGroup","Prepend","faSearch","FormControl","aria-label","aria-describedby","DropdownButton","onSelect","Dropdown","Item","Check","inline","label","name","MessageModel","parseMessage","date","MessagesPage","message_items","addMessageItems","setFilteredText","priorityFilter","setPriorityFilter","messages","setMessages","filteredMessages","filter","toLowerCase","ParseMessage","newMessage","File","Date","current","attributes","relation","removeRelatedComments","commentObj","Comment","object","destroy","Message","response","results","forEach","found","element","indexOf","splice","log","parseMessages","messagesView","toUpperCase","innerHTML","sortBy","sort","b","firstDate","parse","nameA","nameB","arr","push","VoteOptions","updateOptions","options","setOptions","newOption","setNewOption","optionsView","option","NewVoteModal","addVote","endDate","setEndDate","newOptions","voteEndDate","VotesAccordion","isResaultAccordion","vote","result","DateModal","handleUpdateEndDate","d","month","getMonth","day","getDate","year","getFullYear","join","formatDate","dateString","setDateString","aria-labelledby","PieChart","optionsChartData","React","colors","numOfOptions","pieColors","pieColorsBorder","colorsArray","i","pieColor","pieColorBorder","getPieColors","voteCount","count","values","votesPieData","labels","datasets","data","backgroundColor","borderColor","borderWidth","keys","legend","display","Timer","state","days","hours","minutes","seconds","errorMsg","onEndDateChange","setState","getTwoDigitValue","calculateCountdown","startDate","getTime","start_date","end_date","start_millis","Math","floor","abs","timer","clearTimeout","convertedDays","convertedHours","convertedMins","convertedSeconds","Component","ActiveVoteCard","updateEndDate","AddUsersVote","showDateModal","setShowDateModal","chosenOption","setChosenOption","showPopover","setShowpopover","hour","getHours","getMinutes","popover","Popover","Content","lg","OverlayTrigger","trigger","placement","overlay","updatedEndDate","VoteResultCard","VoteModel","parseVote","voteStatus","VotingPage","votings","setVotings","Vote","myNewVote","parsVote","voteId","userId","pieObj","ParseVote","voteItem","voteResult","voteRecords","votesCommited","entries","key","resultArr","prev","getArraysNumOfOccurencesAndVariables","indexOfMaxvar","max","maxIndex","indexOfMax","indexOfMaxVar","maxVar","counter","isTie","getOptionChosen","filteredVotes","activeVoteView","nonActiveVoteView","NewTenantModal","addTenant","updateTenantContent","TenantCard","tenant","removeTenant","TenantsAccordion","TenantsPage","tenants","setTenants","filteredTenants","ParseTenants","parseTenants","user","TenantView","sessionToken","userACL","setPublicWriteAccess","setACL","become","ImageModel","parseImage","App","setActiveUser","imgPlaceHolders","setImgPlaceHolders","msgImgPh","getObject","userImgPh","handleLogout","logOut","handleLogin","loggedinUser","obj","ParseImagePlaceHolder","parseImagePlaceHolders","parseImagePlaceHolder","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","serverURL","initialize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"giCAkCeA,MA/Bf,SAAkBC,GAAQ,IACdC,EAAyBD,EAAzBC,WAAYC,EAAaF,EAAbE,SAChBC,EAAa,KAQjB,OANIF,GACwB,cAApBA,EAAWG,OACXD,EAAa,cAACE,EAAA,EAAIC,KAAL,CAAUC,KAAK,YAAf,sBAKjB,eAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,UACI,cAACF,EAAA,EAAOG,MAAR,CAAcJ,KAAK,KAAnB,yBACA,cAACC,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,eAACL,EAAA,EAAOM,SAAR,CAAiBC,GAAG,mBAApB,UACI,eAACV,EAAA,EAAD,CAAKW,UAAU,UAAf,UACKf,EAAa,cAACI,EAAA,EAAIC,KAAL,CAAUC,KAAK,aAAf,sBAAkD,KAC/DN,EAAa,cAACI,EAAA,EAAIC,KAAL,CAAUC,KAAK,WAAf,oBAA8C,KAC3DJ,KAEL,eAACE,EAAA,EAAD,CAAKW,UAAU,UAAf,UACKf,EAAa,KAAO,cAACI,EAAA,EAAIC,KAAL,CAAUC,KAAK,UAAf,mBACpBN,EAAa,KAAO,cAACI,EAAA,EAAIC,KAAL,CAAUC,KAAK,WAAf,oBACpBN,EAAa,cAACI,EAAA,EAAIC,KAAL,CAAUW,UAAQ,EAAlB,SAAoB,MAAQhB,EAAWiB,MAAQ,IAAMjB,EAAWkB,MAAQ,QAAoB,KACzGlB,EAAa,cAACI,EAAA,EAAIC,KAAL,CAAUc,QAAS,kBAAMlB,KAAzB,oBAAyD,e,gBCX5EmB,MAXf,SAAsBrB,GAAQ,IAClBsB,EAActB,EAAdsB,IAAKC,EAASvB,EAATuB,KAEb,OACI,eAACC,EAAA,EAAD,CAAMR,UAAU,mBAAhB,UACI,cAACQ,EAAA,EAAKC,OAAN,UAAcF,IACd,cAACC,EAAA,EAAKE,IAAN,CAAUC,QAAQ,MAAMC,IAAKN,Q,OCoB1BO,MAzBf,SAAkB7B,GAAQ,IACdC,EAAyBD,EAAzBC,WAAYC,EAAaF,EAAbE,SAEpB,OACI,sBAAKc,UAAU,SAAf,UACI,cAAC,EAAD,CAAUf,WAAYA,EAAYC,SAAUA,IAC5C,cAAC4B,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAWf,UAAU,gBAArB,UACI,kEACA,2IAIR,cAACe,EAAA,EAAD,CAAWf,UAAU,gBAArB,SACI,eAACgB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UAAK,cAAC,EAAD,CAAcX,IAAI,uEAAuEC,KAAK,wBACnG,cAACU,EAAA,EAAD,UAAK,cAAC,EAAD,CAAcX,IAAI,iJAAiJC,KAAK,kBAC7K,cAACU,EAAA,EAAD,UAAK,cAAC,EAAD,CAAcX,IAAI,8UAA8UC,KAAK,+B,8DCV/WW,EAXX,WAAYC,GAAY,oBACpBC,KAAKrB,GAAKoB,EAAUpB,GACpBqB,KAAKlB,MAAQiB,EAAUE,IAAI,SAC3BD,KAAKjB,MAAQgB,EAAUE,IAAI,SAC3BD,KAAKE,MAAQH,EAAUE,IAAI,cAC3BD,KAAKhC,KAAO+B,EAAUE,IAAI,QAC1BD,KAAKd,IAAsC,qBAAzBa,EAAUE,IAAI,OAAyB,GAAKF,EAAUE,IAAI,OAAOE,MACnFH,KAAKI,SAAWL,EAAUE,IAAI,a,iBCqDvBI,MArDf,SAAmBzC,GAAQ,IAAD,EACI0C,mBAAS,iBADb,mBACfJ,EADe,KACRK,EADQ,OAEAD,mBAAS,OAFT,mBAEfE,EAFe,KAEVC,EAFU,OAGsBH,oBAAS,GAH/B,mBAGfI,EAHe,KAGCC,EAHD,OAI8BL,oBAAS,GAJvC,mBAIfM,EAJe,KAIKC,EAJL,KAKdC,EAAYlD,EAAZkD,QALc,4CAQtB,4BAAAC,EAAA,+EAEgCC,IAAMC,KAAKC,MAAMhB,EAAOM,GAFxD,OAEcT,EAFd,OAIQe,EAAQ,IAAIhB,EAAUC,IACtBc,GAAsB,GAL9B,gDAQQM,QAAQC,MAAM,8BAAd,MACAT,GAAkB,GAT1B,0DARsB,sBAsBtB,OAAIC,EACO,cAAC,IAAD,CAAUS,GAAG,cAIpB,eAAC1B,EAAA,EAAD,CAAWf,UAAU,UAArB,UACI,eAAC,IAAD,CAAMA,UAAU,aAAayC,GAAG,IAAhC,UAAoC,cAAC,IAAD,CAAiBC,KAAMC,MAA3D,UACA,oEACA,oCAAM,cAAC,IAAD,CAAMF,GAAG,UAAT,kCACLX,EAAiB,cAACc,EAAA,EAAD,CAAOjC,QAAQ,SAAf,kCAAuD,KACzE,eAACkC,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,4BACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,QAAQC,YAAY,cAAcC,MAAO9B,EAAO+B,SAAU,SAAAC,GAAC,OAAI3B,EAAS2B,EAAEC,OAAOH,UACpG,cAACP,EAAA,EAAKW,KAAN,CAAWxD,UAAU,aAArB,+DAIJ,eAAC6C,EAAA,EAAKC,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,WAAWC,YAAY,WAAWC,MAAOxB,EAAKyB,SAAU,SAAAC,GAAC,OAAIzB,EAAOyB,EAAEC,OAAOH,aAEpG,cAACK,EAAA,EAAD,CAAQ9C,QAAQ,UAAUuC,KAAK,SAASQ,OAAK,EAACtD,QA5CpC,2CA4CV,0B,OCgCDuD,MA5Ef,SAAoB3E,GAAQ,IAAD,EACG0C,mBAAS,kBADZ,mBAChBJ,EADgB,KACTK,EADS,OAEDD,mBAAS,OAFR,mBAEhBE,EAFgB,KAEXC,EAFW,OAGGH,mBAAS,QAHZ,mBAGhBxB,EAHgB,KAGT0D,EAHS,OAIGlC,mBAAS,SAJZ,mBAIhBvB,EAJgB,KAIT0D,EAJS,OAKSnC,mBAAS,YALlB,mBAKhBF,EALgB,KAKNsC,EALM,OAM6BpC,oBAAS,GANtC,mBAMhBM,EANgB,KAMIC,EANJ,KAOfC,EAAYlD,EAAZkD,QA0BR,OAAIF,EACO,cAAC,IAAD,CAAUS,GAAG,cAKpB,eAAC1B,EAAA,EAAD,CAAWf,UAAU,WAArB,UACI,eAAC,IAAD,CAAMA,UAAU,aAAayC,GAAG,IAAhC,cAAqC,cAAC,IAAD,CAAiBC,KAAMC,MAA5D,UACA,mEACA,eAACE,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,yBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,mBAAmBC,MAAOlD,EAAOmD,SAAU,SAAAC,GAAC,OAAIM,EAASN,EAAEC,OAAOH,aAE5G,eAACP,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,wBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,kBAAkBC,MAAOjD,EAAOkD,SAAU,SAAAC,GAAC,OAAIO,EAASP,EAAEC,OAAOH,aAE3G,eAACP,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,4BACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,QAAQC,YAAY,cAAcC,MAAO9B,EAAO+B,SAAU,SAAAC,GAAC,OAAI3B,EAAS2B,EAAEC,OAAOH,UACpG,cAACP,EAAA,EAAKW,KAAN,CAAWxD,UAAU,aAArB,+DAIJ,eAAC6C,EAAA,EAAKC,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,WAAWC,YAAY,WAAWC,MAAOxB,EAAKyB,SAAU,SAAAC,GAAC,OAAIzB,EAAOyB,EAAEC,OAAOH,aAEpG,eAACP,EAAA,EAAKC,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,gDACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,oCAAoCC,MAAO5B,EAAU6B,SAAU,SAAAC,GAAC,OAAIQ,EAAYR,EAAEC,OAAOH,aAGnI,cAACK,EAAA,EAAD,CAAQ9C,QAAQ,UAAUuC,KAAK,SAASQ,OAAK,EAACtD,QAzD1D,YACc,IAAIgC,IAAM2B,KAChBC,qBAAoB,GAExB,IAAMC,EAAU,IAAI7B,IAAMC,KAC1B4B,EAAQC,IAAI,WAAYhE,GACxB+D,EAAQC,IAAI,QAAS5C,GACrB2C,EAAQC,IAAI,QAAShE,GACrB+D,EAAQC,IAAI,QAAS/D,GACrB8D,EAAQC,IAAI,WAAY1C,GACxByC,EAAQC,IAAI,MAAO,IACnBD,EAAQC,IAAI,OAAQ,aACpBD,EAAQC,IAAI,WAAYtC,GACxBqC,EAAQC,IAAI,aAAc5C,GAC1B2C,EAAQE,SAASC,MAAK,SAACH,GACnB/B,EAAQ,IAAIhB,EAAU+C,IACtBhC,GAAsB,MACvBoC,OAAM,SAAA7B,GACLD,QAAQC,MAAM,8BAA+ByB,OAuCzC,2B,iCCsCDK,MA9Gf,SAAyBtF,GAAQ,IACrBuF,EAAoFvF,EAApFuF,KAAMC,EAA8ExF,EAA9EwF,YAAaC,EAAiEzF,EAAjEyF,WAAYC,EAAqD1F,EAArD0F,SAAUC,EAA2C3F,EAA3C2F,UAAWC,EAAgC5F,EAAhC4F,qBAAsBC,EAAU7F,EAAV6F,MADtD,EAEFnD,mBAAS,IAFP,mBAErBoD,EAFqB,KAEdC,EAFc,OAGErD,mBAAS,IAHX,mBAGrBsD,EAHqB,KAGZC,EAHY,OAIIvD,mBAAS,QAJb,mBAIrBwD,EAJqB,KAIXC,EAJW,OAKNzD,mBAAS,IALH,mBAKrBpB,EALqB,KAKhB8E,EALgB,KAMtBC,EAAoC,qBAAVR,EAAwB,GAAKA,EAAMvE,IAAIiB,MAEvE,SAAS+D,IACLP,EAAS,IACTE,EAAW,IACXG,EAAO,IACPZ,IAyBJ,IAAMe,EAASjF,EAAMkF,IAAIC,gBAAgBnF,GAAO,GAEhD,OACI,eAACoF,EAAA,EAAD,CAAOnB,KAAMA,EAAMoB,OAAQL,EAAYM,KAAK,KAA5C,UACI,cAACF,EAAA,EAAMjF,OAAP,CAAcoF,aAAW,EAAzB,SACI,cAACH,EAAA,EAAMI,MAAP,UAAcpB,EAAW,iBAAmB,yBAEhD,cAACgB,EAAA,EAAMK,KAAP,UACI,eAAClD,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,CAAYkD,GAAIhF,IAAK+B,UAAU,sBAA/B,UACI,cAACF,EAAA,EAAKG,MAAN,CAAYiD,QAAM,EAACC,GAAI,EAAvB,oBAGA,cAACjF,EAAA,EAAD,CAAKiF,GAAI,GAAT,SACI,cAACrD,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,gBAAgBC,MAAO0B,EAAOzB,SAAU,SAAAC,GAAC,OAAIyB,EAASzB,EAAEC,OAAOH,eAI7G,eAACP,EAAA,EAAKC,MAAN,CAAYkD,GAAIhF,IAAK+B,UAAU,wBAA/B,UACI,cAACF,EAAA,EAAKG,MAAN,CAAYiD,QAAM,EAACC,GAAI,EAAvB,sBAGA,cAACjF,EAAA,EAAD,CAAKiF,GAAI,GAAT,SACI,cAACrD,EAAA,EAAKI,QAAN,CAAc+C,GAAG,WAAWG,KAAM,EAAGjD,KAAK,OAAOC,YAAY,kBAAkBC,MAAO4B,EAAS3B,SAAU,SAAAC,GAAC,OAAI2B,EAAW3B,EAAEC,OAAOH,eAI1I,eAACP,EAAA,EAAKC,MAAN,CAAYkD,GAAIhF,IAAK+B,UAAU,yBAA/B,UACI,cAACF,EAAA,EAAKG,MAAN,CAAYiD,QAAM,EAACC,GAAI,EAAvB,uBAGA,cAACjF,EAAA,EAAD,CAAKiF,GAAI,GAAT,SACI,eAACrD,EAAA,EAAKI,QAAN,CAAc+C,GAAG,SAAS3C,SAAU,SAAAC,GAAC,OAAI6B,EAAY7B,EAAEC,OAAOH,QAA9D,UACI,2CACA,uDAIZ,eAACP,EAAA,EAAKC,MAAN,CAAYkD,GAAIhF,IAAK+B,UAAU,sBAA/B,UACI,cAACF,EAAA,EAAKG,MAAN,CAAYiD,QAAM,EAACC,GAAI,EAAvB,wBAGA,cAACjF,EAAA,EAAD,CAAKiF,GAAI,EAAT,SACI,cAACrD,EAAA,EAAKI,QAAN,CAAcjD,UAAU,aAAakD,KAAK,OAAOkD,OAAO,UAAU/C,SAnD1F,SAA0BC,GACQ,IAA1BA,EAAEC,OAAO8C,MAAMC,OACflB,EAAO9B,EAAEC,OAAO8C,MAAM,IAEtBjB,EAAO,WAiDK,cAACnE,EAAA,EAAD,CAAKiF,GAAI,EAAT,SACI,cAACK,EAAA,EAAD,CAAOC,MAAM,MAAMC,OAAO,MAAM7F,IAAgB,KAAX2E,EAAgBF,EAAmBE,cAMxF,8BACKb,EACG,cAACgB,EAAA,EAAMgB,OAAP,UACI,cAACjD,EAAA,EAAD,CAAQ9C,QAAQ,UAAUP,QArE9C,WACIwE,EAAqBE,EAAOE,EAASE,EAAU5E,EAAKqE,GAEpDW,KAkEgB,8BAKJ,eAACI,EAAA,EAAMgB,OAAP,WACI,cAACjD,EAAA,EAAD,CAAQ9C,QAAQ,YAAYP,QAASkF,EAArC,oBAGA,cAAC7B,EAAA,EAAD,CAAQ9C,QAAQ,UAAUP,QAtF9C,WAEIqE,EAAWK,EAAOE,EAASE,EAAU5E,GAGrCgF,KAiFgB,qC,OCtETqB,MA9Bf,SAAsB3H,GAAQ,IAElB4H,EAAuC5H,EAAvC4H,UAAWC,EAA4B7H,EAA5B6H,KAAM3G,EAAsBlB,EAAtBkB,MAAOC,EAAenB,EAAfmB,MAAQG,EAAOtB,EAAPsB,IACpCwG,EAAY,wBAA0BF,EAAY,OAAS,UAHtC,EAIWlF,mBAAS,IAJpB,mBAIlBqF,EAJkB,KAINC,EAJM,KAoBzB,OAbAC,qBAAU,WACFF,IAEAA,EAAWG,UAAUC,IAAI,aAGzBC,YAAW,SAACC,GAERA,EAASH,UAAUI,OAAO,eAC3B,IAAKP,MAEb,CAACA,IAGA,qBAAI/G,UAAW8G,EAAWS,IAAK,SAAAC,GAAE,OAAIR,EAAcQ,IAAnD,UACK,cAACjB,EAAA,EAAD,CAAOkB,IAAI,SAASjB,MAAM,KAAKC,OAAO,KAAKiB,eAAa,EAAC9G,IAAKN,IAC/D,uBAAON,UAAU,mBAAjB,SACME,EAAQ,IAAMC,EAAQ,KAAO0G,Q,OCVhCc,MAbf,SAAsB3I,GAAQ,IACpB4I,EAAsB5I,EAAtB4I,MAAO3I,EAAeD,EAAfC,WAEf,OACE,oBAAIe,UAAU,WAAd,SACG4H,EAAMC,KAAI,SAAAC,GAAI,OACb,cAAC,EAAD,CAA4B/H,GAAI+H,EAAK/H,GAAI8G,KAAMiB,EAAKjB,KAAMD,UAAWkB,EAAKC,KACxE9I,WAAYA,EAAYiB,MAAO4H,EAAKE,UAAW7H,MAAO2H,EAAKG,UAAW3H,IAAKwH,EAAKxH,KAD/DwH,EAAK/H,UCAjBmI,EAVX,WAAYC,GAAe,oBACvB/G,KAAKrB,GAAKoI,EAAapI,GACvBqB,KAAKyF,KAAOsB,EAAa9G,IAAI,QAC7BD,KAAK2G,KAAOI,EAAa9G,IAAI,QAC7BD,KAAK4G,UAAYG,EAAa9G,IAAI,aAClCD,KAAK6G,UAAYE,EAAa9G,IAAI,aAClCD,KAAKd,IAAM6H,EAAa9G,IAAI,QC6DrB+G,MA/Df,SAAqBpJ,GAAQ,IACnBqJ,EAAwBrJ,EAAxBqJ,QAASpJ,EAAeD,EAAfC,WADS,EAEFyC,mBAAS,IAFP,mBAEnBmF,EAFmB,KAEbyB,EAFa,OAGA5G,mBAAS,IAHT,mBAGnBkG,EAHmB,KAGZW,EAHY,KA4C1B,OAtCAtB,qBAAU,WAAM,4CACd,gCAAA9E,EAAA,6DACQqG,EAAgBpG,IAAMqG,OAAOC,OAAO,YACpCC,EAAQ,IAAIvG,IAAMwG,MAAMJ,IACxBK,QAAQ,YAAa,CAAE,OAAU,UAAW,UAAa,UAAW,SAAYR,EAAQtI,KAHhG,SAI8B4I,EAAMG,OAJpC,OAIQC,EAJR,OAKER,EAASQ,EAAclB,KAAI,SAAAM,GAAY,OAAI,IAAID,EAAaC,OAL9D,4CADc,sBASVlJ,GATW,WAAD,wBAUZ+J,KAED,CAAC/J,EAAYoJ,IA2Bd,gCACE,2CACA,8BACE,cAAC,EAAD,CAAcT,MAAOA,EAAO3I,WAAYA,MAE1C,iCACE,8BACE,uBAAOiE,KAAK,OAAOC,YAAY,cAAcnD,UAAU,eAAeqD,SAhC9E,SAA0B4F,GACxBX,EAAQW,EAAM1F,OAAOH,QA+BmFA,MAAOyD,MAE3G,8BACE,wBAAQ7G,UAAU,0BAA0BkJ,MAAO,CAAEC,WAAY,UAAY/I,QAhCrF,SAAuB6I,GAErB,IACMG,EAAc,IADJhH,IAAMqG,OAAOC,OAAO,YAEpCU,EAAYlF,IAAI,OAAQ2C,GACxBuC,EAAYlF,IAAI,QAAQ,GACxBkF,EAAYlF,IAAI,YAAajF,EAAWiB,OACxCkJ,EAAYlF,IAAI,YAAajF,EAAWkB,OACxCiJ,EAAYlF,IAAI,YAAa,CAAE,OAAU,UAAW,UAAa,UAAW,SAAYmE,EAAQtI,KAChGqJ,EAAYlF,IAAI,MAAOjF,EAAWqB,KAClC8I,EAAYC,OAAOjF,MAAK,WACpBmE,EAASX,EAAM0B,OAAO,IAAIpB,EAAakB,KACvCd,EAAQ,OAEV,SAAC9F,GACCD,QAAQC,MAAM,iCAAkCA,kB,OCUzC+G,MA/Cf,SAAqBvK,GAAQ,IACjBqJ,EAA6DrJ,EAA7DqJ,QAASmB,EAAoDxK,EAApDwK,cAAevK,EAAqCD,EAArCC,WAAY2F,EAAyB5F,EAAzB4F,qBADpB,EAEUlD,oBAAS,GAFnB,mBAEjB+H,EAFiB,KAENC,EAFM,KAQxB,OACI,sBAAK1J,UAAU,iBAAf,UACI,cAACe,EAAA,EAAD,CAAW4I,OAAK,EAAhB,SACI,eAAC3I,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAK2I,GAAI,EAAT,SACI,eAAC5I,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKiF,GAAI,EAAT,SACI,qBAAKuB,IAAI,aAAazH,UAAU,gBAAgBY,IAAqB,KAAhByH,EAAQ/H,IAZhE,6FAYgG+H,EAAQ/H,QAEzG,eAACW,EAAA,EAAD,CAAKiF,GAAI,EAAT,UACI,sBAAKlG,UAAU,kBAAf,UACI,8CACA,4BAAIqI,EAAQrD,aAGhB,sBAAKhF,UAAU,mBAAf,UACI,+CACA,4BAAIqI,EAAQnD,sBAK5B,cAACjE,EAAA,EAAD,CAAK2I,GAAI,EAAT,SACI,cAAC,EAAD,CAAavB,QAASA,EAASpJ,WAAYA,MAE/C,eAACgC,EAAA,EAAD,CAAKiI,MAAO,CAAEC,WAAgC,cAApBlK,EAAWG,KAAuB,UAAY,UACpEY,UAAU,uBADd,UAEI,cAACyD,EAAA,EAAD,CAAQzD,UAAU,kBAAkBW,QAAQ,OAAOP,QAAS,kBAAMsJ,GAAa,IAA/E,oBACA,cAACjG,EAAA,EAAD,CAAQrD,QA/B5B,WACIoJ,EAAcnB,EAAQtI,KA8B8BC,UAAU,kBAAkBW,QAAQ,SAAxE,4BAIZ,cAAC,EAAD,CAAiB+D,UAAU,EAAMH,KAAMkF,EAAWjF,YAAa,kBAAMkF,GAAa,IAC9E9E,qBAAsBA,EAAsBD,UAAW0D,EAAQtI,S,yBCZhE8J,MA/Bf,SAA2B7K,GAAQ,IAEvB8K,EAA0B9K,EAA1B8K,OAAQC,EAAkB/K,EAAlB+K,cAQhB,OACI,cAACC,EAAA,EAAD,CAAWrJ,QAAQ,UAAnB,SACKmJ,EAAOjC,KAAI,SAACoC,EAAOC,GAAR,OACR,eAAC1J,EAAA,EAAD,WACI,eAACwJ,EAAA,EAAUpK,OAAX,CAAkBI,UAAU,kBACxBI,QAAS,kBATJuE,EAS0BsF,EAAMjL,MAAMqJ,QAAQtI,GATnCoK,EASuCF,EAAMjL,MAAMC,WAAWc,QAR9FgK,EAAcpF,EAAWwF,GAD7B,IAAyBxF,EAAWwF,GAUhBnE,GAAIxF,IAAKC,OAAQ2J,SAAUF,EAAMG,WAFrC,UAGKJ,EAAMjL,MAAMqJ,QAAQvD,MACrB,qBAAK2C,IAAI,aAAazH,UAAU,YAAYwG,MAAM,KAAKC,OAAO,KAC1D7F,IAA2C,qBAA/BqJ,EAAMjL,MAAMqJ,QAAQiC,QAA0BL,EAAMjL,MAAMqJ,QAAQiC,OAAOC,SAASN,EAAMjL,MAAMC,WAAWc,IAf1H,6EADE,uGAmBL,cAACiK,EAAA,EAAUlK,SAAX,CAAoBsK,SAAUF,EAAMG,WAApC,SACI,cAAC7J,EAAA,EAAKuF,KAAN,UAAYkE,QAVTC,S,2CCgCZM,MA1Cf,SAAuBxL,GAAQ,IAEnByL,EAAuEzL,EAAvEyL,aAAcC,EAAyD1L,EAAzD0L,eAAgBC,EAAyC3L,EAAzC2L,eAAgBC,EAAyB5L,EAAzB4L,KAAMC,EAAmB7L,EAAnB6L,eAE5D,OACI,eAAC9J,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAK2I,GAAIiB,EAAiB,EAAI,GAA9B,SACI,eAACC,EAAA,EAAD,CAAYlF,KAAK,KAAK5F,UAAU,OAAOqD,SAAU,SAAAC,GAAC,OAAIoH,EAAepH,IAAIF,MAAOqH,EAAhF,UACI,cAACK,EAAA,EAAWC,QAAZ,UACI,cAACD,EAAA,EAAWtH,KAAZ,UACI,cAAC,IAAD,CAAiBd,KAAMsI,UAG/B,cAACC,EAAA,EAAD,CAAa9H,YAAY,SACrB+H,aAAW,SAASC,mBAAiB,8BAGhDN,EACG,qCACI,cAAC5J,EAAA,EAAD,UACI,eAACmK,EAAA,EAAD,CAAgBC,SAAUV,EAAgB/E,KAAK,KAAKjF,QAAQ,UAAUZ,GAAG,wBAAwB+E,MAAM,qBAAvG,UACI,cAACwG,EAAA,EAASC,KAAV,wBACA,cAACD,EAAA,EAASC,KAAV,mBACA,cAACD,EAAA,EAASC,KAAV,6BAGR,cAACtK,EAAA,EAAD,UACI,eAAC4B,EAAA,EAAKC,MAAN,CAAYO,SAAU,SAAAC,GAAC,OAAIsH,EAAKtH,EAAEC,OAAOxD,KAAKC,UAAU,aAAa+C,UAAU,yBAA/E,UACI,qBAAK/C,UAAU,cAAf,SAA6B,cAAC6C,EAAA,EAAKG,MAAN,yBAC7B,cAACH,EAAA,EAAK2I,MAAN,CAAYC,QAAM,EAAC1L,GAAG,OAAOmD,KAAK,QAAQwI,MAAM,OAAOC,KAAK,SAC5D,cAAC9I,EAAA,EAAK2I,MAAN,CAAYC,QAAM,EAAC1L,GAAG,WAAWmD,KAAK,QAAQwI,MAAM,WAAWC,KAAK,iBAI9E,QAETd,EAAiB,uBAAS,6CC/BxBe,EAZX,WAAYC,GAAe,oBACvBzK,KAAKrB,GAAK8L,EAAa9L,GACvBqB,KAAK0D,MAAQ+G,EAAaxK,IAAI,SAC9BD,KAAK4D,QAAU6G,EAAaxK,IAAI,WAChCD,KAAK8D,SAAW2G,EAAaxK,IAAI,YACjCD,KAAKI,SAAWqK,EAAaxK,IAAI,YACjCD,KAAKkJ,OAASuB,EAAaxK,IAAI,UAC/BD,KAAKd,IAAMuL,EAAaxK,IAAI,OAAOE,MACnCH,KAAK0K,KAAOD,EAAaxK,IAAI,SC6MtB0K,MA1Mf,SAAsB/M,GAAQ,IAClBC,EAAgED,EAAhEC,WAAYC,EAAoDF,EAApDE,SAAU8M,EAA0ChN,EAA1CgN,cAAeC,EAA2BjN,EAA3BiN,gBAAiBpH,EAAU7F,EAAV6F,MADrC,EAESnD,oBAAS,GAFlB,mBAElB+H,EAFkB,KAEPC,EAFO,OAGehI,mBAAS,IAHxB,mBAGlB+I,EAHkB,KAGJyB,EAHI,OAImBxK,mBAAS,IAJ5B,mBAIlByK,EAJkB,KAIFC,EAJE,OAKO1K,mBAAS,IALhB,mBAKlB2K,EALkB,KAKRC,EALQ,KAOrBC,EAAmBF,EAASG,QAAO,SAAAnE,GAAO,OAC1CA,EAAQvD,MAAM2H,cAAclC,SAASE,EAAagC,gBAClDpE,EAAQrD,QAAQyH,cAAclC,SAASE,EAAagC,kBAT/B,4CA0BzB,WAA0B3H,EAAOE,EAASE,EAAU5E,GAApD,mBAAA6B,EAAA,6DACUuK,EAAetK,IAAMqG,OAAOC,OAAO,YACnCiE,EAAa,IAAID,GAEZxI,IAAI,QAASY,GACxB6H,EAAWzI,IAAI,UAAWc,GACtB1E,EACAqM,EAAWzI,IAAI,MAAO,IAAI9B,IAAMwK,KAAKtM,EAAIqL,KAAMrL,IAG/CqM,EAAWzI,IAAI,MAAOW,EAAMvE,KAEhCqM,EAAWzI,IAAI,WAAYgB,GAC3ByH,EAAWzI,IAAI,QAAQ,IAAI2I,MAAOxC,YAClCsC,EAAWzI,IAAI,SAAU,IACzByI,EAAWzI,IAAI,WAAY9B,IAAMC,KAAKyK,UAAUC,WAAWvL,UAC5CmL,EAAWK,SAAS,UAC1B7F,IAAI/E,IAAMC,KAAKyK,WAjB5B,UAkB+BH,EAAWtD,OAlB1C,QAkBUwC,EAlBV,OAmBIS,EAAYD,EAAS/C,OAAO,IAAIsC,EAAaC,KAnBjD,6CA1ByB,sBAqEzB,SAASoB,EAAsBC,GAC3B,IAAMC,EAAU/K,IAAMqG,OAAOC,OAAO,WACtB,IAAItG,IAAMwG,MAAMuE,GACxB9L,IAAI6L,EAAWnN,IAAIqE,MAAK,SAACgJ,GAC3BA,EAAOC,UAAUjJ,MAAK,eACnB,SAAC5B,GACAD,QAAQC,MAAM,+BAAgCA,SAI1D,SAASgH,EAAc7E,GACnB,IAAM2I,EAAUlL,IAAMqG,OAAOC,OAAO,WACtB,IAAItG,IAAMwG,MAAM0E,GACxBjM,IAAIsD,GAAWP,MAAK,SAACgJ,GACvBA,EAAOC,UAAUjJ,MAAK,SAACmJ,GACnB,IAAMJ,EAAU/K,IAAMqG,OAAOC,OAAO,WAC9BC,EAAQ,IAAIvG,IAAMwG,MAAMuE,GAC9BxE,EAAME,QAAQ,YAAa,CAAE,OAAU,UAAW,UAAa,UAAW,SAAYlE,IACtFgE,EAAMG,OAAO1E,MAAK,SAACoJ,GACfA,EAAQC,QAAQR,MACjB,SAACzK,GACAD,QAAQC,MAAM,+BAAgCA,MAGlD,IAAMkL,EAAQrB,EAASvD,MAAK,SAAA6E,GAAO,OAAIA,EAAQ5N,KAAO4E,KAChDuF,EAAQmC,EAASuB,QAAQF,GAC/BrB,EAASwB,OAAO3D,EAAO,GACvBoC,EAAY,YAAID,IAChB9J,QAAQuL,IAAI,kBAAmBP,MAChC,SAAC/K,GACAD,QAAQC,MAAM,+BAAgCA,SAK1D,SAASoC,EAAqBE,EAAOE,EAASE,EAAU5E,EAAKqE,GAEzD,IAAM2I,EAAUlL,IAAMqG,OAAOC,OAAO,WACtB,IAAItG,IAAMwG,MAAM0E,GAExBjM,IAAIsD,GAAWP,MAAK,SAACgJ,GACvBA,EAAOlJ,IAAI,QAASY,GACpBsI,EAAOlJ,IAAI,UAAWc,GACtBoI,EAAOlJ,IAAI,WAAYgB,GACnB5E,EACA8M,EAAOlJ,IAAI,MAAO,IAAI9B,IAAMwK,KAAKtM,EAAIqL,KAAMrL,IAE3C8M,EAAOlJ,IAAI,MAAOW,EAAMvE,KAI5B8M,EAAO/D,OAAOjF,MAAK,SAACmJ,GAChB,IAAMG,EAAQrB,EAASvD,MAAK,SAAA6E,GAAO,OAAIA,EAAQ5N,KAAO4E,KAChDuF,EAAQmC,EAASuB,QAAQF,GAC/BrB,EAASnC,GAAOpF,MAAQA,EACxBuH,EAASnC,GAAOlF,QAAUA,EAC1BqH,EAASnC,GAAOhF,SAAWA,EAC3BmH,EAASnC,GAAO5J,IAAc,KAARA,EAAaA,EAAMiN,EAASlM,IAAI,OAAOE,MAC7D+K,EAAY,YAAID,IAChB9J,QAAQuL,IAAI,mBAAoBP,MACjC,SAAC/K,GACAD,QAAQC,MAAM,+BAAgCA,SA+B1D,GArJAyE,qBAAU,WAAM,4CACZ,gCAAA9E,EAAA,6DACUuK,EAAetK,IAAMqG,OAAOC,OAAO,YACnCC,EAAQ,IAAIvG,IAAMwG,MAAM8D,IACxB7D,QAAQ,WAAYzG,IAAMC,KAAKyK,UAAUC,WAAWvL,UAH9D,SAIgCmH,EAAMG,OAJtC,OAIUiF,EAJV,OAKIzB,EAAYyB,EAAclG,KAAI,SAAAgE,GAAY,OAAI,IAAID,EAAaC,OALnE,4CADY,sBASR5M,GATS,WAAD,wBAUR+J,KAEL,CAAC/J,KAyICA,EACD,OAAO,cAAC,IAAD,CAAUwD,GAAG,MAkBxB,IAAMuL,GALNzB,EAAmBA,EAAiBC,QAAO,SAAAnE,GAAO,OAC9CA,EAAQnD,SAASuH,cAAclC,SAAS4B,EAAeM,mBAIrB5E,KAAI,SAAAQ,GAAO,OAAI,cAAC,EAAD,CAAaA,QAASA,EAAS2D,cAAeA,EAC/FC,gBAAiBA,EACjBzC,cAAeA,EAAevK,WAAYA,EAAY2F,qBAAsBA,OAEhF,OACI,sBAAK5E,UAAU,aAAf,UACI,cAAC,EAAD,CAAUf,WAAYA,EAAYC,SAAUA,IAC5C,wDAA2BD,EAAWuC,SAASyM,iBAE/C,cAAC,EAAD,CAAepD,gBAAgB,EAAMJ,aAAcA,EAAcC,eAAgB,SAAApH,GAAC,OAAI4I,EAAgB5I,EAAEC,OAAOH,QAC3G+I,eAAgBA,EAAgBxB,eAzB5C,SAAwBP,EAAUnB,GACC,cAA3BA,EAAM1F,OAAO2K,UACb9B,EAAkB,IAGlBA,EAAkBnD,EAAM1F,OAAO2K,YAoBqCtD,KAvD5E,SAAsBuD,GACH,SAAXA,EACA9B,EAAS+B,MAAK,SAAUjM,EAAGkM,GACvB,IAAMC,EAAYzB,KAAK0B,MAAMpM,EAAE2J,MAG/B,OAFmBe,KAAK0B,MAAMF,EAAEvC,MAEZwC,KAIxBjC,EAAS+B,MAAK,SAAUjM,EAAGkM,GACvB,IAAIG,EAAQrM,EAAE+C,SAAS+I,cACnBQ,EAAQJ,EAAEnJ,SAAS+I,cACvB,OAAIO,EAAQC,GACA,EAERD,EAAQC,EACD,EAGJ,KAGfnC,EAAY,YAAID,OAiCZ,qBAAKrM,UAAU,gBAAgBkJ,MAAO,CAAEC,WAAgC,cAApBlK,EAAWG,KAAuB,UAAY,UAAlG,SACI,cAACqE,EAAA,EAAD,CAAQ9C,QAAQ,OAAOP,QAAS,kBAAMsJ,GAAa,IAAnD,2BAEJ,cAAC,EAAD,CAAmBI,OAAQkE,EAAcjE,cAlJjD,SAAuBpF,EAAWwF,GAC9B,IAAMmD,EAAUlL,IAAMqG,OAAOC,OAAO,WACtB,IAAItG,IAAMwG,MAAM0E,GAExBjM,IAAIsD,GAAWP,MAAK,SAACgJ,GACvB,IAAIsB,EAAMtB,EAAO/L,IAAI,UAChBqN,EAAInE,SAASJ,IACduE,EAAIC,KAAKxE,GAEbiD,EAAOlJ,IAAI,SAAUwK,GACrBtB,EAAO/D,OAAOjF,MAAK,WACf,IAAMsJ,EAAQrB,EAASvD,MAAK,SAAA6E,GAAO,OAAIA,EAAQ5N,KAAO4E,KAChDuF,EAAQmC,EAASuB,QAAQF,GAC/BrB,EAASnC,GAAOI,OAAOqE,KAAKxE,GAC5BmC,EAAY,YAAID,OACjB,SAAC7J,GACAD,QAAQC,MAAM,+BAAgCA,YAmIjDiH,EAAY,cAAC,EAAD,CAAiB/E,UAAU,EAAOH,KAAMkF,EACjDjF,YAAa,kBAAMkF,GAAa,IAAQjF,WApM3B,kDAoMmDI,MAAOA,IAAY,S,OCxLpF+J,MAtBf,SAAqB5P,GAAQ,IAEjB6P,EAAkB7P,EAAlB6P,cAFgB,EAGMnN,mBAAS,IAHf,mBAGjBoN,EAHiB,KAGRC,EAHQ,OAIUrN,mBAAS,IAJnB,mBAIjBsN,EAJiB,KAINC,EAJM,KAWlBC,EAAcJ,EAAQjH,KAAI,SAAAsH,GAAM,OAAI,qBAAkBnP,UAAU,eAA5B,SAA2C,cAAC6C,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOE,MAAO+L,KAAlEA,MAEpD,OACI,gCACKD,EACD,8BAAK,cAACrM,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,aAAaC,MAAO4L,EAAW3L,SAAU,SAAAC,GAAC,OAAI2L,EAAa3L,EAAEC,OAAOH,YAC/G,qBAAKpD,UAAU,oBAAf,SAAmC,cAACyD,EAAA,EAAD,CAAQrD,QAXnD,WACI2O,EAAWD,EAAQxF,OAAO0F,IAC1BC,EAAa,IACbJ,EAAcC,EAAQxF,OAAO0F,KAQU,8BCmEhCI,OAlFf,SAAsBpQ,GAAQ,IAClBuF,EAA+BvF,EAA/BuF,KAAMC,EAAyBxF,EAAzBwF,YAAa6K,EAAYrQ,EAAZqQ,QADF,EAEC3N,mBAAS,IAFV,mBAElBoD,EAFkB,KAEXC,EAFW,OAGKrD,mBAAS,IAHd,mBAGlBsD,EAHkB,KAGTC,EAHS,OAIKvD,mBAAS,IAJd,mBAIlBoN,EAJkB,KAITC,EAJS,OAKKrN,mBAAS,IAAImL,MALlB,mBAKlByC,EALkB,KAKTC,EALS,KAOzB,SAASjK,IACLP,EAAS,IACTE,EAAW,IACX8J,EAAW,IACXQ,EAAW,IACX/K,IAeJ,OACI,eAACkB,EAAA,EAAD,CAAOnB,KAAMA,EAAMoB,OAAQL,EAAYM,KAAK,KAA5C,UACI,cAACF,EAAA,EAAMjF,OAAP,CAAcoF,aAAW,EAAzB,SACI,cAACH,EAAA,EAAMI,MAAP,yBAEJ,cAACJ,EAAA,EAAMK,KAAP,UACI,eAAClD,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,CAAYkD,GAAIhF,IAAK+B,UAAU,sBAA/B,UACI,cAACF,EAAA,EAAKG,MAAN,CAAYiD,QAAM,EAACC,GAAI,EAAvB,oBAGA,cAACjF,EAAA,EAAD,CAAKiF,GAAI,GAAT,SACI,cAACrD,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,aAAaC,MAAO0B,EAAOzB,SAAU,SAAAC,GAAC,OAAIyB,EAASzB,EAAEC,OAAOH,eAI1G,eAACP,EAAA,EAAKC,MAAN,CAAYkD,GAAIhF,IAAK+B,UAAU,wBAA/B,UACI,cAACF,EAAA,EAAKG,MAAN,CAAYiD,QAAM,EAACC,GAAI,EAAvB,sBAGA,cAACjF,EAAA,EAAD,CAAKiF,GAAI,GAAT,SACI,cAACrD,EAAA,EAAKI,QAAN,CAAc+C,GAAG,WAAWG,KAAM,EAAGjD,KAAK,OAAOC,YAAY,eAAeC,MAAO4B,EAAS3B,SAAU,SAAAC,GAAC,OAAI2B,EAAW3B,EAAEC,OAAOH,eAGvI,eAACP,EAAA,EAAKC,MAAN,CAAYkD,GAAIhF,IAAK+B,UAAU,wBAA/B,UACI,cAACF,EAAA,EAAKG,MAAN,CAAYiD,QAAM,EAACC,GAAI,EAAvB,sBAGA,cAACjF,EAAA,EAAD,CAAKiF,GAAI,GAAT,SACI,cAAC,EAAD,CAAa2I,cAzCrC,SAAuBW,GACnBT,EAAWS,WA2CC,eAAC3M,EAAA,EAAKC,MAAN,CAAYkD,GAAIhF,IAAK+B,UAAU,wBAA/B,UACI,cAACF,EAAA,EAAKG,MAAN,CAAYiD,QAAM,EAACC,GAAI,EAAvB,uBAGA,cAACjF,EAAA,EAAD,CAAKiF,GAAI,EAAT,SACI,cAACrD,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOG,SAAU,SAAAC,GAAC,OAAIiM,EAAWjM,EAAEC,OAAOH,oBAM7E,eAACsC,EAAA,EAAMgB,OAAP,WACI,cAACjD,EAAA,EAAD,CAAQ9C,QAAQ,YAAYP,QAASkF,EAArC,oBAGA,cAAC7B,EAAA,EAAD,CAAQ9C,QAAQ,UAAUP,QAvDtC,WAEI,IAAIqP,EAA0B,KAAZH,EAAiB,IAAIzC,KAAS,IAAIA,KAAKyC,GACzDD,EAAQvK,EAAOE,EAAS8J,EAASW,GAEjCnK,KAkDQ,gC,OChDDoK,OA3Bf,SAAwB1Q,GAAQ,IAEpB8K,EAA+B9K,EAA/B8K,OAAQ6F,EAAuB3Q,EAAvB2Q,mBAEhB,OACI,cAAC3F,EAAA,EAAD,UACKF,EAAOjC,KAAI,SAACoC,EAAOC,GAAR,OACR,eAAC1J,EAAA,EAAD,WACI,cAACwJ,EAAA,EAAUpK,OAAX,CAAkBI,UAAU,kBAAkBgG,GAAIxF,IAAKC,OAAQ2J,SAAUF,EAAMG,WAA/E,SACKsF,EACG,eAAC3O,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAK2I,GAAI,EAAG5J,UAAU,yBAAtB,SAAgDiK,EAAMjL,MAAM4Q,KAAK9K,QACjE,cAAC7D,EAAA,EAAD,CAAK2I,GAAI,EAAG5J,UAAU,0BAAtB,SAAiD,WAAaiK,EAAMjL,MAAM4Q,KAAKC,YAGnF,8BAAM5F,EAAMjL,MAAM4Q,KAAK9K,UAG/B,cAACkF,EAAA,EAAUlK,SAAX,CAAoBsK,SAAUF,EAAMG,WAApC,SACI,cAAC7J,EAAA,EAAKuF,KAAN,UAAYkE,QAZTC,S,oBCsDZ4F,OA9Df,SAAmB9Q,GAAQ,IACfuF,EAA2CvF,EAA3CuF,KAAMC,EAAqCxF,EAArCwF,YAAauL,EAAwB/Q,EAAxB+Q,oBADL,EAEQrO,mBAAS,IAAImL,MAFrB,mBAEfyC,EAFe,KAENC,EAFM,OAGc7N,mBAapC,WACI,IAAIsO,EAAI,IAAInD,KACRoD,EAAQ,IAAMD,EAAEE,WAAa,GAC7BC,EAAM,GAAKH,EAAEI,UACbC,EAAOL,EAAEM,cAETL,EAAM3J,OAAS,IACf2J,EAAQ,IAAMA,GACdE,EAAI7J,OAAS,IACb6J,EAAM,IAAMA,GAEhB,MAAO,CAACE,EAAMJ,EAAOE,GAAKI,KAAK,KAxBUC,IAHvB,mBAGfC,EAHe,KAGHC,EAHG,KA8BtB,OACI,mCAEI,eAAChL,EAAA,EAAD,CAAOE,KAAK,KAAKrB,KAAMA,EAAMoB,OAAQnB,EACjCmM,kBAAgB,+BADpB,UAGI,cAACjL,EAAA,EAAMjF,OAAP,CAAcoF,aAAW,EAAzB,SACI,cAACH,EAAA,EAAMI,MAAP,CAAa/F,GAAG,+BAAhB,2BAIJ,cAAC2F,EAAA,EAAMK,KAAP,UACI,eAAClD,EAAA,EAAKC,MAAN,CAAYkD,GAAIhF,IAAK+B,UAAU,wBAA/B,UACI,cAACF,EAAA,EAAKG,MAAN,CAAYiD,QAAM,EAAlB,8BAGA,cAAChF,EAAA,EAAD,UACI,cAAC4B,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOE,MAAOqN,EAAYpN,SAAU,SAAAC,GAAC,OApC9DwI,EAoC2ExI,EAAEC,OAAOH,MAnClGmM,EAAWzD,QACX4E,EAAc5E,GAFlB,IAAkBA,YAwCN,cAACpG,EAAA,EAAMgB,OAAP,UACI,cAACjD,EAAA,EAAD,CAAQ9C,QAAQ,UAAUP,QA/C1C,WACI,IAAIqP,EAAiC,kBAAZH,EAAuB,IAAIzC,KAAKyC,GAAWA,EACpES,EAAoBN,GACpBjL,KA4CY,qC,2BCmCLoM,OAjDf,SAAkB5R,GAAQ,IAEd8F,EAAgB9F,EAAhB8F,MAAO8K,EAAS5Q,EAAT4Q,KAETiB,EAAmBC,WAEzB,WAGI,IAH+B,EAG3BC,EA3CZ,SAAsBC,GAmBlB,IAlBA,IAAID,EAAS,CACTE,UAAW,GACXC,gBAAiB,IAGjBC,EAAc,CACd,sBACA,sBACA,qBACA,oBACA,kBACA,kBACA,qBACA,sBACA,uBACA,uBAGKC,EAAI,EAAGA,EAAIJ,IAAgBI,EAAG,CAInC,IAAIC,EAAWF,EAAYC,EAAID,EAAY7K,QAA5B,OACXgL,EAAiBH,EAAYC,EAAID,EAAY7K,QAA5B,KAGrByK,EAAOE,UAAUtC,KAAK0C,GACtBN,EAAOG,gBAAgBvC,KAAK2C,GAGhC,OAAOP,EAYUQ,CAAa3B,EAAKd,QAAQxI,QAEnCkL,EAAY,GALe,eAOV5B,EAAKd,SAPK,IAO/B,2BAAmC,CAE/B,IAFgC,IAAzBK,EAAwB,QAC3BsC,EAAQ,EACZ,MAA0BhJ,OAAOiJ,OAAO9B,EAAK+B,cAA7C,eAA4D,CAAtC,OACExC,GAChBsC,IAGRD,EAAU7C,KAAK8C,IAdY,8BAiB/B,MAAO,CACHG,OAAQhC,EAAKd,QACb+C,SAAU,CACN,CACInG,MAAO,aACPoG,KAAMN,EACNO,gBAAiBhB,EAAOE,UACxBe,YAAajB,EAAOG,gBACpBe,YAAa,OA3BmC,CAACrC,IAiCjE,OACI,eAAC7O,EAAA,EAAD,CAAWf,UAAU,cAArB,UACI,cAACQ,EAAA,EAAKsF,MAAN,UAAehB,IAC4B,IAA1C2D,OAAOyJ,KAAKtC,EAAK+B,cAAcrL,OAC5B,mBAAG4C,MAAO,CAAC6I,gBAAiB,UAA5B,0BAEA,cAAC,OAAD,CAAKjD,QAPF,CAAEqD,OAAQ,CAAEC,SAAS,IAOFN,KAAMjB,Q,uCChFvBwB,I,qNACjBC,MAAQ,CACJhD,QAAS,EAAKtQ,MAAMsQ,QACpBiD,KAAM,EACNC,MAAO,EACPC,QAAS,EACTC,QAAS,EACTC,SAAU,I,EAUdC,gBAAkB,SAAAtD,GACd,EAAKuD,SAAS,CAAEvD,a,EAGpBwD,iBAAmB,SAAA1P,GACf,OAAIA,EAAQ,GACD,IAAMA,EAEV,GAAKA,G,EAGhB2P,mBAAqB,WACjB,IAAMC,EAAY,IAAInG,KACdyC,EAAY,EAAKgD,MAAjBhD,QAMR,GAJA,EAAKuD,SAAS,CAAEF,SAAU,KAEJrD,EAAQ2D,UAAYD,EAAUC,UAEhC,EAAG,CACnB,IAAMC,EAAa,IAAIrG,KAAKmG,GACtBG,EAAW,IAAItG,KAAKyC,GACpB8D,EAAeF,EAAWD,UAQ5BP,EAPeS,EAASF,UAIK,IADjBG,EAAe,IAM3Bb,EAAOc,KAAKC,MAAMZ,EAAO,OAC7BA,GAAkB,GAAPH,EAAY,GAAK,GAE5B,IAAIC,EAAQa,KAAKC,MAAMZ,EAAO,MAC9BA,GAAmB,GAARF,EAAa,GAExB,IAAIC,EAAUY,KAAKC,MAAMZ,EAAU,IACnCA,GAAqB,GAAVD,EAEXF,EAAOc,KAAKE,IAAIhB,GAChBC,EAAQa,KAAKE,IAAIf,GACjBC,EAAUY,KAAKE,IAAId,GACnBC,EAAUW,KAAKC,MAAMD,KAAKE,IAAIb,IAE9B,EAAKG,UAAS,iBAAO,CACjBN,OAAMC,QAAOC,UAASC,cACtB,WACA,EAAKc,MAAQpM,WAAW,EAAK2L,mBAAoB,aAGrD,EAAKF,SAAS,CAAEF,SAAU,cAC1Bc,aAAa,EAAKD,Q,mEA3DtBpS,KAAK2R,uB,6CAGLU,aAAarS,KAAKoS,S,+BA4DZ,IAAD,EACqCpS,KAAKkR,MAAvCC,EADH,EACGA,KAAMC,EADT,EACSA,MAAOC,EADhB,EACgBA,QAASC,EADzB,EACyBA,QACxBgB,EAAgBtS,KAAK0R,iBAAiBP,GACtCoB,EAAiBvS,KAAK0R,iBAAiBN,GACvCoB,EAAgBxS,KAAK0R,iBAAiBL,GACtCoB,EAAmBzS,KAAK0R,iBAAiBJ,GAE/C,OAEI,eAAC3R,EAAA,EAAD,CAAWf,UAAU,UAArB,UACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SAA6B0T,IAC7B,qBAAK1T,UAAU,aAAf,qBAEJ,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SAA6B2T,IAC7B,qBAAK3T,UAAU,aAAf,sBAEJ,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SAA6B4T,IAC7B,qBAAK5T,UAAU,aAAf,wBAEJ,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SAA6B6T,IAC7B,qBAAK7T,UAAU,aAAf,+B,GAlGe8Q,IAAMgD,YC4G1BC,OAvGf,SAAwB/U,GAAQ,IACpB4Q,EAAkD5Q,EAAlD4Q,KAAM3Q,EAA4CD,EAA5CC,WAAY+U,EAAgChV,EAAhCgV,cAAeC,EAAiBjV,EAAjBiV,aADd,EAEevS,oBAAS,GAFxB,mBAEpBwS,EAFoB,KAELC,EAFK,OAGazS,mBAASkO,EAAKd,QAAQ,IAHnC,mBAGpBsF,EAHoB,KAGNC,EAHM,OAIW3S,oBAAS,GAJpB,mBAIpB4S,EAJoB,KAIPC,EAJO,KAOvBjF,EAcJ,SAAoBA,GAChB,IAAIU,EAAI,IAAInD,KAAKyC,GACbW,EAAQ,IAAMD,EAAEE,WAAa,GAC7BC,EAAM,GAAKH,EAAEI,UACbC,EAAOL,EAAEM,cACTkE,EAAO,GAAKxE,EAAEyE,WACdhC,EAAU,GAAKzC,EAAE0E,aAEjBzE,EAAM3J,OAAS,IACf2J,EAAQ,IAAMA,GACdE,EAAI7J,OAAS,IACb6J,EAAM,IAAMA,GACZqE,EAAKlO,OAAS,IACdkO,EAAO,IAAMA,GACb/B,EAAQnM,OAAS,IACjBmM,EAAU,IAAMA,GAEpB,MAAM,GAAN,OAAUtC,EAAV,YAAiBF,EAAjB,YAA0BI,EAA1B,aAAmCmE,EAAnC,YAA2C/B,GA/BjCjC,CAAWZ,EAAKN,SAE1BR,EAAUc,EAAKd,QAAQjH,KAAI,SAAAsH,GAAM,OAAI,iCAASA,OAgC5CwF,EACF,eAACC,GAAA,EAAD,CAAS7U,GAAG,gBAAZ,UACI,cAAC6U,GAAA,EAAQ9O,MAAT,CAAeE,GAAG,KAAlB,qCACA,eAAC4O,GAAA,EAAQC,QAAT,2CACiC,iCAASvF,UAKlD,OACI,sBAAKtP,UAAU,cAAf,UACyB,cAApBf,EAAWG,KACR,cAAC2B,EAAA,EAAD,CAAW4I,OAAK,EAAhB,SACI,eAAC3I,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAK6T,GAAI,EAAT,UACI,cAAC9T,EAAA,EAAD,UACI,sBAAKhB,UAAU,eAAf,UACI,8CACA,4BAAI4P,EAAK5K,eAGjB,eAAChE,EAAA,EAAD,WACI,sBAAKhB,UAAU,gBAAf,UACI,+CACA,4BAAIsP,OAER,cAAC7L,EAAA,EAAD,CAAQzD,UAAU,WAAWW,QAAQ,UAAUP,QAAS,kBAAM+T,GAAiB,IAA/E,mCAGR,cAAClT,EAAA,EAAD,CAAK6T,GAAI,EAAT,SACI,cAAC,GAAD,CAAUhQ,MAAM,UAAU8K,KAAMA,WAK5C,cAAC/M,EAAA,EAAD,UACI,eAAC9B,EAAA,EAAD,WACQ,cAAC8B,EAAA,EAAKG,MAAN,yBAGA,cAACH,EAAA,EAAKI,QAAN,CAAc+C,GAAG,SAAS3C,SAAU,SAAAC,GAAC,OAAI+Q,EAAgB/Q,EAAEC,OAAOH,QAAlE,SACK0L,IAEL,sBAAK9O,UAAU,cAAf,UACI,cAAC+U,GAAA,EAAD,CAAgBC,QAAQ,QAAQC,UAAU,QAAQ1Q,KAAM+P,EAAaY,QAASP,EAA9E,SACI,cAAClR,EAAA,EAAD,CAAQ9C,QAAQ,UAAUP,QAvE1D,WACImU,GAAe,GACfnN,YAAW,WAAcmN,GAAe,KAAY,KACpDN,EAAaG,EAAcxE,EAAK7P,GAAId,EAAWc,KAoEnB,2BAEJ,sBAAKC,UAAU,gBAAf,UACI,mDACA,cAAC,GAAD,CAAOsP,QAAS,IAAIzC,KAAK+C,EAAKN,WAC9B,iDACA,4BAAIA,eAM3B4E,EAAgB,cAAC,GAAD,CAAW3P,KAAM2P,EAAe1P,YAAa,kBAAM2P,GAAiB,IAAQpE,oBAvFrG,SAA6BoF,GACzBnB,EAAcpE,EAAK7P,GAAIoV,MAsFyH,S,OC/CzIC,OAvDf,SAAwBpW,GAAQ,IACpB4Q,EAAS5Q,EAAT4Q,KAEJN,EAEJ,SAAoBA,GAChB,IAAIU,EAAI,IAAInD,KAAKyC,GACbW,EAAQ,IAAMD,EAAEE,WAAa,GAC7BC,EAAM,GAAKH,EAAEI,UACbC,EAAOL,EAAEM,cACTkE,EAAO,GAAKxE,EAAEyE,WACdhC,EAAU,GAAKzC,EAAE0E,aAEjBzE,EAAM3J,OAAS,IACf2J,EAAQ,IAAMA,GACdE,EAAI7J,OAAS,IACb6J,EAAM,IAAMA,GACZqE,EAAKlO,OAAS,IACdkO,EAAO,IAAMA,GACb/B,EAAQnM,OAAS,IACjBmM,EAAU,IAAMA,GAEpB,MAAM,GAAN,OAAUtC,EAAV,YAAiBF,EAAjB,YAA0BI,EAA1B,aAAmCmE,EAAnC,YAA2C/B,GAnBjCjC,CAAWZ,EAAKN,SAsB9B,OACI,qBAAKtP,UAAU,cAAf,SACI,eAACe,EAAA,EAAD,CAAW4I,OAAK,EAAhB,UACI,eAAC1I,EAAA,EAAD,WACI,cAACD,EAAA,EAAD,UACI,sBAAKhB,UAAU,eAAf,UACI,6CACA,4BAAI4P,EAAK5K,eAGjB,cAAChE,EAAA,EAAD,UACI,sBAAKhB,UAAU,gBAAf,UACI,+CACA,4BAAIsP,YAIhB,eAACtO,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAAC,GAAD,CAAU6D,MAAM,UAAU8K,KAAMA,MAEpC,cAAC3O,EAAA,EAAD,UACI,cAAC,GAAD,CAAU6D,MAAM,oBAAoB8K,KAAMA,eCrCnDyF,GAbX,WAAYC,GAAY,oBACpBlU,KAAKrB,GAAKuV,EAAUvV,GACpBqB,KAAK0D,MAAQwQ,EAAUjU,IAAI,SAC3BD,KAAK4D,QAAUsQ,EAAUjU,IAAI,WAC7BD,KAAK0N,QAAUwG,EAAUjU,IAAI,WAC7BD,KAAKI,SAAW8T,EAAUjU,IAAI,YAC9BD,KAAKkO,QAAUgG,EAAUjU,IAAI,eAAegJ,WAC5CjJ,KAAKmU,WAAaD,EAAUjU,IAAI,cAChCD,KAAKyO,OAASyF,EAAUjU,IAAI,UAC5BD,KAAKuQ,aAAe2D,EAAUjU,IAAI,iBC0N3BmU,OAvNf,SAAoBxW,GAAQ,IAChBC,EAAyBD,EAAzBC,WAAYC,EAAaF,EAAbE,SADG,EAEWwC,oBAAS,GAFpB,mBAEhB+H,EAFgB,KAELC,EAFK,OAGiBhI,mBAAS,IAH1B,mBAGhB+I,EAHgB,KAGFyB,EAHE,OAIOxK,mBAAS,IAJhB,mBAIhB+T,EAJgB,KAIPC,EAJO,iDAsBvB,WAAuB5Q,EAAOE,EAAS8J,EAASQ,GAAhD,mBAAAnN,EAAA,6DAEUwT,EAAOvT,IAAMqG,OAAOC,OAAO,SAC3BkN,EAAY,IAAID,GAEZzR,IAAI,QAASY,GACvB8Q,EAAU1R,IAAI,UAAWc,GACzB4Q,EAAU1R,IAAI,WAAY9B,IAAMC,KAAKyK,UAAUC,WAAWvL,UAC1DoU,EAAU1R,IAAI,UAAW4K,GACzB8G,EAAU1R,IAAI,aAAc,UAC5B0R,EAAU1R,IAAI,cAAeoL,GAC7BsG,EAAU1R,IAAI,SAAU,IACxB0R,EAAU1R,IAAI,eAAgB,IACf0R,EAAU5I,SAAS,UACzB7F,IAAI/E,IAAMC,KAAKyK,WAd5B,UAe2B8I,EAAUvM,OAfrC,QAeUwM,EAfV,OAgBIH,EAAWD,EAAQnM,OAAO,IAAI+L,GAAUQ,KAhB5C,6CAtBuB,sBAyCvB,SAAS5B,EAAaG,EAAc0B,EAAQC,GACxC,IAAMJ,EAAOvT,IAAMqG,OAAOC,OAAO,QACnB,IAAItG,IAAMwG,MAAM+M,GAExBtU,IAAIyU,GAAQ1R,MAAK,SAACgJ,GACpB,IAAI4I,EAAS5I,EAAO/L,IAAI,gBACxB2U,EAAOD,GAAU3B,EACjBhH,EAAOlJ,IAAI,eAAgB8R,GAC3B5I,EAAO/D,OAAOjF,MAAK,SAACmJ,GAChB,IAAMG,EAAQ+H,EAAQ3M,MAAK,SAAA6E,GAAO,OAAIA,EAAQ5N,KAAO+V,KAC/C5L,EAAQuL,EAAQ7H,QAAQF,GAC9B+H,EAAQvL,GAAOyH,aAAaoE,GAAU3B,EACtCsB,EAAW,YAAID,OAChB,SAACjT,GACAD,QAAQC,MAAM,4BAA6BA,SAkGvD,SAASwR,EAAc8B,EAAQX,GAC3B,IAAMQ,EAAOvT,IAAMqG,OAAOC,OAAO,QACnB,IAAItG,IAAMwG,MAAM+M,GAExBtU,IAAIyU,GAAQ1R,MAAK,SAACgJ,GACpBA,EAAOlJ,IAAI,cAAeiR,GAC1B/H,EAAO/D,OAAOjF,MAAK,SAACmJ,GAChB,IAAMG,EAAQ+H,EAAQ3M,MAAK,SAAA6E,GAAO,OAAIA,EAAQ5N,KAAO+V,KAC/C5L,EAAQuL,EAAQ7H,QAAQF,GAC9B+H,EAAQvL,GAAOoF,QAAU6F,EAAe9K,WACxCqL,EAAW,YAAID,OAChB,SAACjT,GACAD,QAAQC,MAAM,4BAA6BA,SAKvD,GApKAyE,qBAAU,WAAM,4CACZ,8BAAA9E,EAAA,6DACU8T,EAAY7T,IAAMqG,OAAOC,OAAO,SAChCC,EAAQ,IAAIvG,IAAMwG,MAAMqN,IACxBpN,QAAQ,WAAYzG,IAAMC,KAAKyK,UAAUC,WAAWvL,UAH9D,SAIUmH,EAAMG,OAAO1E,MAAK,SAACoJ,GACrBkI,EAAWlI,EAAQ3F,KAAI,SAAAyN,GAAS,OAAI,IAAID,GAAUC,UACnD,SAAC9S,GACAD,QAAQC,MAAM,4BAA6BA,MAPnD,4CADY,sBAWRvD,GAXS,WAAD,wBAYR+J,KAEL,CAAC/J,EAAYwW,IAkIhBA,EAAQhI,SAvBR,SAA6CyI,GACzC,IAEIX,EAFM,IAAI1I,MACG,IAAIA,KAAKqJ,EAAS5G,SACE,aAAe,SAEpD,GAAIiG,IAAeW,EAASX,WAAY,CACpC,IAAMI,EAAOvT,IAAMqG,OAAOC,OAAO,QACnB,IAAItG,IAAMwG,MAAM+M,GACxBtU,IAAI6U,EAASnW,IAAIqE,MAAK,SAACgJ,GACzB,IACI+I,EA7BhB,SAAyBC,GAGrB,IAFA,IAAIC,EAAgB,GAEpB,MAA2B5N,OAAO6N,QAAQF,GAA1C,eAAwD,CAAC,IAAD,sBAA5CG,EAA4C,KAAvCnT,EAAuC,KACpDiT,EAAc1H,KAAd,UAAsBvL,IACtB,IAAI2S,EAAM,UAAMQ,GAChBhU,QAAQuL,IAAI,uBAAyB,CAAEiI,UAAW,cAGtD,IAAIS,EAzDR,SAA8C9H,GAC1C,IAEI+H,EAFAtU,EAAI,GACJkM,EAAI,GAGRK,EAAIN,OACJ,IAAK,IAAIgD,EAAI,EAAGA,EAAI1C,EAAIpI,OAAQ8K,IACxB1C,EAAI0C,KAAOqF,GACXtU,EAAEwM,KAAKD,EAAI0C,IACX/C,EAAEM,KAAK,IAEPN,EAAEA,EAAE/H,OAAS,KAEjBmQ,EAAO/H,EAAI0C,GAGf,MAAO,CAACjP,EAAGkM,GAyCKqI,CAAqCL,GACjDM,EAvCR,SAAoBjI,GAChB,GAAmB,IAAfA,EAAIpI,OACJ,OAAQ,EAMZ,IAHA,IAAIsQ,EAAMlI,EAAI,GACVmI,EAAW,EAENzF,EAAI,EAAGA,EAAI1C,EAAIpI,OAAQ8K,IACxB1C,EAAI0C,GAAKwF,IACTC,EAAWzF,EACXwF,EAAMlI,EAAI0C,IAIlB,OAAOyF,EAwBaC,CAAWN,EAAU,IACzC,OAtBJ,SAAe9H,EAAKqI,GAGhB,IAFA,IAAIC,EAAStI,EAAIqI,GACbE,EAAU,EACL7F,EAAI,EAAGA,EAAI1C,EAAIpI,OAAQ8K,IACxB1C,EAAI0C,KAAO4F,KACTC,EAGV,OAAOA,EAAU,EAcbC,CAAMV,EAAU,GAAIG,GACb,aAGJH,EAAU,GAAGG,GAcKQ,CADC/J,EAAO/L,IAAI,iBAE7B+L,EAAOlJ,IAAI,aAAcqR,GACzBnI,EAAOlJ,IAAI,SAAUiS,GACrB/I,EAAO/D,OAAOjF,MAAK,WACf8R,EAASX,WAAaA,EACtBW,EAAS1I,QAAU2I,KACpB,SAAC3T,GACAD,QAAQC,MAAM,4BAA6BA,cA0BtDvD,EACD,OAAO,cAAC,IAAD,CAAUwD,GAAG,MAIxB,IAAI2U,EAAgB3B,EAAQjJ,QAAO,SAAAoD,GAAI,OACnCA,EAAK9K,MAAM2H,cAAclC,SAASE,EAAagC,gBAC/CmD,EAAK5K,QAAQyH,cAAclC,SAASE,EAAagC,kBAK/C4K,EADc5B,EAAQjJ,QAAO,SAAAoD,GAAI,MAAwB,WAApBA,EAAK2F,cACb1N,KAAI,SAAA+H,GAAI,OAAI,cAAC,GAAD,CAAgBA,KAAMA,EACjE3Q,WAAYA,EAAY+U,cAAeA,EAAeC,aAAcA,OAIlEqD,EADiBF,EAAc5K,QAAO,SAAAoD,GAAI,MAAwB,WAApBA,EAAK2F,cAChB1N,KAAI,SAAA+H,GAAI,OAAI,cAAC,GAAD,CAAgBA,KAAMA,EAAM3Q,WAAYA,OAG7F,OACI,sBAAKe,UAAU,UAAf,UACI,cAAC,EAAD,CAAUf,WAAYA,EAAYC,SAAUA,IAC5C,cAAC6B,EAAA,EAAD,CAAW4I,OAAK,EAAhB,SACI,eAAC3I,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAK2I,GAAI,EAAT,UACI,gDACA,qBAAK5J,UAAU,aAAakJ,MAAO,CAAEC,WAAgC,cAApBlK,EAAWG,KAAuB,UAAY,UAA/F,SACI,cAACqE,EAAA,EAAD,CAAQ9C,QAAQ,OAAOP,QAAS,kBAAMsJ,GAAa,IAAnD,wBAEJ,cAAC,GAAD,CAAgBI,OAAQuN,EAAgB1H,oBAAoB,OAEhE,eAAC1O,EAAA,EAAD,CAAK2I,GAAI,EAAT,UACI,gDACA,cAAC,EAAD,CAAeiB,gBAAgB,EAAOJ,aAAcA,EAAcC,eAAgB,SAAApH,GAAC,OAAI4I,EAAgB5I,EAAEC,OAAOH,UAChH,cAAC,GAAD,CAAgB0G,OAAQwN,EAAmB3H,oBAAoB,YAI1ElG,EAAY,cAAC,GAAD,CAAclF,KAAMkF,EAAWjF,YAAa,kBAAMkF,GAAa,IAAQ2F,QAjNrE,oDAiN4F,S,OCnGxGkI,OAxHf,SAAwBvY,GAAQ,IACpBuF,EAA+EvF,EAA/EuF,KAAMC,EAAyExF,EAAzEwF,YAAagT,EAA4DxY,EAA5DwY,UAAWzB,EAAiD/W,EAAjD+W,OAAQrR,EAAyC1F,EAAzC0F,SAAU+S,EAA+BzY,EAA/ByY,oBAAqB5S,EAAU7F,EAAV6F,MADlD,EAEDnD,mBAAS,kBAFR,mBAEpBJ,EAFoB,KAEbK,EAFa,OAGLD,mBAAS,OAHJ,mBAGpBE,EAHoB,KAGfC,EAHe,OAIDH,mBAAS,QAJR,mBAIpBxB,EAJoB,KAIb0D,EAJa,OAKDlC,mBAAS,SALR,mBAKpBvB,EALoB,KAKb0D,EALa,OAMKnC,mBAAS,YANd,mBAMpBF,EANoB,KAMVsC,EANU,OAOLpC,mBAAS,IAPJ,mBAOpBpB,EAPoB,KAOf8E,EAPe,KAQrBC,EAAoC,qBAAVR,EAAwB,GAAKA,EAAMvE,IAAIiB,MAGvE,SAAS+D,IACL3D,EAAS,IACTE,EAAO,IACP+B,EAAS,IACTC,EAAS,IACTC,EAAY,IACZsB,EAAO,IACPZ,IAwBJ,IAAMe,EAASjF,EAAMkF,IAAIC,gBAAgBnF,GAAO,GAEhD,OACI,eAACoF,EAAA,EAAD,CAAOnB,KAAMA,EAAMoB,OAAQL,EAAYM,KAAK,KAA5C,UACI,cAACF,EAAA,EAAMjF,OAAP,CAAcoF,aAAW,EAAzB,SACI,eAACH,EAAA,EAAMI,MAAP,WAAcpB,EAAW,wBAA0B,oBAAnD,SAEJ,cAACgB,EAAA,EAAMK,KAAP,UACI,eAAClD,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,CAAYkD,GAAIhF,IAAK+B,UAAU,iBAA/B,UACI,cAACF,EAAA,EAAKG,MAAN,CAAYiD,QAAM,EAACC,GAAI,EAAvB,yBAGA,cAACjF,EAAA,EAAD,CAAKiF,GAAI,GAAT,SACI,cAACrD,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,mBAAmBC,MAAOlD,EAAOmD,SAAU,SAAAC,GAAC,OAAIM,EAASN,EAAEC,OAAOH,eAIhH,eAACP,EAAA,EAAKC,MAAN,CAAYkD,GAAIhF,IAAK+B,UAAU,iBAA/B,UACI,cAACF,EAAA,EAAKG,MAAN,CAAYiD,QAAM,EAACC,GAAI,EAAvB,wBACA,cAACjF,EAAA,EAAD,CAAKiF,GAAI,GAAT,SACI,cAACrD,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,kBAAkBC,MAAOjD,EAAOkD,SAAU,SAAAC,GAAC,OAAIO,EAASP,EAAEC,OAAOH,eAG/G,eAACP,EAAA,EAAKC,MAAN,CAAYkD,GAAIhF,IAAK+B,UAAU,iBAA/B,UACI,cAACF,EAAA,EAAKG,MAAN,CAAYiD,QAAM,EAACC,GAAI,EAAvB,4BACA,eAACjF,EAAA,EAAD,CAAKiF,GAAI,GAAT,UACI,cAACrD,EAAA,EAAKI,QAAN,CAAcC,KAAK,QAAQC,YAAY,cAAcC,MAAO9B,EAAO+B,SAAU,SAAAC,GAAC,OAAI3B,EAAS2B,EAAEC,OAAOH,UACpG,cAACP,EAAA,EAAKW,KAAN,CAAWxD,UAAU,aAArB,kEAGR,eAAC6C,EAAA,EAAKC,MAAN,CAAYkD,GAAIhF,IAAK+B,UAAU,oBAA/B,UACI,cAACF,EAAA,EAAKG,MAAN,CAAYiD,QAAM,EAACC,GAAI,EAAvB,uBACA,cAACjF,EAAA,EAAD,CAAKiF,GAAI,GAAT,SACI,cAACrD,EAAA,EAAKI,QAAN,CAAcC,KAAK,WAAWC,YAAY,WAAWC,MAAOxB,EAAKyB,SAAU,SAAAC,GAAC,OAAIzB,EAAOyB,EAAEC,OAAOH,eAGxG,eAACP,EAAA,EAAKC,MAAN,CAAYkD,GAAIhF,IAAK+B,UAAU,oBAA/B,UACI,cAACF,EAAA,EAAKG,MAAN,CAAYiD,QAAM,EAACC,GAAI,EAAvB,4BACA,cAACjF,EAAA,EAAD,CAAKiF,GAAI,GAAT,SACI,cAACrD,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,oCAAoCC,MAAO5B,EAAU6B,SAAU,SAAAC,GAAC,OAAIQ,EAAYR,EAAEC,OAAOH,eAGvI,eAACP,EAAA,EAAKC,MAAN,CAAYkD,GAAIhF,IAAK+B,UAAU,sBAA/B,UACI,cAACF,EAAA,EAAKG,MAAN,CAAYiD,QAAM,EAACC,GAAI,EAAvB,wBAGA,cAACjF,EAAA,EAAD,CAAKiF,GAAI,EAAT,SACI,cAACrD,EAAA,EAAKI,QAAN,CAAcjD,UAAU,aAAakD,KAAK,OAAOkD,OAAO,UAAU/C,SAvD1F,SAA0BC,GACQ,IAA1BA,EAAEC,OAAO8C,MAAMC,OACflB,EAAO9B,EAAEC,OAAO8C,MAAM,IAEtBjB,EAAO,WAqDK,cAACnE,EAAA,EAAD,CAAKiF,GAAI,EAAT,SACI,cAACK,EAAA,EAAD,CAAOC,MAAM,MAAMC,OAAO,MAAM7F,IAAgB,KAAX2E,EAAgBF,EAAmBE,cAMxF,8BACKb,EACG,cAACgB,EAAA,EAAMgB,OAAP,UACI,cAACjD,EAAA,EAAD,CAAQ9C,QAAQ,UAAUP,QAzE9C,WACIqX,EAAoBvX,EAAOC,EAAOmB,EAAOE,EAAUI,EAAKtB,EAAKyV,GAE7DzQ,KAsEgB,6BAKJ,eAACI,EAAA,EAAMgB,OAAP,WACI,cAACjD,EAAA,EAAD,CAAQ9C,QAAQ,YAAYP,QAASkF,EAArC,oBAGA,cAAC7B,EAAA,EAAD,CAAQ9C,QAAQ,UAAUP,QA1F9C,WAGIoX,EAAUtX,EAAOoB,EAAOnB,EAAOqB,EAAUlB,EAAKsB,GAC9C0D,KAsFgB,iC,OC/DToS,OA9Cf,SAAoB1Y,GAAQ,IAChB2Y,EAA8C3Y,EAA9C2Y,OAAQC,EAAsC5Y,EAAtC4Y,aAAcH,EAAwBzY,EAAxByY,oBADP,EAEW/V,oBAAS,GAFpB,mBAEhB+H,EAFgB,KAELC,EAFK,KASvB,OACI,sBAAK1J,UAAU,gBAAf,UACI,cAACe,EAAA,EAAD,CAAW4I,OAAK,EAAhB,SACI,eAAC3I,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKiF,GAAI,GAAT,SACI,eAAClF,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKiF,GAAI,EAAT,SACI,qBAAKuB,IAAI,YAAYzH,UAAU,eAAeY,IAAoB,KAAf+W,EAAOrX,IAb7D,sGAa6FqX,EAAOrX,QAErG,eAACW,EAAA,EAAD,CAAKiF,GAAI,EAAT,UACI,sBAAKlG,UAAU,cAAf,UACI,2CACA,4BAAI2X,EAAOzX,MAAQ,IAAMyX,EAAOxX,WAEpC,sBAAKH,UAAU,eAAf,UACI,4CACA,4BAAI2X,EAAOrW,WAEf,sBAAKtB,UAAU,kBAAf,UACI,+CACA,4BAAI2X,EAAOnW,sBAK3B,eAACP,EAAA,EAAD,CAAKjB,UAAU,sBAAsBkG,GAAI,EAAzC,UACI,cAACzC,EAAA,EAAD,CAAQzD,UAAU,kBAAkBW,QAAQ,OAAOP,QAAS,kBAAMsJ,GAAa,IAA/E,oBACA,cAACjG,EAAA,EAAD,CAAQrD,QA/B5B,WACIwX,EAAaD,EAAO5X,KA8B+BC,UAAU,kBAAkBW,QAAQ,SAAvE,4BAIX8I,EAAY,cAAC,GAAD,CAAgB/E,UAAU,EAAMH,KAAMkF,EAAWjF,YAAa,kBAAMkF,GAAa,IAC1F+N,oBAAqBA,EAAqB1B,OAAQ4B,EAAO5X,KAAS,S,cCvBnE8X,OApBf,SAA0B7Y,GAAQ,IAEtB8K,EAAW9K,EAAX8K,OAER,OACI,cAACE,EAAA,EAAD,UACKF,EAAOjC,KAAI,SAACoC,EAAOC,GAAR,OACR,eAAC1J,EAAA,EAAD,WACI,cAACwJ,EAAA,EAAUpK,OAAX,CAAkBI,UAAU,kBAAkBgG,GAAIxF,IAAKC,OAAQ2J,SAAUF,EAAMG,WAA/E,SACI,8BAAMJ,EAAMjL,MAAM2Y,OAAOzX,MAAQ,IAAM+J,EAAMjL,MAAM2Y,OAAOxX,UAE9D,cAAC6J,EAAA,EAAUlK,SAAX,CAAoBsK,SAAUF,EAAMG,WAApC,SACI,cAAC7J,EAAA,EAAKuF,KAAN,UAAYkE,QALTC,SC0JZ4N,OAxJf,SAAqB9Y,GAAQ,IACjBC,EAAgCD,EAAhCC,WAAYC,EAAoBF,EAApBE,SAAU2F,EAAU7F,EAAV6F,MADN,EAEUnD,oBAAS,GAFnB,mBAEjB+H,EAFiB,KAENC,EAFM,OAGgBhI,mBAAS,IAHzB,mBAGjB+I,EAHiB,KAGHyB,EAHG,OAIMxK,mBAAS,IAJf,mBAIjBqW,EAJiB,KAIRC,EAJQ,KAKpBC,EAAkBF,EAAQvL,QAAO,SAAAmL,GAAM,OACvCA,EAAOzX,MAAMuM,cAAclC,SAASE,EAAagC,gBACjDkL,EAAOxX,MAAMsM,cAAclC,SAASE,EAAagC,gBACjDkL,EAAOrW,MAAMmL,cAAclC,SAASE,EAAagC,kBAkBrD,GAdAxF,qBAAU,WAAM,4CACZ,gCAAA9E,EAAA,6DACU+V,EAAe9V,IAAMqG,OAAOC,OAAO,SACnCC,EAAQ,IAAIvG,IAAMwG,MAAMsP,IACxBrP,QAAQ,OAAQ,UAH1B,SAI+BF,EAAMG,OAJrC,OAIUqP,EAJV,OAKIH,EAAWG,EAAatQ,KAAI,SAAAsQ,GAAY,OAAI,IAAIjX,EAAUiX,OAL9D,4CADY,sBASRlZ,GATS,WAAD,wBAUR+J,KAEL,CAAC/J,KAECA,EACD,OAAO,cAAC,IAAD,CAAUwD,GAAG,MA2CxB,SAASmV,EAAa7B,GAClB,IAAM1T,EAAO,IAAID,IAAMC,KACT,IAAID,IAAMwG,MAAMvG,GAGxBhB,IAAI0U,GAAQ3R,MAAK,SAACgU,GAEpBA,EAAK/K,UAAUjJ,MAAK,SAACmJ,GACjB,IAAMG,EAAQqK,EAAQjP,MAAK,SAAA6E,GAAO,OAAIA,EAAQ5N,KAAOgW,KAC/C7L,EAAQ6N,EAAQnK,QAAQF,GAC9BqK,EAAQlK,OAAO3D,EAAO,GACtB8N,EAAW,YAAID,IACfxV,QAAQuL,IAAI,eAAgBP,MAC7B,SAAC/K,GACAD,QAAQC,MAAM,4BAA6BA,SAKvD,SAASiV,EAAoBvX,EAAOC,EAAOmB,EAAOE,EAAUI,EAAKtB,EAAKyV,GAElE,IAAM1T,EAAO,IAAID,IAAMC,KACT,IAAID,IAAMwG,MAAMvG,GAGxBhB,IAAI0U,GAAQ3R,MAAK,SAACgU,GAEpBA,EAAKlU,IAAI,QAAS5C,GAClB8W,EAAKlU,IAAI,QAAShE,GAClBkY,EAAKlU,IAAI,QAAS/D,GAClBiY,EAAKlU,IAAI,aAAc5C,GAEvB8W,EAAKlU,IAAI,WAAY1C,GACjBlB,EACA8X,EAAKlU,IAAI,MAAO,IAAI9B,IAAMwK,KAAKtM,EAAIqL,KAAMrL,IAGzC8X,EAAKlU,IAAI,MAAOW,EAAMvE,KAI1B8X,EAAK/O,OAAOjF,MAAK,SAACmJ,GACd,IAAMG,EAAQqK,EAAQjP,MAAK,SAAA6E,GAAO,OAAIA,EAAQ5N,KAAOgW,KAC/C7L,EAAQ6N,EAAQnK,QAAQF,GAC9BqK,EAAQ7N,GAAOhK,MAAQA,EACvB6X,EAAQ7N,GAAO/J,MAAQA,EACvB4X,EAAQ7N,GAAO5I,MAAQA,EACvByW,EAAQ7N,GAAO1I,SAAWA,EAC1BuW,EAAQ7N,GAAOtI,IAAMA,EACrBmW,EAAQ7N,GAAO5J,IAAc,KAARA,EAAaA,EAAMiN,EAASlM,IAAI,OAAOE,MAC5DyW,EAAW,YAAID,IACfxV,QAAQuL,IAAI,eAAgBP,MAC7BlJ,OAAM,SAAC7B,GACND,QAAQC,MAAM,4BAA6BA,SAUvD,IAAM6V,EAAaJ,EAAgBpQ,KAAI,SAAA8P,GAAM,OAAI,cAAC,GAAD,CAAYA,OAAQA,EACjEC,aAAcA,EAAc3Y,WAAYA,EAAYwY,oBAAqBA,OAE7E,OACI,sBAAKzX,UAAU,YAAf,UACI,cAAC,EAAD,CAAUf,WAAYA,EAAYC,SAAUA,IAC5C,uDAA0BD,EAAWuC,SAASyM,iBAC9C,cAAC,EAAD,CAAepD,gBAAgB,EAAOJ,aAAcA,EAAcC,eAAgB,SAAApH,GAAC,OAAI4I,EAAgB5I,EAAEC,OAAOH,UAChH,qBAAKpD,UAAU,gBAAf,SACI,cAACyD,EAAA,EAAD,CAAQ9C,QAAQ,OAAOP,QAAS,kBAAMsJ,GAAa,IAAnD,0BAEJ,cAAC,GAAD,CAAkBI,OAAQuO,IACzB5O,EAAY,cAAC,GAAD,CAAgB/E,UAAU,EAAOH,KAAMkF,EAAWjF,YAAa,kBAAMkF,GAAa,IAC3F8N,UApHZ,SAAmBtX,EAAOoB,EAAOnB,EAAOqB,EAAUlB,EAAKsB,GAEnD,IAAMwW,EAAO,IAAIhW,IAAMC,KACvB+V,EAAKlU,IAAI,WAAYhE,GACrBkY,EAAKlU,IAAI,QAAS5C,GAClB8W,EAAKlU,IAAI,QAAShE,GAClBkY,EAAKlU,IAAI,QAAS/D,GAClBiY,EAAKlU,IAAI,WAAY1C,GACjBlB,EACA8X,EAAKlU,IAAI,MAAO,IAAI9B,IAAMwK,KAAKtM,EAAIqL,KAAMrL,IAGzC8X,EAAKlU,IAAI,MAAOW,EAAMvE,KAE1B8X,EAAKlU,IAAI,OAAQ,UACjBkU,EAAKlU,IAAI,WAAYtC,GACrBwW,EAAKlU,IAAI,aAAc5C,GACvB,IAAIgX,EAAelW,IAAMC,KAAKyK,UAAUzL,IAAI,gBAE5C+W,EAAKjU,SAASC,MAAK,SAACgU,GAEhB,IAAIG,EAAU,IAAInW,IAAM2B,IAAIqU,GAC5BG,EAAQC,sBAAqB,GAC7BD,EAAQvU,qBAAoB,GAC5BoU,EAAKK,OAAOF,GACZH,EAAK/O,OACLjH,IAAMC,KAAKqW,OAAOJ,GAAclU,MAAK,SAAUgU,OAE5C,SAAU5V,OAGbwV,EAAWD,EAAQzO,OAAO,IAAIpI,EAAUkX,KACxC7V,QAAQuL,IAAI,iBAAkBsK,MAC/B/T,OAAM,SAAA7B,GACLD,QAAQC,MAAM,8BAA+BA,OAkFnBqC,MAAOA,IAAY,SCtJ1C8T,GAPX,WAAYC,GAAa,oBACrBxX,KAAKrB,GAAK6Y,EAAW7Y,GACrBqB,KAAKuK,KAAOiN,EAAWvX,IAAI,QAC3BD,KAAKd,IAAMsY,EAAWvX,IAAI,QC4DnBwX,OAlDf,WAAgB,IAAD,EACuBnX,mBAClCU,IAAMC,KAAKyK,UAAY,IAAI5L,EAAUkB,IAAMC,KAAKyK,WAAa,MAFlD,mBACN7N,EADM,KACM6Z,EADN,OAGiCpX,mBAAS,IAH1C,mBAGNqX,EAHM,KAGWC,EAHX,KAITC,EAAWC,EAAU,sBACrBC,EAAYD,EAAU,mBAa1B,SAASE,IACPN,EAAc,MACd1W,IAAMC,KAAKgX,SAGb,SAASC,EAAYC,GACnBT,EAAcS,GAGhB,SAASL,EAAUvN,GAIjB,OAHUoN,EAAgBjQ,MAAK,SAAA0Q,GAC7B,OAAOA,EAAI7N,OAASA,KAIxB,OA1BA1E,qBAAU,WAAM,4CACd,gCAAA9E,EAAA,6DACQsX,EAAwBrX,IAAMqG,OAAOC,OAAO,oBAC5CC,EAAQ,IAAIvG,IAAMwG,MAAM6Q,GAFhC,SAGuC9Q,EAAMG,OAH7C,OAGQ4Q,EAHR,OAIEV,EAAmBU,EAAuB7R,KAAI,SAAA8R,GAAqB,OAAI,IAAIhB,GAAWgB,OAJxF,4CADc,uBAAC,WAAD,wBAQd3Q,KACC,IAoBD,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4Q,OAAK,EAACC,KAAK,IAAlB,SAAsB,cAAC,EAAD,CAAU5a,WAAYA,EAAYC,SAAUka,MAClE,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,SAAlB,SAA2B,cAAC,EAAD,CAAW5a,WAAYA,EAAYiD,QAASoX,MACvE,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,UAAlB,SAA4B,cAAC,EAAD,CAAY5a,WAAYA,EAAYiD,QAASoX,MACzE,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,WAAlB,SAA6B,cAAC,GAAD,CAAa5a,WAAYA,EAAYC,SAAUka,EAAcvU,MAAOsU,MACjG,eAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,YAAlB,cAA+B,cAAC,EAAD,CAAc5a,WAAYA,EAAYC,SAAUka,EAAcvU,MAAOoU,IAApG,OACA,eAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,UAAlB,cAA6B,cAAC,GAAD,CAAY5a,WAAYA,EAAYC,SAAUka,aC9CpEU,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5V,MAAK,YAAkD,IAA/C6V,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEd3X,IAAMkY,UAAY,gCAClBlY,IAAMmY,WACJ,2CACA,4CAGFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bd,O","file":"static/js/main.9d3a5ab0.chunk.js","sourcesContent":["import { Navbar, Nav } from \"react-bootstrap\";\n\n\nfunction HoaNavbr(props) {\n    const { activeUser, onLogout } = props;\n    let tenantLink = null;\n\n    if (activeUser) {\n        if (activeUser.role === \"committee\") {\n            tenantLink = <Nav.Link href=\"#/tenants\">Tenants</Nav.Link>;\n        }\n    }\n\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand href=\"#/\">HOA Systems</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    {activeUser ? <Nav.Link href=\"#/messages\">Messages</Nav.Link> : null}\n                    {activeUser ? <Nav.Link href=\"#/voting\">Voting</Nav.Link> : null}\n                    {tenantLink}\n                </Nav>\n                <Nav className=\"ml-auto\">\n                    {activeUser ? null : <Nav.Link href=\"#/login\">Login</Nav.Link>}\n                    {activeUser ? null : <Nav.Link href=\"#/signup\">Signup</Nav.Link>}\n                    {activeUser ? <Nav.Link disabled>{\"Hi \" + activeUser.fname + \" \" + activeUser.lname + \" :)\"}</Nav.Link> : null}\n                    {activeUser ? <Nav.Link onClick={() => onLogout()}>Logout</Nav.Link> : null}\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default HoaNavbr;","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport \"./HomePageCard.css\"\n\n\nfunction HomePageCard(props) {\n    const { img, desc } = props;\n\n    return (\n        <Card className=\"c-home-page-card\">\n            <Card.Header>{desc}</Card.Header>\n            <Card.Img variant=\"top\" src={img} />\n        </Card>\n    );\n}\n\nexport default HomePageCard;\n","import { Col, Container, Jumbotron, Row } from \"react-bootstrap\";\nimport HoaNavbr from \"../../components/HOANavbar/HOANavbr\";\nimport HomePageCard from \"../../components/HomePageCard/HomePageCard\";\n\nimport \"./HomePage.css\"\n\nfunction HomePage(props) {\n    const { activeUser, onLogout } = props;\n\n    return (\n        <div className=\"p-home\">\n            <HoaNavbr activeUser={activeUser} onLogout={onLogout} />\n            <Jumbotron>\n                <Container className=\"homePageTitle\">\n                    <h4>Welcome to HOA Management System</h4>\n                    <p>Take your Homeowner Association Management to the next level and get an easy UI for full transparency</p>\n                </Container>\n\n            </Jumbotron>\n            <Container className=\"homePageCards\">\n                <Row>\n                    <Col><HomePageCard img=\"https://www.brandknewmag.com/wp-content/uploads/2018/11/advt-283.jpg\" desc=\"Full Transparency\"></HomePageCard></Col>\n                    <Col><HomePageCard img=\"https://thumbor.forbes.com/thumbor/960x0/https%3A%2F%2Fspecials-images.forbesimg.com%2Fdam%2Fimageserve%2F1063184564%2F960x0.jpg%3Ffit%3Dscale\" desc=\"Vote Online\"></HomePageCard></Col>\n                    <Col><HomePageCard img=\"https://images.squarespace-cdn.com/content/v1/527fb6bae4b04f95c720a907/1522090505822-63JM5RD7L5EQ9JE8RIFC/ke17ZwdGBToddI8pDm48kARgRj3gF56o5pPCLcgX83YUqsxRUqqbr1mOJYKfIPR7LoDQ9mXPOjoJoqy81S2I8N_N4V1vUb5AoIIIbLZhVYxCRW4BPu10St3TBAUQYVKcLhP6FrlsjHNVjgHYYFOnZY2fkf53yXnTjPV0F2ewkRAjGmv5qrb73FDOk_nyAWmN/glenn-carstens-peters-203007.jpg\" desc=\"Write a message\"></HomePageCard></Col>\n                </Row>\n            </Container>\n        </div>\n    )\n\n}\n\nexport default HomePage;","\nclass UserModel {\n    constructor(parseUser) {\n        this.id = parseUser.id;\n        this.fname = parseUser.get(\"fname\");\n        this.lname = parseUser.get(\"lname\");\n        this.email = parseUser.get(\"emailAddrr\");\n        this.role = parseUser.get(\"role\");\n        this.img = typeof parseUser.get(\"img\") === 'undefined' ? \"\" : parseUser.get(\"img\").url();\n        this.building = parseUser.get(\"building\");\n    }\n}\n\nexport default UserModel;","import { useState } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\nimport { Form, Button, Alert, Container } from \"react-bootstrap\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport './LoginPage.css'\nimport UserModel from \"../../model/UserModel\";\nimport Parse from 'parse';\n\nfunction LoginPage(props) {\n    const [email, setEmail] = useState(\"john@john.com\");\n    const [pwd, setPwd] = useState(\"123\");\n    const [showLoginError, setShowLoginError] = useState(false);\n    const [redirectToMessages, setRedirectToMessages] = useState(false);\n    const { onLogin } = props;\n\n\n    async function login() {\n        try {\n            const parseUser = await Parse.User.logIn(email, pwd);\n            // Trigger onLogin event prop + update redirect state so we will redirect to recipes page\n            onLogin(new UserModel(parseUser));\n            setRedirectToMessages(true);\n        } catch (error) {\n            // show an error alert\n            console.error('Error while logging in user', error);\n            setShowLoginError(true);\n        }\n    }\n\n\n    if (redirectToMessages) {\n        return <Redirect to=\"/messages\" />;\n    }\n\n    return (\n        <Container className=\"p-login\">\n            <Link className=\"goBackLink\" to=\"/\"><FontAwesomeIcon icon={faArrowLeft} />Back</Link>\n            <h1>Login to HOA and make a difference</h1>\n            <p>or <Link to=\"/signup\">create an account</Link></p>\n            {showLoginError ? <Alert variant=\"danger\">Invalid Credentials!</Alert> : null}\n            <Form>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={e => setEmail(e.target.value)} />\n                    <Form.Text className=\"text-muted\">\n                        We'll never share your email with anyone else.\n                    </Form.Text>\n                </Form.Group>\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={pwd} onChange={e => setPwd(e.target.value)} />\n                </Form.Group>\n                <Button variant=\"success\" type=\"button\" block onClick={login}>\n                    Login\n                </Button>\n            </Form>\n        </Container>\n    )\n\n}\n\nexport default LoginPage;","import { useState } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\nimport { Form, Button, Container } from \"react-bootstrap\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport './SignupPage.css'\nimport Parse from 'parse';\nimport UserModel from \"../../model/UserModel\";\n\nfunction SignupPage(props) {\n    const [email, setEmail] = useState(\"eyal@barak.com\");\n    const [pwd, setPwd] = useState(\"123\");\n    const [fname, setfname] = useState(\"Eyal\");\n    const [lname, setlname] = useState(\"Barak\");\n    const [building, setBuilding] = useState(\"Einstein\");\n    const [redirectToMessages, setRedirectToMessages] = useState(false);\n    const { onLogin } = props;\n\n\n    function SignUp() {\n        var acl = new Parse.ACL();\n        acl.setPublicReadAccess(true);\n\n        const newUser = new Parse.User();\n        newUser.set('username', fname);\n        newUser.set('email', email);\n        newUser.set('fname', fname);\n        newUser.set('lname', lname);\n        newUser.set('building', building);\n        newUser.set('img', \"\");\n        newUser.set('role', \"committee\");\n        newUser.set('password', pwd);\n        newUser.set('emailAddrr', email);\n        newUser.signUp().then((newUser) => {\n            onLogin(new UserModel(newUser));\n            setRedirectToMessages(true);\n        }).catch(error => {\n            console.error('Error while signing up user', newUser);\n        });\n    }\n\n\n    if (redirectToMessages) {\n        return <Redirect to=\"/messages\" />;\n    }\n\n\n    return (\n        <Container className=\"p-signup\">\n            <Link className=\"goBackLink\" to=\"/\"> <FontAwesomeIcon icon={faArrowLeft} />Back</Link>\n            <h1>Create a Committee Member Account</h1>\n            <Form>\n                <Form.Group controlId=\"formBasicfname\">\n                    <Form.Label>First Name</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter first name\" value={fname} onChange={e => setfname(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId=\"formBasiclname\">\n                    <Form.Label>Last Name</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter last name\" value={lname} onChange={e => setlname(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={e => setEmail(e.target.value)} />\n                    <Form.Text className=\"text-muted\">\n                        We'll never share your email with anyone else.\n                    </Form.Text>\n                </Form.Group>\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={pwd} onChange={e => setPwd(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicbuilding\">\n                    <Form.Label>Building/Condomium Community Name</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Building/Condomium Community Name\" value={building} onChange={e => setBuilding(e.target.value)} />\n                </Form.Group>\n\n                <Button variant=\"warning\" type=\"button\" block onClick={SignUp}>\n                    SignUp\n                </Button>\n            </Form>\n        </Container>\n    )\n\n}\n\nexport default SignupPage;","import { useState } from \"react\";\nimport { Button, Modal, Form, Col, Row, Image } from \"react-bootstrap\";\nimport './NewMessageModal.css'\n\nfunction NewMessageModal(props) {\n    const { show, handleClose, addMessage, isUpdate, messageId, updateMessageContent, phImg } = props;\n    const [title, setTitle] = useState(\"\");\n    const [details, setDetails] = useState(\"\");\n    const [priority, SetPriority] = useState(\"Info\");\n    const [img, setImg] = useState(\"\");\n    const placeHolderImage = typeof phImg === 'undefined' ? \"\" : phImg.img.url();\n\n    function closeModal() {\n        setTitle(\"\");\n        setDetails(\"\");\n        setImg(\"\");\n        handleClose();\n    }\n\n    function handleAddMessage() {\n        // 1) triggers addMessage at App that will then add this message to its messages state\n        addMessage(title, details, priority, img);\n\n        // 2) cleanup (clean all field + close the modal)\n        closeModal();\n    }\n\n    function handleUpdateMessage() {\n        updateMessageContent(title, details, priority, img, messageId);\n\n        closeModal();\n    }\n\n    function handleFileChange(e) {\n        if (e.target.files.length === 1) {\n            setImg(e.target.files[0]);\n        } else {\n            setImg(null);\n        }\n    }\n\n    const imgURL = img ? URL.createObjectURL(img) : \"\";\n\n    return (\n        <Modal show={show} onHide={closeModal} size=\"xl\">\n            <Modal.Header closeButton>\n                <Modal.Title>{isUpdate ? \"Update Message\" : \"Create New Message\"}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Group as={Row} controlId=\"formHorizontalTitle\">\n                        <Form.Label column sm={2}>\n                            Title:\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"text\" placeholder=\"Message Title\" value={title} onChange={e => setTitle(e.target.value)} />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalDetails\">\n                        <Form.Label column sm={2}>\n                            Details:\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"textarea\" rows={3} type=\"text\" placeholder=\"Message Details\" value={details} onChange={e => setDetails(e.target.value)} />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalPriority\">\n                        <Form.Label column sm={2}>\n                            Priority:\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" onChange={e => SetPriority(e.target.value)}>\n                                <option > Info</option>\n                                <option >Important</option>\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalImage\">\n                        <Form.Label column sm={2}>\n                            Image URL:\n                        </Form.Label>\n                        <Col sm={5}>\n                            <Form.Control className=\"chooseFile\" type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n                        </Col>\n                        <Col sm={5}>\n                            <Image width=\"200\" height=\"200\" src={imgURL === \"\" ? placeHolderImage : imgURL} />\n                        </Col>\n                    </Form.Group>\n                </Form>\n\n            </Modal.Body>\n            <div>\n                {isUpdate ?\n                    <Modal.Footer>\n                        <Button variant=\"primary\" onClick={handleUpdateMessage}>\n                            Update Message\n                        </Button>\n                    </Modal.Footer>\n                    :\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={closeModal}>\n                            Cancel\n                        </Button>\n                        <Button variant=\"primary\" onClick={handleAddMessage}>\n                            Create Message\n                    </  Button>\n                    </Modal.Footer>}\n            </div>\n        </Modal>\n    );\n}\n\nexport default NewMessageModal;","import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Image } from 'react-bootstrap';\nimport './CommentsItem.css';\n\nfunction CommentsItem(props) {\n\n    const { completed, text, fname, lname , img} = props;\n    var itemClass = \"form-check todoitem \" + (completed ? \"done\" : \"undone\");\n    const [added_item, SetAdded_item] = useState(\"\");\n\n    // Only for higlight purpose of the added comment\n    useEffect(() => {\n        if (added_item) {\n            // 1. Add highlight class.\n            added_item.classList.add(\"highlight\");\n\n            // 2. Set timeout.\n            setTimeout((listItem) => {\n                // 3. Remove highlight class.\n                listItem.classList.remove(\"highlight\");\n            }, 500, added_item);\n        }\n    }, [added_item]);\n\n    return (\n        <li className={itemClass} ref={li => SetAdded_item(li)}>\n             <Image alt=\"Avatar\" width=\"30\" height=\"30\" roundedCircle src={img} />\n            <label className=\"form-check-label\">\n                 {fname + \" \" + lname + \": \" + text}\n            </label>\n        </li>\n    )\n}\n\nexport default CommentsItem;","import React from 'react';\nimport CommentsItem from '../CommentsItem/CommentsItem'\nimport './CommentsList.css';\n\n\n\nfunction CommentsList(props) {\n  const { items, activeUser } = props;\n\n  return (\n    <ul className=\"todolist\">\n      {items.map(item => (\n        <CommentsItem key={item.id} id={item.id} text={item.text} completed={item.done}\n          activeUser={activeUser} fname={item.userFname} lname={item.userLname} img={item.img}/>\n      ))}\n    </ul>\n  );\n}\n\nexport default CommentsList;","\nclass CommentModel {\n    constructor(parseComment) {\n        this.id = parseComment.id;\n        this.text = parseComment.get(\"text\");\n        this.done = parseComment.get(\"done\");\n        this.userFname = parseComment.get(\"userFname\");\n        this.userLname = parseComment.get(\"userLname\");\n        this.img = parseComment.get(\"img\");\n    }\n}\n\nexport default CommentModel;","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport CommentsList from '../CommentsList/CommentsList'\nimport Parse from 'parse';\nimport CommentModel from \"../../model/CommentModel\";\n\nfunction CommentsApp(props) {\n  const { message, activeUser } = props;\n  const [text, setText] = useState(\"\");\n  const [items, setItems] = useState([]);\n\n\n  useEffect(() => {\n    async function fetchData() {\n      const ParseComments = Parse.Object.extend('Comment');\n      const query = new Parse.Query(ParseComments);\n      query.equalTo(\"messageId\", { \"__type\": \"Pointer\", \"className\": \"Message\", \"objectId\": message.id });\n      const parseComments = await query.find();\n      setItems(parseComments.map(parseComment => new CommentModel(parseComment)));\n    }\n\n    if (activeUser) {\n      fetchData()\n    }\n  }, [activeUser, message])\n\n  function handleTextChange(event) {\n    setText(event.target.value);\n  }\n  function handleAddItem(event) {\n\n    const Comment = Parse.Object.extend('Comment');\n    const myNewObject = new Comment();\n    myNewObject.set('text', text);\n    myNewObject.set('done', false);\n    myNewObject.set('userFname', activeUser.fname);\n    myNewObject.set('userLname', activeUser.lname);\n    myNewObject.set('messageId', { \"__type\": \"Pointer\", \"className\": \"Message\", \"objectId\": message.id });\n    myNewObject.set('img', activeUser.img);\n    myNewObject.save().then(() => {\n        setItems(items.concat(new CommentModel(myNewObject)));\n        setText(\"\");\n      },\n      (error) => {\n        console.error('Error while creating Comment: ', error);\n      }\n    );\n\n  }\n\n  return (\n    <div>\n      <h3>Comments:</h3>\n      <div>\n        <CommentsList items={items} activeUser={activeUser} />\n      </div>\n      <form>\n        <div>\n          <input type=\"text\" placeholder=\"Add Comment\" className=\"form-control\" onChange={handleTextChange} value={text} />\n        </div>\n        <div >\n          <button className=\"add-btn btn btn-primary\" style={{ visibility: \"hidden\" }} onClick={handleAddItem}></button>\n        </div>\n      </form>\n\n    </div>\n  )\n}\n\nexport default CommentsApp;","import { Button, Col, Container, Row } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport CommentsApp from '../CommentsApp/CommentsApp'\nimport NewMessageModal from \"../NewMessageModal/NewMessageModal\";\nimport './MessageCard.css'\n\n\nfunction MessageCard(props) {\n    const { message, removeMessage, activeUser, updateMessageContent } = props;\n    const [showModal, setShowModal] = useState(false);\n    const placeHolderImage = \"https://cdn3.iconfinder.com/data/icons/ui-thick-outline-5-of-5/100/ui_09_of_10_-14-512.png\";\n\n    function removeMessageById() {\n        removeMessage(message.id);\n    }\n    return (\n        <div className=\"c-message-card\">\n            <Container fluid>\n                <Row>\n                    <Col md={6}>\n                        <Row>\n                            <Col sm={5}>\n                                <img alt=\"messageImg\" className=\"message-image\" src={message.img === \"\" ? placeHolderImage : message.img} ></img>\n                            </Col>\n                            <Col sm={7}>\n                                <div className=\"message-details\">\n                                    <label>Details: </label>\n                                    <p>{message.details}</p>\n                                </div>\n\n                                <div className=\"message-priority\">\n                                    <label>Priority: </label>\n                                    <p>{message.priority}</p>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col md={4}>\n                        <CommentsApp message={message} activeUser={activeUser}></CommentsApp>\n                    </Col>\n                    <Col style={{ visibility: activeUser.role === \"committee\" ? \"visible\" : \"hidden\" }}\n                        className=\"message-card-buttons\" >\n                        <Button className=\"b-update-button\" variant=\"info\" onClick={() => setShowModal(true)}>Update</Button>\n                        <Button onClick={removeMessageById} className=\"b-delete-button\" variant=\"danger\">Delete</Button>\n                    </Col>\n                </Row>\n            </Container>\n            <NewMessageModal isUpdate={true} show={showModal} handleClose={() => setShowModal(false)}\n                updateMessageContent={updateMessageContent} messageId={message.id} />\n\n        </div >\n    );\n}\n\nexport default MessageCard;","import React from 'react'\nimport { Accordion, Card } from \"react-bootstrap\";\nimport \"./MessagesAccordion.css\"\n\n\nfunction MessagesAccordion(props) {\n\n    const { panels, updateMessage } = props;\n    const unReadMsgSrc = \"https://cdn3.iconfinder.com/data/icons/mailing-2/96/notification_unread_mail_message_96-512.png\";\n    const readMsgSrc = \"https://icon-library.com/images/read-message-icon/read-message-icon-10.jpg\";\n\n    function SetStateOnClick(messageId, activeUserId) {\n        updateMessage(messageId, activeUserId);\n    }\n\n    return (\n        <Accordion variant=\"success\">\n            {panels.map((panel, index) =>\n                <Card key={index}>\n                    <Accordion.Toggle className=\"accordionHeader\"\n                        onClick={() => SetStateOnClick(panel.props.message.id, panel.props.activeUser.id)}\n                        as={Card.Header} eventKey={index.toString()} >\n                        {panel.props.message.title}\n                        <img alt=\"messageImg\" className=\"readImage\" width=\"20\" height=\"20\"          \n                            src={typeof panel.props.message.isRead !== 'undefined' && panel.props.message.isRead.includes(panel.props.activeUser.id) ? readMsgSrc : unReadMsgSrc} >\n                        </img>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey={index.toString()}>\n                        <Card.Body>{panel}</Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            )}\n        </Accordion>\n    )\n}\n\nexport default MessagesAccordion;","\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport { Container, Row, Col, InputGroup, FormControl, Form, Dropdown, DropdownButton } from 'react-bootstrap';\nimport \"./FilterContent.css\"\n\n\n\nfunction FilterContent(props) {\n\n    const { filteredText, onFilterChange, FilterPriority, Sort, isMessagesPage } = props;\n\n    return (\n        <Container>\n            <Row>\n                <Col md={isMessagesPage ? 6 : 12}>\n                    <InputGroup size=\"sm\" className=\"mb-3\" onChange={e => onFilterChange(e)} value={filteredText}>\n                        <InputGroup.Prepend>\n                            <InputGroup.Text>\n                                <FontAwesomeIcon icon={faSearch} />\n                            </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl placeholder=\"Filter\"\n                            aria-label=\"Medium\" aria-describedby=\"inputGroup-sizing-sm\" />\n                    </InputGroup>\n                </Col>\n                {isMessagesPage ?\n                    <>\n                        <Col >\n                            <DropdownButton onSelect={FilterPriority} size=\"sm\" variant=\"warning\" id=\"dropdown-basic-button\" title=\"Filter by Priority\">\n                                <Dropdown.Item >No Filter</Dropdown.Item>\n                                <Dropdown.Item >Info</Dropdown.Item>\n                                <Dropdown.Item >Important</Dropdown.Item>\n                            </DropdownButton>\n                        </Col>\n                        <Col >\n                            <Form.Group onChange={e => Sort(e.target.id)} className=\"sort-radio\" controlId=\"formBasicCheckboxFirst\">\n                                <div className=\"sortByLabel\"><Form.Label >Sort By:</Form.Label></div>\n                                <Form.Check inline id=\"date\" type=\"radio\" label=\"Date\" name=\"sort\" />\n                                <Form.Check inline id=\"priority\" type=\"radio\" label=\"Priority\" name=\"sort\" />\n                            </Form.Group>\n                        </Col>\n                    </>\n                    : null}\n            </Row>\n            {isMessagesPage ? <br /> : <> </>}\n        </Container>\n    );\n}\n\nexport default FilterContent;","\nclass MessageModel {\n    constructor(parseMessage) {\n        this.id = parseMessage.id;\n        this.title = parseMessage.get(\"title\");\n        this.details = parseMessage.get(\"details\");\n        this.priority = parseMessage.get(\"priority\");\n        this.building = parseMessage.get(\"building\");\n        this.isRead = parseMessage.get(\"isRead\");\n        this.img = parseMessage.get(\"img\").url();\n        this.date = parseMessage.get(\"date\");\n    }\n}\n\nexport default MessageModel;","import { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport NewMessageModal from \"../../components/NewMessageModal/NewMessageModal\";\nimport MessageCard from \"../../components/MessageCard/MessageCard\";\nimport HoaNavbr from \"../../components/HOANavbar/HOANavbr\";\nimport './MessagesPage.css'\nimport MessagesAccordion from \"../../components/Accordion/MessagesAccordion\";\nimport FilterContent from \"../../components/FilterContent/FilterContent\";\nimport Parse from 'parse';\nimport MessageModel from \"../../model/MessageModel\";\n\n\nfunction MessagesPage(props) {\n    const { activeUser, onLogout, message_items, addMessageItems, phImg } = props;\n    const [showModal, setShowModal] = useState(false);\n    const [filteredText, setFilteredText] = useState(\"\");\n    const [priorityFilter, setPriorityFilter] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n\n    let filteredMessages = messages.filter(message =>\n        message.title.toLowerCase().includes(filteredText.toLowerCase()) ||\n        message.details.toLowerCase().includes(filteredText.toLowerCase()));\n\n\n    useEffect(() => {\n        async function fetchData() {\n            const ParseMessage = Parse.Object.extend('Message');\n            const query = new Parse.Query(ParseMessage);\n            query.equalTo(\"building\", Parse.User.current().attributes.building);\n            const parseMessages = await query.find();\n            setMessages(parseMessages.map(parseMessage => new MessageModel(parseMessage)));\n        }\n\n        if (activeUser) {\n            fetchData()\n        }\n    }, [activeUser])\n\n    async function addMessage(title, details, priority, img) {\n        const ParseMessage = Parse.Object.extend('Message');\n        const newMessage = new ParseMessage();\n\n        newMessage.set('title', title);\n        newMessage.set('details', details);\n        if (img) {\n            newMessage.set('img', new Parse.File(img.name, img));\n        }\n        else {\n            newMessage.set('img', phImg.img);\n        }\n        newMessage.set('priority', priority);\n        newMessage.set('date', new Date().toString());\n        newMessage.set('isRead', []);\n        newMessage.set('building', Parse.User.current().attributes.building);\n        var relation = newMessage.relation(\"userId\");\n        relation.add(Parse.User.current());\n        const parseMessage = await newMessage.save();\n        setMessages(messages.concat(new MessageModel(parseMessage)));\n    }\n\n    function updateMessage(messageId, activeUserId) {\n        const Message = Parse.Object.extend('Message');\n        const query = new Parse.Query(Message);\n\n        query.get(messageId).then((object) => {\n            let arr = object.get('isRead');\n            if (!arr.includes(activeUserId)) {\n                arr.push(activeUserId);\n            }\n            object.set('isRead', arr);\n            object.save().then(() => {\n                const found = messages.find(element => element.id === messageId);\n                const index = messages.indexOf(found);\n                messages[index].isRead.push(activeUserId);\n                setMessages([...messages]);\n            }, (error) => {\n                console.error('Error while updating Message', error);\n            });\n        });\n    }\n\n    function removeRelatedComments(commentObj) {\n        const Comment = Parse.Object.extend('Comment');\n        const query = new Parse.Query(Comment);\n        query.get(commentObj.id).then((object) => {\n            object.destroy().then(() => {\n            }, (error) => {\n                console.error('Error while deleting Comment', error);\n            });\n        });\n    }\n    function removeMessage(messageId) {\n        const Message = Parse.Object.extend('Message');\n        const query = new Parse.Query(Message);\n        query.get(messageId).then((object) => {\n            object.destroy().then((response) => {\n                const Comment = Parse.Object.extend('Comment');\n                const query = new Parse.Query(Comment);\n                query.equalTo('messageId', { \"__type\": \"Pointer\", \"className\": \"Message\", \"objectId\": messageId });\n                query.find().then((results) => {\n                    results.forEach(removeRelatedComments);\n                }, (error) => {\n                    console.error('Error while fetching Comment', error);\n                });\n\n                const found = messages.find(element => element.id === messageId);\n                const index = messages.indexOf(found);\n                messages.splice(index, 1);\n                setMessages([...messages]);\n                console.log('Deleted Message', response);\n            }, (error) => {\n                console.error('Error while deleting Message', error);\n            });\n        });\n    }\n\n    function updateMessageContent(title, details, priority, img, messageId) {\n\n        const Message = Parse.Object.extend('Message');\n        const query = new Parse.Query(Message);\n\n        query.get(messageId).then((object) => {\n            object.set('title', title);\n            object.set('details', details);\n            object.set('priority', priority);\n            if (img) {\n                object.set('img', new Parse.File(img.name, img));\n            } else {\n                object.set('img', phImg.img);\n            }\n\n\n            object.save().then((response) => {\n                const found = messages.find(element => element.id === messageId);\n                const index = messages.indexOf(found);\n                messages[index].title = title;\n                messages[index].details = details;\n                messages[index].priority = priority;\n                messages[index].img = img === \"\" ? img : response.get(\"img\").url();\n                setMessages([...messages]);\n                console.log('Updated Message ', response);\n            }, (error) => {\n                console.error('Error while updating Message', error);\n            });\n        });\n    }\n\n    function SortMessages(sortBy) {\n        if (sortBy === \"date\") {\n            messages.sort(function (a, b) {\n                const firstDate = Date.parse(a.date);\n                const secondDate = Date.parse(b.date);\n\n                return secondDate - firstDate;\n            });\n        }\n        else {\n            messages.sort(function (a, b) {\n                var nameA = a.priority.toUpperCase(); // ignore upper and lowercase\n                var nameB = b.priority.toUpperCase(); // ignore upper and lowercase\n                if (nameA < nameB) {\n                    return -1;\n                }\n                if (nameA > nameB) {\n                    return 1;\n                }\n                // names must be equal\n                return 0;\n            });\n        }\n        setMessages([...messages]);\n    }\n\n    if (!activeUser) {\n        return <Redirect to=\"/\" />\n    }\n\n    function FilterPriority(eventKey, event) {\n        if (event.target.innerHTML === \"No Filter\") {\n            setPriorityFilter(\"\");\n        }\n        else {\n            setPriorityFilter(event.target.innerHTML);\n        }\n\n    }\n\n    filteredMessages = filteredMessages.filter(message =>\n        message.priority.toLowerCase().includes(priorityFilter.toLowerCase()));\n\n\n\n    const messagesView = filteredMessages.map(message => <MessageCard message={message} message_items={message_items}\n        addMessageItems={addMessageItems}\n        removeMessage={removeMessage} activeUser={activeUser} updateMessageContent={updateMessageContent} />)\n\n    return (\n        <div className=\"p-messages\">\n            <HoaNavbr activeUser={activeUser} onLogout={onLogout} />\n            <h1>Messages for bulding: {activeUser.building.toUpperCase()}</h1>\n            {/* <h1>Messages Page for bulding: {activeUser.building}</h1> */}\n            <FilterContent isMessagesPage={true} filteredText={filteredText} onFilterChange={e => setFilteredText(e.target.value)}\n                priorityFilter={priorityFilter} FilterPriority={FilterPriority} Sort={SortMessages} />\n            <div className=\"b-new-message\" style={{ visibility: activeUser.role === \"committee\" ? \"visible\" : \"hidden\" }}>\n                <Button variant=\"link\" onClick={() => setShowModal(true)}>New Message</Button>\n            </div>\n            <MessagesAccordion panels={messagesView} updateMessage={updateMessage} />\n            {showModal ? <NewMessageModal isUpdate={false} show={showModal}\n                handleClose={() => setShowModal(false)} addMessage={addMessage} phImg={phImg} /> : null}\n        </div>\n    )\n\n}\n\nexport default MessagesPage;","import React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\n\nfunction VoteOptions(props) {\n\n    const { updateOptions } = props;\n    const [options, setOptions] = useState([]);\n    const [newOption, setNewOption] = useState(\"\");\n\n    function handleAddOption() {\n        setOptions(options.concat(newOption));\n        setNewOption(\"\");\n        updateOptions(options.concat(newOption));\n    }\n    const optionsView = options.map(option => <div key={option} className=\"option-added\"><Form.Control type=\"text\" value={option} /></div>);\n\n    return (\n        <div>\n            {optionsView}\n            <div><Form.Control type=\"text\" placeholder=\"New Option\" value={newOption} onChange={e => setNewOption(e.target.value)} /></div>\n            <div className=\"option-add-button\"><Button onClick={handleAddOption}>Add Option</Button></div>\n        </div>\n    );\n}\n\nexport default VoteOptions;","import { useState } from \"react\";\nimport { Button, Modal, Form, Col, Row } from \"react-bootstrap\";\nimport VoteOptions from \"../VoteOptions/VoteOptions\";\n\n\nfunction NewVoteModal(props) {\n    const { show, handleClose, addVote } = props;\n    const [title, setTitle] = useState(\"\");\n    const [details, setDetails] = useState(\"\");\n    const [options, setOptions] = useState([]);\n    const [endDate, setEndDate] = useState(new Date());\n\n    function closeModal() {\n        setTitle(\"\");\n        setDetails(\"\");\n        setOptions([]);\n        setEndDate(\"\");\n        handleClose();\n    }\n\n    function updateOptions(newOptions) {\n        setOptions(newOptions);\n    }\n\n    function handleAddVote() {\n        // 1) triggers addVote at App that will then add this vote to its votes state\n        let voteEndDate = endDate === \"\" ? new Date() : new Date(endDate);\n        addVote(title, details, options, voteEndDate);\n        // 2) cleanup (clean all field + close the modal)\n        closeModal();\n    }\n\n    return (\n        <Modal show={show} onHide={closeModal} size=\"xl\">\n            <Modal.Header closeButton>\n                <Modal.Title>New Vote</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Group as={Row} controlId=\"formHorizontalTitle\">\n                        <Form.Label column sm={2}>\n                            Title:\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"text\" placeholder=\"Vote Title\" value={title} onChange={e => setTitle(e.target.value)} />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalDetails\">\n                        <Form.Label column sm={2}>\n                            Details:\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"textarea\" rows={3} type=\"text\" placeholder=\"Vote Details\" value={details} onChange={e => setDetails(e.target.value)} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalOptions\">\n                        <Form.Label column sm={2}>\n                            Options:\n                        </Form.Label>\n                        <Col sm={10}>\n                            <VoteOptions updateOptions={updateOptions}></VoteOptions>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalEndDate\">\n                        <Form.Label column sm={2}>\n                            End Date:\n                        </Form.Label>\n                        <Col sm={2}>\n                            <Form.Control type=\"date\" onChange={e => setEndDate(e.target.value)}>\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={closeModal}>\n                    Cancel\n                </Button>\n                <Button variant=\"primary\" onClick={handleAddVote}>\n                    Create Vote\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default NewVoteModal;","import React from 'react'\nimport { Accordion, Card, Col, Row } from \"react-bootstrap\";\nimport './VotesAccordion.css'\n\nfunction VotesAccordion(props) {\n\n    const { panels, isResaultAccordion } = props;\n    \n    return (\n        <Accordion>\n            {panels.map((panel, index) =>\n                <Card key={index}>\n                    <Accordion.Toggle className=\"accordionHeader\" as={Card.Header} eventKey={index.toString()} >\n                        {isResaultAccordion ?\n                            <Row>\n                                <Col md={8} className=\"accordion-header-title\">{panel.props.vote.title}</Col>\n                                <Col md={4} className=\"accordion-header-result\">{\"Result: \" + panel.props.vote.result}</Col>\n                            </Row>\n                            :\n                            <div>{panel.props.vote.title}</div>\n                        }\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey={index.toString()}>\n                        <Card.Body>{panel}</Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            )}\n        </Accordion>\n    )\n}\n\nexport default VotesAccordion;","import { useState } from \"react\";\nimport { Modal, Form, Button, Col, Row } from \"react-bootstrap\";\n\nfunction DateModal(props) {\n    const { show, handleClose, handleUpdateEndDate } = props;\n    const [endDate, setEndDate] = useState(new Date());\n    const [dateString, setDateString] = useState(formatDate());\n\n    function UpdateEndDate() {\n        let voteEndDate = typeof endDate === 'string' ? new Date(endDate) : endDate;\n        handleUpdateEndDate(voteEndDate);\n        handleClose();\n    }\n\n    function setDates(date) {\n        setEndDate(date);\n        setDateString(date);\n    }\n\n    function formatDate() {\n        var d = new Date(),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n\n        if (month.length < 2)\n            month = '0' + month;\n        if (day.length < 2)\n            day = '0' + day;\n\n        return [year, month, day].join('-');\n    }\n\n    return (\n        <>\n            {/* <Button onClick={() => setSmShow(true)}>Small modal</Button> */}\n            <Modal size=\"sm\" show={show} onHide={handleClose}\n                aria-labelledby=\"example-modal-sizes-title-sm\"\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"example-modal-sizes-title-sm\">\n                        Pick A Date\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group as={Row} controlId=\"formHorizontalEndDate\">\n                        <Form.Label column >\n                            Choose End Date:\n                        </Form.Label>\n                        <Col>\n                            <Form.Control type=\"date\" value={dateString} onChange={e => setDates(e.target.value)} />\n                        </Col>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={UpdateEndDate}>\n                        Update End Date\n                        </Button>\n                </Modal.Footer>\n            </Modal>\n\n        </>\n    );\n}\n\nexport default DateModal;\n","import * as React from 'react';\nimport { Pie } from \"react-chartjs-2\";\nimport './PieChart.css'\nimport { Card, Container } from 'react-bootstrap';\n\n\n\nfunction getPieColors(numOfOptions) {\n    let colors = {\n        pieColors: [],\n        pieColorsBorder: []\n    }\n\n    let colorsArray = [\n        'rgba(255, 99, 132, ',\n        'rgba(54, 162, 235, ',\n        'rgba(10, 57, 173, ',\n        'rgba(10, 84, 48, ',\n        'rgba(2, 86, 86,',\n        'rgba(3, 29, 8, ',\n        'rgba(165, 85, 48, ',\n        'rgba(97, 232, 249, ',\n        'rgba(219, 186, 252, ',\n        'rgba(183, 220, 23, ',\n    ]\n\n    for (let i = 0; i < numOfOptions; ++i) {\n        // let red = Math.floor(Math.random() * 256).toString();\n        // let green = Math.floor(Math.random() * 256).toString();\n        // let blue = Math.floor(Math.random() * 256).toString();\n        let pieColor = colorsArray[i % colorsArray.length] + `0.2)`;\n        let pieColorBorder = colorsArray[i % colorsArray.length] + `1)`;\n        // let pieColor = `rgba(${red},${green},${blue},0.2)`;\n        // let pieColorBorder = `rgba(${red},${green},${blue},1)`;\n        colors.pieColors.push(pieColor);\n        colors.pieColorsBorder.push(pieColorBorder);\n    }\n\n    return colors;\n}\n\nfunction PieChart(props) {\n\n    const { title, vote } = props;\n\n    const optionsChartData = React.useMemo(getVoteOptionsChartData, [vote]);\n\n    function getVoteOptionsChartData() {\n        // console.log(\"calculating chart data\");\n\n        let colors = getPieColors(vote.options.length);\n\n        let voteCount = [];\n\n        for (const option of vote.options) {\n            let count = 0;\n            for (const single_vote of Object.values(vote.votesPieData)) {\n                if (single_vote === option) {\n                    count++;\n                }\n            }\n            voteCount.push(count);\n        }\n\n        return {\n            labels: vote.options,\n            datasets: [\n                {\n                    label: '# of Votes',\n                    data: voteCount,\n                    backgroundColor: colors.pieColors,\n                    borderColor: colors.pieColorsBorder,\n                    borderWidth: 1,\n                },\n            ],\n        }\n    }\n    const option = { legend: { display: false } };\n    return (\n        <Container className=\"chart-title\">\n            <Card.Title  >{title}</Card.Title>\n            {Object.keys(vote.votesPieData).length === 0 ?\n                <p style={{backgroundColor: \"yellow\"}}>No Votes Yet</p>\n                :\n                <Pie options={option} data={optionsChartData} />\n            }\n        </Container>\n    )\n}\n\nexport default PieChart;","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport './Timer.css'\n\nexport default class Timer extends React.Component {\n    state = {\n        endDate: this.props.endDate,\n        days: 0,\n        hours: 0,\n        minutes: 0,\n        seconds: 0,\n        errorMsg: ''\n    };\n\n    componentDidMount() {\n        this.calculateCountdown();\n    }\n    componentWillUnmount() {\n        clearTimeout(this.timer);\n    }\n\n    onEndDateChange = endDate => {\n        this.setState({ endDate });\n    }\n\n    getTwoDigitValue = value => {\n        if (value < 10) {\n            return '0' + value;\n        }\n        return '' + value;\n    }\n\n    calculateCountdown = () => {\n        const startDate = new Date();\n        const { endDate } = this.state;\n\n        this.setState({ errorMsg: '' });\n\n        const timeRemaining = endDate.getTime() - startDate.getTime();\n\n        if (timeRemaining > 0) {\n            const start_date = new Date(startDate);\n            const end_date = new Date(endDate);\n            const start_millis = start_date.getTime(); // Get timestamp of start date\n            const end_millis = end_date.getTime(); // Get timestamp of end date\n\n            // Convert to seconds, 1 second = 1000 milli seconds\n            const old_sec = start_millis / 1000;\n            const current_sec = end_millis / 1000;\n\n            // Get remaining seconds\n            let seconds = current_sec - old_sec;\n\n            let days = Math.floor(seconds / (24 * 60 * 60)); // 1 day is equal to 24 hours, each hour has 60 mins and 60 seconds\n            seconds -= days * 24 * 60 * 60; // Get remaining seconds\n\n            let hours = Math.floor(seconds / (60 * 60)); // 1 hour has 60 mins and 60 seconds\n            seconds -= hours * 60 * 60; // Get remaining seconds\n\n            let minutes = Math.floor(seconds / 60); // 1 minute is equal to 60 seconds\n            seconds -= minutes * 60; // Get remaining seconds\n\n            days = Math.abs(days);\n            hours = Math.abs(hours);\n            minutes = Math.abs(minutes);\n            seconds = Math.floor(Math.abs(seconds));\n\n            this.setState(() => ({\n                days, hours, minutes, seconds\n            }), () => {\n                this.timer = setTimeout(this.calculateCountdown, 1000);\n            });\n        } else {\n            this.setState({ errorMsg: 'Times up!' });\n            clearTimeout(this.timer);\n        }\n    };\n\n    render() {\n        const { days, hours, minutes, seconds } = this.state;\n        const convertedDays = this.getTwoDigitValue(days);\n        const convertedHours = this.getTwoDigitValue(hours);\n        const convertedMins = this.getTwoDigitValue(minutes);\n        const convertedSeconds = this.getTwoDigitValue(seconds);\n\n        return (\n\n            <Container className=\"counter\">\n                <div className=\"time\">\n                    <div className=\"time-value\">{convertedDays}</div>\n                    <div className=\"time-label\">Days</div>\n                </div>\n                <div className=\"time\">\n                    <div className=\"time-value\">{convertedHours}</div>\n                    <div className=\"time-label\">Hours</div>\n                </div>\n                <div className=\"time\">\n                    <div className=\"time-value\">{convertedMins}</div>\n                    <div className=\"time-label\">Minutes</div>\n                </div>\n                <div className=\"time\">\n                    <div className=\"time-value\">{convertedSeconds}</div>\n                    <div className=\"time-label\">Seconds</div>\n                </div>\n            </Container>\n\n        );\n    }\n}","import { Button, Col, Container, Form, OverlayTrigger, Popover, Row } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport DateModal from \"../DateModal/DateModal\";\nimport PieChart from \"../PieChart/PieChart\";\nimport './ActiveVoteCard.css'\nimport Timer from '../Timer/Timer'\n\n\n\nfunction ActiveVoteCard(props) {\n    const { vote, activeUser, updateEndDate, AddUsersVote } = props;\n    const [showDateModal, setShowDateModal] = useState(false);\n    const [chosenOption, setChosenOption] = useState(vote.options[0]);\n    const [showPopover, setShowpopover] = useState(false);\n\n\n    var endDate = formatDate(vote.endDate);\n\n    let options = vote.options.map(option => <option>{option}</option>)\n\n    function handleUpdateEndDate(updatedEndDate) {\n        updateEndDate(vote.id, updatedEndDate);\n    }\n\n    function handleVote() {\n        setShowpopover(true);\n        setTimeout(function () { setShowpopover(false);; }, 2000);\n        AddUsersVote(chosenOption, vote.id, activeUser.id);\n    }\n\n    function formatDate(endDate) {\n        var d = new Date(endDate),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear(),\n            hour = '' + d.getHours(),\n            minutes = '' + d.getMinutes();\n\n        if (month.length < 2)\n            month = '0' + month;\n        if (day.length < 2)\n            day = '0' + day;\n        if (hour.length < 2)\n            hour = '0' + hour;\n        if (minutes.length < 2)\n            minutes = '0' + minutes;\n\n        return `${day}-${month}-${year}  ${hour}:${minutes}`;\n    }\n\n    const popover = (\n        <Popover id=\"popover-basic\">\n            <Popover.Title as=\"h3\">Thank you for your vote</Popover.Title>\n            <Popover.Content>\n                results will be available at <strong>{endDate}</strong>\n            </Popover.Content>\n        </Popover>\n    );\n\n    return (\n        <div className=\"c-vote-card\">\n            {activeUser.role === \"committee\" ?\n                <Container fluid>\n                    <Row>\n                        <Col lg={7}>\n                            <Row>\n                                <div className=\"vote-details\">\n                                    <label>Details: </label>\n                                    <p>{vote.details}</p>\n                                </div>\n                            </Row>\n                            <Row>\n                                <div className=\"vote-end-date\">\n                                    <label>End date: </label>\n                                    <p>{endDate}</p>\n                                </div>\n                                <Button className=\"b-update\" variant=\"warning\" onClick={() => setShowDateModal(true)}>Update End Date</Button>\n                            </Row>\n                        </Col>\n                        <Col lg={5}>\n                            <PieChart title=\"Results\" vote={vote} />\n                        </Col>\n                    </Row>\n                </Container>\n                :\n                <Form>\n                    <Container>\n                            <Form.Label >\n                                Your Vote:\n                        </Form.Label>\n                            <Form.Control as=\"select\" onChange={e => setChosenOption(e.target.value)}>\n                                {options}\n                            </Form.Control>\n                            <div className=\"vote-button\">\n                                <OverlayTrigger trigger=\"click\" placement=\"right\" show={showPopover} overlay={popover}>\n                                    <Button variant=\"warning\" onClick={handleVote}>Submit Vote</Button>\n                                </OverlayTrigger>\n                                <div className=\"vote-end-date\">\n                                    <label>Vote ends in: </label>\n                                    <Timer endDate={new Date(vote.endDate)} />\n                                    <label> Ends date: </label>\n                                    <p>{endDate}</p>\n                                </div>\n                            </div>\n                    </Container>\n                </Form>\n            }\n            {showDateModal ? <DateModal show={showDateModal} handleClose={() => setShowDateModal(false)} handleUpdateEndDate={handleUpdateEndDate} /> : null}\n        </div >\n    );\n}\n\nexport default ActiveVoteCard;","import { Col, Container, Row } from \"react-bootstrap\";\nimport PieChart from \"../PieChart/PieChart\";\nimport './VoteResultCard.css';\n\n\nfunction VoteResultCard(props) {\n    const { vote } = props;\n\n    var endDate = formatDate(vote.endDate);\n\n    function formatDate(endDate) {\n        var d = new Date(endDate),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear(),\n            hour = '' + d.getHours(),\n            minutes = '' + d.getMinutes();\n\n        if (month.length < 2)\n            month = '0' + month;\n        if (day.length < 2)\n            day = '0' + day;\n        if (hour.length < 2)\n            hour = '0' + hour;\n        if (minutes.length < 2)\n            minutes = '0' + minutes;\n\n        return `${day}-${month}-${year}  ${hour}:${minutes}`;\n    }\n\n    return (\n        <div className=\"c-vote-card\">\n            <Container fluid>\n                <Col >\n                    <Row>\n                        <div className=\"vote-details\">\n                            <label>Details:</label>\n                            <p>{vote.details}</p>\n                        </div>\n                    </Row>\n                    <Row>\n                        <div className=\"vote-end-date\">\n                            <label>End date: </label>\n                            <p>{endDate}</p>\n                        </div>\n                    </Row>\n                </Col>\n                <Row>\n                    <Col >\n                        <PieChart title=\"Results\" vote={vote} />\n                    </Col>\n                    <Col >\n                        <PieChart title=\"Voting Precentage\" vote={vote} />\n                    </Col>\n                </Row>\n            </Container>\n        </div >\n    );\n}\n\nexport default VoteResultCard;","\nclass VoteModel {\n    constructor(parseVote) {\n        this.id = parseVote.id;\n        this.title = parseVote.get(\"title\");\n        this.details = parseVote.get(\"details\");\n        this.options = parseVote.get(\"options\");\n        this.building = parseVote.get(\"building\");\n        this.endDate = parseVote.get(\"voteEndDate\").toString();\n        this.voteStatus = parseVote.get(\"voteStatus\");\n        this.result = parseVote.get(\"result\");\n        this.votesPieData = parseVote.get(\"votesPieData\");\n    }\n}\n\nexport default VoteModel;","import { useEffect, useState } from \"react\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\n\nimport HoaNavbr from \"../../components/HOANavbar/HOANavbr\";\nimport './VotingPage.css'\nimport NewVoteModal from \"../../components/NewVoteModal/NewVoteModal\";\nimport VotesAccordion from \"../../components/Accordion/VotesAccordion\";\nimport ActiveVoteCard from \"../../components/ActiveVoteCard/ActiveVoteCard\";\nimport VoteResultCard from \"../../components/VoteResultCard/VoteResultCard\"\nimport FilterContent from \"../../components/FilterContent/FilterContent\";\nimport VoteModel from \"../../model/VoteModel\";\nimport Parse from 'parse';\n\nfunction VotingPage(props) {\n    const { activeUser, onLogout } = props;\n    const [showModal, setShowModal] = useState(false);\n    const [filteredText, setFilteredText] = useState(\"\");\n    const [votings, setVotings] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            const ParseVote = Parse.Object.extend('Vote');\n            const query = new Parse.Query(ParseVote);\n            query.equalTo(\"building\", Parse.User.current().attributes.building);\n            await query.find().then((results) => {\n                setVotings(results.map(parseVote => new VoteModel(parseVote)));\n            }, (error) => {\n                console.error('Error while fetching Vote', error);\n            });\n        }\n        if (activeUser) {\n            fetchData()\n        }\n    }, [activeUser, votings])\n\n    async function addVote(title, details, options, endDate) {\n\n        const Vote = Parse.Object.extend('Vote');\n        const myNewVote = new Vote();\n\n        myNewVote.set('title', title);\n        myNewVote.set('details', details);\n        myNewVote.set('building', Parse.User.current().attributes.building);\n        myNewVote.set('options', options);\n        myNewVote.set('voteStatus', 'active');\n        myNewVote.set('voteEndDate', endDate);\n        myNewVote.set('result', '');\n        myNewVote.set('votesPieData', {});\n        var relation = myNewVote.relation(\"userId\");\n        relation.add(Parse.User.current());\n        const parsVote = await myNewVote.save();\n        setVotings(votings.concat(new VoteModel(parsVote)));\n    }\n\n    function AddUsersVote(chosenOption, voteId, userId) {\n        const Vote = Parse.Object.extend('Vote');\n        const query = new Parse.Query(Vote);\n        // here you put the objectId that you want to update\n        query.get(voteId).then((object) => {\n            let pieObj = object.get(\"votesPieData\");\n            pieObj[userId] = chosenOption;\n            object.set('votesPieData', pieObj);\n            object.save().then((response) => {\n                const found = votings.find(element => element.id === voteId);\n                const index = votings.indexOf(found);\n                votings[index].votesPieData[userId] = chosenOption;\n                setVotings([...votings]);\n            }, (error) => {\n                console.error('Error while updating Vote', error);\n            });\n        });\n    }\n\n    function getArraysNumOfOccurencesAndVariables(arr) {\n        var a = [],\n            b = [],\n            prev;\n\n        arr.sort();\n        for (var i = 0; i < arr.length; i++) {\n            if (arr[i] !== prev) {\n                a.push(arr[i]);\n                b.push(1);\n            } else {\n                b[b.length - 1]++;\n            }\n            prev = arr[i];\n        }\n\n        return [a, b];\n    }\n\n    function indexOfMax(arr) {\n        if (arr.length === 0) {\n            return -1;\n        }\n\n        var max = arr[0];\n        var maxIndex = 0;\n\n        for (var i = 1; i < arr.length; i++) {\n            if (arr[i] > max) {\n                maxIndex = i;\n                max = arr[i];\n            }\n        }\n\n        return maxIndex;\n    }\n\n    function isTie(arr, indexOfMaxVar) {\n        let maxVar = arr[indexOfMaxVar];\n        let counter = 0;\n        for (var i = 0; i < arr.length; i++) {\n            if (arr[i] === maxVar) {\n                ++counter;\n            }\n        }\n        return counter > 1 ? true : false;\n    }\n\n    function getOptionChosen(voteRecords) {\n        let votesCommited = [];\n\n        for (const [key, value] of Object.entries(voteRecords)) {\n            votesCommited.push(`${value}`);\n            let userId = `${key}`;\n            console.log(\"the vote for user id\" + { userId } + \" registerd\");\n        }\n\n        var resultArr = getArraysNumOfOccurencesAndVariables(votesCommited);\n        var indexOfMaxvar = indexOfMax(resultArr[1]);\n        if (isTie(resultArr[1], indexOfMaxvar)) {\n            return \"It's a Tie\";\n        }\n\n        return resultArr[0][indexOfMaxvar];\n    }\n\n    // Check the end Date And Update Vote Status and final result\n    function CheckDateAndUpdateVoteStatAndresult(voteItem) {\n        var now = new Date();\n        let objEndDate = new Date(voteItem.endDate);\n        let voteStatus = now >= objEndDate ? \"not active\" : \"active\";\n\n        if (voteStatus !== voteItem.voteStatus) {\n            const Vote = Parse.Object.extend('Vote');\n            const query = new Parse.Query(Vote);\n            query.get(voteItem.id).then((object) => {\n                let voteRecords = object.get(\"votesPieData\");\n                let voteResult = getOptionChosen(voteRecords);\n                object.set('voteStatus', voteStatus);\n                object.set('result', voteResult);\n                object.save().then(() => {\n                    voteItem.voteStatus = voteStatus;\n                    voteItem.results = voteResult;\n                }, (error) => {\n                    console.error('Error while updating Vote', error);\n                });\n            });\n        }\n    }\n\n    votings.forEach(CheckDateAndUpdateVoteStatAndresult);\n\n\n    function updateEndDate(voteId, updatedEndDate) {\n        const Vote = Parse.Object.extend('Vote');\n        const query = new Parse.Query(Vote);\n        // here you put the objectId that you want to update\n        query.get(voteId).then((object) => {\n            object.set('voteEndDate', updatedEndDate);\n            object.save().then((response) => {\n                const found = votings.find(element => element.id === voteId);\n                const index = votings.indexOf(found);\n                votings[index].endDate = updatedEndDate.toString();\n                setVotings([...votings]);\n            }, (error) => {\n                console.error('Error while updating Vote', error);\n            });\n        });\n    }\n\n    if (!activeUser) {\n        return <Redirect to=\"/\" />\n    }\n\n\n    let filteredVotes = votings.filter(vote =>\n        vote.title.toLowerCase().includes(filteredText.toLowerCase()) ||\n        vote.details.toLowerCase().includes(filteredText.toLowerCase()));\n\n\n    //Filter Only Active votes\n    const activeVotes = votings.filter(vote => vote.voteStatus === \"active\");\n    const activeVoteView = activeVotes.map(vote => <ActiveVoteCard vote={vote}\n        activeUser={activeUser} updateEndDate={updateEndDate} AddUsersVote={AddUsersVote} />)\n\n    //Filter Only NonActive votes\n    const nonActiveVotes = filteredVotes.filter(vote => vote.voteStatus !== \"active\");\n    const nonActiveVoteView = nonActiveVotes.map(vote => <VoteResultCard vote={vote} activeUser={activeUser} />)\n\n\n    return (\n        <div className=\"p-votes\">\n            <HoaNavbr activeUser={activeUser} onLogout={onLogout} />\n            <Container fluid>\n                <Row>\n                    <Col md={6}>\n                        <h1>Active Votings</h1>\n                        <div className=\"b-new-vote\" style={{ visibility: activeUser.role === \"committee\" ? \"visible\" : \"hidden\" }}>\n                            <Button variant=\"link\" onClick={() => setShowModal(true)}>New Vote</Button>\n                        </div>\n                        <VotesAccordion panels={activeVoteView} isResaultAccordion={false} />\n                    </Col>\n                    <Col md={6}>\n                        <h1>Voting Results</h1>\n                        <FilterContent isMessagesPage={false} filteredText={filteredText} onFilterChange={e => setFilteredText(e.target.value)} />\n                        <VotesAccordion panels={nonActiveVoteView} isResaultAccordion={true} />\n                    </Col>\n                </Row>\n            </Container>\n            {showModal ? <NewVoteModal show={showModal} handleClose={() => setShowModal(false)} addVote={addVote} /> : null}\n        </div>\n    )\n\n}\n\nexport default VotingPage;","import { useState } from \"react\";\nimport { Button, Modal, Form, Col, Image, Row } from \"react-bootstrap\";\nimport './NewTenantModal.css'\n\nfunction NewTenantModal(props) {\n    const { show, handleClose, addTenant, userId, isUpdate, updateTenantContent, phImg } = props;\n    const [email, setEmail] = useState(\"eyal@barak.com\");\n    const [pwd, setPwd] = useState(\"123\");\n    const [fname, setfname] = useState(\"Eyal\");\n    const [lname, setlname] = useState(\"Barak\");\n    const [building, setBuilding] = useState(\"Einstein\");\n    const [img, setImg] = useState(\"\");\n    const placeHolderImage = typeof phImg === 'undefined' ? \"\" : phImg.img.url();\n\n\n    function closeModal() {\n        setEmail(\"\");\n        setPwd(\"\");\n        setfname([]);\n        setlname(\"\");\n        setBuilding(\"\");\n        setImg(\"\");\n        handleClose();\n    }\n\n    function handleAddTennant() {\n\n        // 2) cleanup (clean all field + close the modal)\n        addTenant(fname, email, lname, building, img, pwd);\n        closeModal();\n    }\n\n\n    function handleUpdateTenant() {\n        updateTenantContent(fname, lname, email, building, pwd, img, userId);\n\n        closeModal();\n    }\n\n    function handleFileChange(e) {\n        if (e.target.files.length === 1) {\n            setImg(e.target.files[0]);\n        } else {\n            setImg(null);\n        }\n    }\n    const imgURL = img ? URL.createObjectURL(img) : \"\";\n\n    return (\n        <Modal show={show} onHide={closeModal} size=\"xl\">\n            <Modal.Header closeButton>\n                <Modal.Title>{isUpdate ? \"Update Tenats Details\" : \"Create New Tenant\"} </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Group as={Row} controlId=\"formBasicfname\">\n                        <Form.Label column sm={2}>\n                            First Name:\n                            </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"text\" placeholder=\"Enter first name\" value={fname} onChange={e => setfname(e.target.value)} />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formBasiclname\">\n                        <Form.Label column sm={2}>Last Name:</Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"text\" placeholder=\"Enter last name\" value={lname} onChange={e => setlname(e.target.value)} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formBasicEmail\">\n                        <Form.Label column sm={2}>Email address:</Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={e => setEmail(e.target.value)} />\n                            <Form.Text className=\"text-muted\">We'll never share your email with anyone else.</Form.Text>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formBasicPassword\">\n                        <Form.Label column sm={2}>Password:</Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"password\" placeholder=\"Password\" value={pwd} onChange={e => setPwd(e.target.value)} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formBasicbuilding\">\n                        <Form.Label column sm={2}>Building Name:</Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"text\" placeholder=\"Building/Condomium Community Name\" value={building} onChange={e => setBuilding(e.target.value)} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalImage\">\n                        <Form.Label column sm={2}>\n                            Image URL:\n                        </Form.Label>\n                        <Col sm={5}>\n                            <Form.Control className=\"chooseFile\" type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n                        </Col>\n                        <Col sm={5}>\n                            <Image width=\"200\" height=\"200\" src={imgURL === \"\" ? placeHolderImage : imgURL} />\n                        </Col>\n                    </Form.Group>\n                    \n                </Form>\n            </Modal.Body>\n            <div>\n                {isUpdate ?\n                    <Modal.Footer>\n                        <Button variant=\"primary\" onClick={handleUpdateTenant}>\n                            Update Tenant\n                        </Button>\n                    </Modal.Footer>\n                    :\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={closeModal}>\n                            Cancel\n                        </Button>\n                        <Button variant=\"primary\" onClick={handleAddTennant}>\n                            Add Tenant\n                    </  Button>\n                    </Modal.Footer>}\n            </div>\n        </Modal>\n    );\n}\n\nexport default NewTenantModal;","import { Button, Col, Container, Row } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport NewTenantModal from \"../../components/NewTenantModal/NewTenantModal\";\nimport './TenantCard.css'\n\n\nfunction TenantCard(props) {\n    const { tenant, removeTenant, updateTenantContent } = props;\n    const [showModal, setShowModal] = useState(false);\n    const placeHolderImage = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ4tJDcJYnlhTCuciLukYiHdpeS9XL5wGGHSg&usqp=CAU\";\n\n    function removeTenantById() {\n        removeTenant(tenant.id);\n    }\n\n    return (\n        <div className=\"c-tenant-card\">\n            <Container fluid>\n                <Row>\n                    <Col sm={10}>\n                        <Row>\n                            <Col sm={4}>\n                                <img alt=\"tenantImg\" className=\"tenant-image\" src={tenant.img === \"\" ? placeHolderImage : tenant.img} ></img>\n                            </Col>\n                            <Col sm={8}>\n                                <div className=\"tenant-name\">\n                                    <label>Name: </label>\n                                    <p>{tenant.fname + \" \" + tenant.lname}</p>\n                                </div>\n                                <div className=\"tenant-email\">\n                                    <label>Email: </label>\n                                    <p>{tenant.email}</p>\n                                </div>\n                                <div className=\"tenant-building\">\n                                    <label>Building: </label>\n                                    <p>{tenant.building}</p>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col className=\"tenant-card-buttons\" sm={2}>\n                        <Button className=\"b-update-button\" variant=\"info\" onClick={() => setShowModal(true)}>Update</Button>\n                        <Button onClick={removeTenantById} className=\"b-delete-button\" variant=\"danger\">Delete</Button>\n                    </Col>\n                </Row>\n            </Container>\n            {showModal ? <NewTenantModal isUpdate={true} show={showModal} handleClose={() => setShowModal(false)}\n                updateTenantContent={updateTenantContent} userId={tenant.id} /> : null}\n        </div >\n    );\n}\n\nexport default TenantCard;","import React from 'react'\nimport { Accordion, Card } from \"react-bootstrap\";\nimport './TenantsAccordion.css'\n\nfunction TenantsAccordion(props) {\n\n    const { panels } = props;\n\n    return (\n        <Accordion>\n            {panels.map((panel, index) =>\n                <Card key={index}>\n                    <Accordion.Toggle className=\"accordionHeader\" as={Card.Header} eventKey={index.toString()} >\n                        <div>{panel.props.tenant.fname + \" \" + panel.props.tenant.lname}</div>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey={index.toString()}>\n                        <Card.Body>{panel}</Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            )}\n        </Accordion>\n    )\n}\n\nexport default TenantsAccordion;","import { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport TenantCard from \"../../components/TenantCard/TenantCard\";\nimport HoaNavbr from \"../../components/HOANavbar/HOANavbr\";\nimport './TenantsPage.css'\nimport TenantsAccordion from \"../../components/Accordion/TenantsAccordion\";\nimport NewTenantModal from \"../../components/NewTenantModal/NewTenantModal\";\nimport FilterContent from \"../../components/FilterContent/FilterContent\";\nimport UserModel from \"../../model/UserModel\";\nimport Parse from 'parse';\n\n\nfunction TenantsPage(props) {\n    const { activeUser, onLogout, phImg } = props;\n    const [showModal, setShowModal] = useState(false);\n    const [filteredText, setFilteredText] = useState(\"\");\n    const [tenants, setTenants] = useState([]);\n    let filteredTenants = tenants.filter(tenant =>\n        tenant.fname.toLowerCase().includes(filteredText.toLowerCase()) ||\n        tenant.lname.toLowerCase().includes(filteredText.toLowerCase()) ||\n        tenant.email.toLowerCase().includes(filteredText.toLowerCase())\n    );\n\n\n    useEffect(() => {\n        async function fetchData() {\n            const ParseTenants = Parse.Object.extend('User');\n            const query = new Parse.Query(ParseTenants);\n            query.equalTo(\"role\", \"tenant\");\n            const parseTenants = await query.find();\n            setTenants(parseTenants.map(parseTenants => new UserModel(parseTenants)));\n        }\n\n        if (activeUser) {\n            fetchData()\n        }\n    }, [activeUser])\n\n    if (!activeUser) {\n        return <Redirect to=\"/\" />\n    }\n\n    function addTenant(fname, email, lname, building, img, pwd) {\n\n        const user = new Parse.User();\n        user.set('username', fname);\n        user.set('email', email);\n        user.set('fname', fname);\n        user.set('lname', lname);\n        user.set('building', building);\n        if (img) {\n            user.set('img', new Parse.File(img.name, img));\n        }\n        else {\n            user.set('img', phImg.img);\n        }\n        user.set('role', \"tenant\");\n        user.set('password', pwd);\n        user.set('emailAddrr', email);\n        var sessionToken = Parse.User.current().get(\"sessionToken\");\n\n        user.signUp().then((user) => {\n            // This lines enable read and write for the added tenat\n            var userACL = new Parse.ACL(user);\n            userACL.setPublicWriteAccess(true);\n            userACL.setPublicReadAccess(true);\n            user.setACL(userACL);\n            user.save();\n            Parse.User.become(sessionToken).then(function (user) {\n                // The current user is now set to user.\n            }, function (error) {\n                // The token could not be validated.\n            });\n            setTenants(tenants.concat(new UserModel(user)));\n            console.log('User signed up', user);\n        }).catch(error => {\n            console.error('Error while signing up user', error);\n        });\n\n\n    }\n\n    function removeTenant(userId) {\n        const User = new Parse.User();\n        const query = new Parse.Query(User);\n\n        // Finds the user by its ID\n        query.get(userId).then((user) => {\n            // Invokes the \"destroy\" method to delete the user\n            user.destroy().then((response) => {\n                const found = tenants.find(element => element.id === userId);\n                const index = tenants.indexOf(found);\n                tenants.splice(index, 1);\n                setTenants([...tenants]);\n                console.log('Deleted user', response);\n            }, (error) => {\n                console.error('Error while deleting user', error);\n            })\n        });\n    }\n\n    function updateTenantContent(fname, lname, email, building, pwd, img, userId) {\n\n        const User = new Parse.User();\n        const query = new Parse.Query(User);\n\n        // Finds the user by its ID\n        query.get(userId).then((user) => {\n            // Updates the data we want\n            user.set('email', email);\n            user.set('fname', fname);\n            user.set('lname', lname);\n            user.set('emailAddrr', email);\n\n            user.set('building', building);\n            if (img) {\n                user.set('img', new Parse.File(img.name, img));\n            }\n            else {\n                user.set('img', phImg.img);\n            }\n\n            // Saves the user with the updated data\n            user.save().then((response) => {\n                const found = tenants.find(element => element.id === userId);\n                const index = tenants.indexOf(found);\n                tenants[index].fname = fname;\n                tenants[index].lname = lname;\n                tenants[index].email = email;\n                tenants[index].building = building;\n                tenants[index].pwd = pwd;\n                tenants[index].img = img === \"\" ? img : response.get(\"img\").url();\n                setTenants([...tenants]);\n                console.log('Updated user', response);\n            }).catch((error) => {\n                console.error('Error while updating user', error);\n            });\n        });\n    }\n\n\n\n\n\n\n    const TenantView = filteredTenants.map(tenant => <TenantCard tenant={tenant}\n        removeTenant={removeTenant} activeUser={activeUser} updateTenantContent={updateTenantContent} />)\n\n    return (\n        <div className=\"p-tenants\">\n            <HoaNavbr activeUser={activeUser} onLogout={onLogout} />\n            <h1>Tenants for bulding: {activeUser.building.toUpperCase()}</h1>\n            <FilterContent isMessagesPage={false} filteredText={filteredText} onFilterChange={e => setFilteredText(e.target.value)} />\n            <div className=\"b-new-tenants\">\n                <Button variant=\"link\" onClick={() => setShowModal(true)}>New Tenant</Button>\n            </div>\n            <TenantsAccordion panels={TenantView} />\n            {showModal ? <NewTenantModal isUpdate={false} show={showModal} handleClose={() => setShowModal(false)}\n                addTenant={addTenant} phImg={phImg} /> : null}\n        </div>\n    )\n\n}\n\nexport default TenantsPage;","\nclass ImageModel {\n    constructor(parseImage) {\n        this.id = parseImage.id;\n        this.name = parseImage.get(\"name\");\n        this.img = parseImage.get(\"img\");\n    }\n}\n\nexport default ImageModel;\n","import { useEffect, useState } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport HomePage from './pages/HomePage/HomePage';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport SignupPage from './pages/SignupPage/SignupPage';\nimport MessagesPage from './pages/MessagesPage/MessagesPage';\nimport VotingPage from './pages/VotingPage/VotingPage';\nimport TenantsPage from './pages/TenantsPage/TenantsPage';\nimport Parse from 'parse';\nimport UserModel from './model/UserModel';\nimport ImageModel from './model/ImageModel';\n\n\n\nfunction App() {\n  const [activeUser, setActiveUser] = useState(\n    Parse.User.current() ? new UserModel(Parse.User.current()) : null);   // During development it's conveient to be logged in by default\n  const [imgPlaceHolders, setImgPlaceHolders] = useState([]);\n  let msgImgPh = getObject(\"messagePlaceholder\");\n  let userImgPh = getObject(\"userPlaceholder\");\n\n  useEffect(() => {\n    async function fetchData() {\n      const ParseImagePlaceHolder = Parse.Object.extend('ImagePlaceHolder');\n      const query = new Parse.Query(ParseImagePlaceHolder);\n      const parseImagePlaceHolders = await query.find();\n      setImgPlaceHolders(parseImagePlaceHolders.map(parseImagePlaceHolder => new ImageModel(parseImagePlaceHolder)));\n    }\n\n    fetchData();\n  }, [])\n  //============== loging/logout==================\n  function handleLogout() {\n    setActiveUser(null);\n    Parse.User.logOut();\n  }\n\n  function handleLogin(loggedinUser) {\n    setActiveUser(loggedinUser);\n  }\n\n  function getObject(name) {\n    let obj = imgPlaceHolders.find(obj => {\n      return obj.name === name\n    });\n    return obj;\n  }\n  return (\n\n\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\"><HomePage activeUser={activeUser} onLogout={handleLogout} /></Route>\n        <Route exact path=\"/login\"><LoginPage activeUser={activeUser} onLogin={handleLogin} /></Route>\n        <Route exact path=\"/signup\"><SignupPage activeUser={activeUser} onLogin={handleLogin} /></Route>\n        <Route exact path=\"/tenants\"><TenantsPage activeUser={activeUser} onLogout={handleLogout} phImg={userImgPh}/></Route>\n        <Route exact path=\"/messages\"> <MessagesPage activeUser={activeUser} onLogout={handleLogout} phImg={msgImgPh} /> </Route>\n        <Route exact path=\"/voting\"> <VotingPage activeUser={activeUser} onLogout={handleLogout} /></Route>\n      </Switch>\n    </HashRouter>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Parse from 'parse';\n\n\nParse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\nParse.initialize(\n  'XtgiTRuyAyCslj3oa5cHUXxkGcLmjIzIMcJ708N9', // This is your Application ID\n  'n1adUT1XhcHQlK50lPrnNR0qzfzEpxZbZohWQuBX', // This is your Javascript key\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}