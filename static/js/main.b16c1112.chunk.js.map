{"version":3,"sources":["components/HOANavbar/HOANavbr.js","components/HomePageCard/HomePageCard.js","pages/HomePage/HomePage.js","pages/LoginPage/LoginPage.js","pages/SignupPage/SignupPage.js","components/NewMessageModal/NewMessageModal.js","components/CommentsItem/CommentsItem.js","components/CommentsList/CommentsList.js","components/CommentsApp/CommentsApp.js","components/MessageCard/MessageCard.js","components/Accordion/MessagesAccordion.js","components/FilterContent/FilterContent.js","pages/MessagesPage/MessagesPage.js","components/VoteOptions/VoteOptions.js","components/NewVoteModal/NewVoteModal.js","components/Accordion/VotesAccordion.js","components/DateModal/DateModal.js","components/PieChart/PieChart.js","components/ActiveVoteCard/ActiveVoteCard.js","components/VoteResultCard/VoteResultCard.js","pages/VotingPage/VotingPage.js","components/NewTenantModal/NewTenantModal.js","components/TenantCard/TenantCard.js","components/Accordion/TenantsAccordion.js","pages/TenantsPage/TenantsPage.js","App.js","reportWebVitals.js","index.js"],"names":["HoaNavbr","props","activeUser","onLogout","tenantLink","role","Nav","Link","href","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","className","disabled","fname","lname","onClick","HomePageCard","img","desc","Card","Header","Img","variant","src","HomePage","Jumbotron","Container","Row","Col","LoginPage","useState","email","setEmail","pwd","setPwd","showLoginError","setShowLoginError","redirectToMessages","setRedirectToMessages","users","onLogin","to","Alert","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","Text","Button","block","userFound","find","user","toLowerCase","SignupPage","setfname","setlname","building","setBuilding","AddCommittee","newCommittee","Date","now","NewMessageModal","show","handleClose","addMessage","isUpdate","messageId","updateMessageContent","title","setTitle","details","setDetails","priority","SetPriority","imgURL","setImgURL","closeModal","Modal","onHide","size","closeButton","Title","Body","as","column","sm","rows","Image","width","height","Footer","CommentsItem","completed","text","itemClass","added_item","SetAdded_item","useEffect","classList","add","setTimeout","listItem","remove","ref","li","CommentsList","items","onItemCompleted","onDeleteItem","map","item","done","userFname","userLname","CommentsApp","message","message_items","addMessageItems","setText","setItems","allitems","setAllItems","activeMessageComments","filter","message_item","messageid","itemId","updatedItems","concat","event","style","visibility","preventDefault","newItem","MessageCard","removeMessage","showModal","setShowModal","fluid","alt","MessagesAccordion","panels","updateMessage","Accordion","panel","index","activeUserId","eventKey","toString","isRead","includes","FilterContent","filteredText","onFilterChange","FilterPriority","Sort","isMessagesPage","xs","InputGroup","Prepend","icon","faSearch","FormControl","aria-label","aria-describedby","DropdownButton","onSelect","Dropdown","Item","Check","inline","label","name","MessagesPage","messages","SortMessages","setFilteredText","priorityFilter","setPriorityFilter","filteredMessages","messagesView","innerHTML","VoteOptions","updateOptions","options","setOptions","newOption","setNewOption","optionsView","option","NewVoteModal","addVote","endDate","setEndDate","newOptions","date","jsonStr","JSON","stringify","dateStr","parse","VotesAccordion","isResaultAccordion","vote","result","require","DateModal","handleUpdateEndDate","aria-labelledby","PieChart","optionsChartData","React","console","log","colors","numOfOptions","pieColors","pieColorsBorder","colorsArray","i","pieColor","length","pieColorBorder","push","getPieColors","voteCount","count","Object","values","votesPieData","labels","datasets","data","backgroundColor","borderColor","borderWidth","keys","legend","display","ActiveVoteCard","updateEndDate","AddUsersVote","showDateModal","setShowDateModal","chosenOption","setChosenOption","substring","replace","updatedEndDate","VoteResultCard","VotingPage","votings","addVoteItems","vote_items","filteredVotes","activeVoteView","voteStatus","nonActiveVoteView","NewTenantModal","addTenant","userId","updateTenantContent","setImg","TenantCard","tenant","removeTenant","TenantsAccordion","TenantsPage","tenants","TenantView","App","jsonUsers","setUsers","setActiveUser","jsonMessages","setMessages","messageItems","setMessageItems","jsonVotings","setVotings","handleLogout","handleLogin","loggedinUser","AddUser","newUser","activeUserMessages","forEach","voteItem","itemsEndDate","activeUserVoting","voting","exact","path","found","element","indexOf","splice","sortBy","sort","a","b","firstDate","nameA","toUpperCase","nameB","newMessage","newVote","voteId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b16c1112.chunk.js","sourcesContent":["import { Navbar, Nav } from \"react-bootstrap\";\n\n\n\nfunction HoaNavbr(props) {\n    const { activeUser, onLogout } = props;\n    let tenantLink = null;\n    \n    if (activeUser) {\n        if (activeUser.role === \"committee\") {\n            tenantLink = <Nav.Link href=\"#/tenants\">Tenants</Nav.Link>;\n        }\n    }\n\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand href=\"#/\">HOA Systems</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    {activeUser ? <Nav.Link href=\"#/messages\">Messages</Nav.Link> : null}\n                    {activeUser ? <Nav.Link href=\"#/voting\">Voting</Nav.Link> : null}\n                    {tenantLink}\n                </Nav>\n                <Nav className=\"ml-auto\">\n                    {activeUser ? null : <Nav.Link href=\"#/login\">Login</Nav.Link>}\n                    {activeUser ? null : <Nav.Link href=\"#/signup\">Signup</Nav.Link>}\n                    {activeUser ? <Nav.Link disabled>{\"Hi \" + activeUser.fname + \" \" + activeUser.lname + \" :)\"}</Nav.Link> : null}\n                    {activeUser ? <Nav.Link onClick={() => onLogout()}>Logout</Nav.Link> : null}\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default HoaNavbr;","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport \"./HomePageCard.css\"\n\n\nfunction HomePageCard(props) {\n    const { img, desc } = props;\n\n    return (\n        <Card className=\"c-home-page-card\">\n            <Card.Header>{desc}</Card.Header>\n            <Card.Img variant=\"top\" src={img} />\n        </Card>\n    );\n}\n\nexport default HomePageCard;\n","import { Col, Container, Jumbotron, Row } from \"react-bootstrap\";\nimport HoaNavbr from \"../../components/HOANavbar/HOANavbr\";\nimport HomePageCard from \"../../components/HomePageCard/HomePageCard\";\n\nimport \"./HomePage.css\"\n\nfunction HomePage(props) {\n    const { activeUser, onLogout } = props;\n\n    return (\n        <div className=\"p-home\">\n            <HoaNavbr activeUser={activeUser} onLogout={onLogout} />\n            <Jumbotron>\n                <Container className=\"homePageTitle\">\n                    <h4>Welcome to HOA Management System</h4>\n                    <p>Take your Homeowner Association Management to the next level and get an easy UI for full transparency</p>\n                </Container>\n\n            </Jumbotron>\n            <Container className=\"homePageCards\">\n                <Row>\n                    <Col><HomePageCard img=\"https://www.brandknewmag.com/wp-content/uploads/2018/11/advt-283.jpg\" desc=\"Full Transparency\"></HomePageCard></Col>\n                    <Col><HomePageCard img=\"https://thumbor.forbes.com/thumbor/960x0/https%3A%2F%2Fspecials-images.forbesimg.com%2Fdam%2Fimageserve%2F1063184564%2F960x0.jpg%3Ffit%3Dscale\" desc=\"Vote Online\"></HomePageCard></Col>\n                    <Col><HomePageCard img=\"https://images.squarespace-cdn.com/content/v1/527fb6bae4b04f95c720a907/1522090505822-63JM5RD7L5EQ9JE8RIFC/ke17ZwdGBToddI8pDm48kARgRj3gF56o5pPCLcgX83YUqsxRUqqbr1mOJYKfIPR7LoDQ9mXPOjoJoqy81S2I8N_N4V1vUb5AoIIIbLZhVYxCRW4BPu10St3TBAUQYVKcLhP6FrlsjHNVjgHYYFOnZY2fkf53yXnTjPV0F2ewkRAjGmv5qrb73FDOk_nyAWmN/glenn-carstens-peters-203007.jpg\" desc=\"Write a message\"></HomePageCard></Col>\n                </Row>\n            </Container>\n        </div>\n    )\n\n}\n\nexport default HomePage;","import { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport './LoginPage.css'\n\nfunction LoginPage(props) {\n    const [email, setEmail] = useState(\"john@john.com\");\n    const [pwd, setPwd] = useState(\"123\");\n    const [showLoginError, setShowLoginError] = useState(false);\n    const [redirectToMessages, setRedirectToMessages] = useState(false);\n    const {users, onLogin} = props;\n    \n    function login() {\n        \n        // Check if the login is value (if a user with the same\n        // email and pws exists in the users array)\n        const userFound = users.find(user => user.email.toLowerCase() === email.toLowerCase() && user.pwd === pwd);\n        if (userFound) {\n            // Trigger onLogin event prop + update redirect state so we will redirect to messages page\n            onLogin(userFound);\n            setRedirectToMessages(true);\n        } else {\n            // show an error alert\n            setShowLoginError(true);\n        }\n    }\n\n\n    if (redirectToMessages) {\n        return <Redirect to=\"/messages\"/>;\n    }\n\n    return (\n        <div className=\"p-login\">\n            <h1>Login to HOA</h1>\n            <p>or <Link to=\"/signup\">create an account</Link></p>\n            {showLoginError ? <Alert variant=\"danger\">Invalid Credentials!</Alert> : null}\n            <Form>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={e => setEmail(e.target.value)} />\n                    <Form.Text className=\"text-muted\">\n                        We'll never share your email with anyone else.\n                    </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={pwd} onChange={e => setPwd(e.target.value)} />\n                </Form.Group>\n               \n                <Button variant=\"success\" type=\"button\" block onClick={login}>\n                    Login\n                </Button>\n            </Form>\n        </div>\n    )\n\n}\n\nexport default LoginPage;","import { useState } from \"react\";\nimport { Form, Button, Container } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport './SignupPage.css'\n\nfunction SignupPage(props) {\n    const [email, setEmail] = useState(\"eyal@barak.com\");\n    const [pwd, setPwd] = useState(\"123\");\n    const [fname, setfname] = useState(\"Eyal\");\n    const [lname, setlname] = useState(\"Barak\");\n    const [building, setBuilding] = useState(\"Einstein\");\n\n    const [redirectToMessages, setRedirectToMessages] = useState(false);\n    const { users, onLogin, AddCommittee } = props;\n\n    function SignUp() {\n\n        const newCommittee = {\n            id: Date.now(),\n            fname,\n            lname,\n            email,\n            pwd,\n            role: \"committee\",\n            building,\n        }\n\n        AddCommittee(newCommittee);\n        setRedirectToMessages(true);\n\n    }\n\n\n    if (redirectToMessages) {\n        const userFound = users.find(user => user.email.toLowerCase() === email.toLowerCase() && user.pwd === pwd);\n        onLogin(userFound);\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <Container>\n            <h1>Create a Committee Member Account</h1>\n            <div className=\"p-signup\">\n                <Form>\n                    <Form.Group controlId=\"formBasicfname\">\n                        <Form.Label>First Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter first name\" value={fname} onChange={e => setfname(e.target.value)} />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasiclname\">\n                        <Form.Label>Last Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter last name\" value={lname} onChange={e => setlname(e.target.value)} />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={e => setEmail(e.target.value)} />\n                        <Form.Text className=\"text-muted\">\n                            We'll never share your email with anyone else.\n                    </Form.Text>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" value={pwd} onChange={e => setPwd(e.target.value)} />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicbuilding\">\n                        <Form.Label>Building/Condomium Community Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Building/Condomium Community Name\" value={building} onChange={e => setBuilding(e.target.value)} />\n                    </Form.Group>\n\n                    <Button variant=\"warning\" type=\"button\" block onClick={SignUp}>\n                        SignUp\n                </Button>\n                </Form>\n            </div>\n        </Container>\n    )\n\n}\n\nexport default SignupPage;","import { useState } from \"react\";\nimport { Button, Modal, Form, Col, Row, Image } from \"react-bootstrap\";\n\n\nfunction NewMessageModal(props) {\n    const { show, handleClose, addMessage, isUpdate, messageId, updateMessageContent } = props;\n    const [title, setTitle] = useState(\"\");\n    const [details, setDetails] = useState(\"\");\n    const [priority, SetPriority] = useState(\"Info\");\n    const [imgURL, setImgURL] = useState(\"\");\n    const placeHolderImage = \"https://www.arde.co.il/wp-content/uploads/2014/06/default-placeholder.png\";\n\n    function closeModal() {\n        setTitle(\"\");\n        setDetails(\"\");\n        setImgURL(\"\");\n        handleClose();\n    }\n\n    function handleAddMessage() {\n        // 1) triggers addMessage at App that will then add this message to its messages state\n        addMessage(title, details, priority, imgURL);\n\n        // 2) cleanup (clean all field + close the modal)\n        closeModal();\n    }\n\n    function handleUpdateMessage() {\n        updateMessageContent(title, details, priority, imgURL, messageId);\n\n        closeModal();\n    }\n\n    return (\n        <Modal show={show} onHide={closeModal} size=\"xl\">\n            <Modal.Header closeButton>\n                <Modal.Title>New Message</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Group as={Row} controlId=\"formHorizontalTitle\">\n                        <Form.Label column sm={2}>\n                            Title:\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"text\" placeholder=\"Message Title\" value={title} onChange={e => setTitle(e.target.value)} />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalDetails\">\n                        <Form.Label column sm={2}>\n                            Details:\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"textarea\" rows={3} type=\"text\" placeholder=\"Message Details\" value={details} onChange={e => setDetails(e.target.value)} />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalPriority\">\n                        <Form.Label column sm={2}>\n                            Priority:\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" onChange={e => SetPriority(e.target.value)}>\n                                <option > Info</option>\n                                <option >Important</option>\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalImage\">\n                        <Form.Label column sm={2}>\n                            Image URL:\n                        </Form.Label>\n                        <Col sm={8}>\n                            <Form.Control type=\"text\" placeholder=\"Image URL\" value={imgURL} onChange={e => setImgURL(e.target.value)} />\n                        </Col>\n                        <Col sm={2}>\n                            <Image width=\"100\" height=\"100\" src={imgURL === \"\" ? placeHolderImage : imgURL} />\n                        </Col>\n                    </Form.Group>\n                </Form>\n\n            </Modal.Body>\n            <div>\n                {isUpdate === \"true\" ?\n                    <Modal.Footer>\n                        <Button variant=\"primary\" onClick={handleUpdateMessage}>\n                            Update Message\n                        </Button>\n                    </Modal.Footer>\n                    :\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={closeModal}>\n                            Cancel\n                        </Button>\n                        <Button variant=\"primary\" onClick={handleAddMessage}>\n                            Create Message\n                    </  Button>\n                    </Modal.Footer>}\n            </div>\n        </Modal>\n    );\n}\n\nexport default NewMessageModal;","import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport './CommentsItem.css';\n\nfunction CommentsItem(props) {\n\n    const { completed, text, fname, lname } = props;\n    var itemClass = \"form-check todoitem \" + (completed ? \"done\" : \"undone\");\n    const [added_item, SetAdded_item] = useState(\"\");\n\n    // Only for higlight purpose of the added comment\n    useEffect(() => {\n        if (added_item) {\n            // 1. Add highlight class.\n            added_item.classList.add(\"highlight\");\n\n            // 2. Set timeout.\n            setTimeout((listItem) => {\n                // 3. Remove highlight class.\n                listItem.classList.remove(\"highlight\");\n            }, 500, added_item);\n        }\n    }, [added_item]);\n\n    return (\n        <li className={itemClass} ref={li => SetAdded_item(li)}>\n            <label className=\"form-check-label\">\n                 {fname + \" \" + lname + \": \" + text}\n            </label>\n        </li>\n    )\n}\n\nexport default CommentsItem;","import React from 'react';\nimport CommentsItem from '../CommentsItem/CommentsItem'\nimport './CommentsList.css';\n\n\n\nfunction CommentsList(props){\n    const {items, onItemCompleted, onDeleteItem, activeUser} = props;\n\n    return (\n        <ul className=\"todolist\">\n          {items.map(item => (\n            <CommentsItem key={item.id} id={item.id} text={item.text} completed={item.done} \n            onItemCompleted={onItemCompleted} onDeleteItem={onDeleteItem} activeUser={activeUser}\n            fname={item.userFname} lname={item.userLname}/>\n          ))}\n        </ul>\n      );\n}\n\n  export default CommentsList;","import React from 'react';\nimport { useState } from 'react';\nimport CommentsList from '../CommentsList/CommentsList'\nimport './CommentsApp.css';\n\n\nfunction CommentsApp(props) {\n  const {message, message_items, addMessageItems, activeUser} = props;\n  const [text, setText] = useState(\"\");\n  const [items, setItems] = useState(message_items);\n  const [allitems, setAllItems] = useState([]);\n\n\n  function handleTextChange(event) {\n    setText(event.target.value);\n  }\n  function handleAddItem(event) {\n    event.preventDefault();\n    // document.getElementById(\"add-btn\").click();\n    var newItem = {\n      id: Date.now(),\n      text: text,\n      done: false,\n      messageid: message.id,\n      userFname: activeUser.fname,\n      userLname: activeUser.lname,\n    };\n\n    setItems(items.concat(newItem));\n    // setAllItems(allitems.concat(newItem));\n    setText(\"\");\n    addMessageItems(newItem);\n\n  }\n  \n  function handleDeleteItem(itemId) {\n    var updatedItems = allitems.filter(item => {\n      return item.id !== itemId;\n    });\n\n    setAllItems([].concat(updatedItems));\n    setItems([].concat(updatedItems));\n\n  }\n\n  \n  \n  \n  const activeMessageComments = message_items.filter(message_item => message_item.messageid === message.id);\n\n  return (\n    <div>\n      <h3>Comments:</h3>\n      \n      <div className=\"row\">\n        <div>\n          <CommentsList items={activeMessageComments}  onDeleteItem={handleDeleteItem} activeUser={activeUser}/>\n        </div>\n      </div>\n      <form className=\"row\"> \n        <div>\n          <input type=\"text\" placeholder=\"Add Comment\" className=\"form-control\" onChange={handleTextChange} value={text} />\n        </div>\n        <div >\n          <button className=\"add-btn btn btn-primary\" style={{ visibility: \"hidden\" }} onClick={handleAddItem}></button>\n        </div>\n      </form>\n\n    </div>\n  )\n}\n\nexport default CommentsApp;","import { Button, Col, Container, Row } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport CommentsApp from '../CommentsApp/CommentsApp'\nimport NewMessageModal from \"../NewMessageModal/NewMessageModal\";\nimport './MessageCard.css'\n\n\nfunction MessageCard(props) {\n    const { message, addMessageItems, message_items, removeMessage, activeUser, updateMessageContent } = props;\n    const [showModal, setShowModal] = useState(false);\n    const placeHolderImage = \"https://cdn3.iconfinder.com/data/icons/ui-thick-outline-5-of-5/100/ui_09_of_10_-14-512.png\";\n\n    function removeMessageById() {\n        removeMessage(message.id);\n    }\n    return (\n        <div className=\"c-message-card\">\n            <Container fluid>\n                <Row>\n                    <Col sm={6}>\n                        <Row>\n                            <Col sm={5}>\n                                <img alt=\"messageImg\" className=\"message-image\" src={message.img === \"\" ? placeHolderImage : message.img} ></img>\n                            </Col>\n                            <Col sm={7}>\n                                <div className=\"message-details\">\n                                    <label>Details: </label>\n                                    <p>{message.details}</p>\n                                </div>\n\n                                <div className=\"message-priority\">\n                                    <label>Priority: </label>\n                                    <p>{message.priority}</p>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col sm={4}>\n                        <CommentsApp message={message} message_items={message_items}\n                            addMessageItems={addMessageItems} activeUser={activeUser}></CommentsApp>\n                    </Col>\n                    <Col style={{ visibility: activeUser.role === \"committee\" ? \"visible\" : \"hidden\" }}\n                        className=\"message-card-buttons\" sm={2}>\n                        {/* <Button>hello</Button>\n                        <Button>hello</Button> */}\n                        <Button className=\"b-update-button\" variant=\"info\" onClick={() => setShowModal(true)}>Update</Button>\n                        <Button onClick={removeMessageById} className=\"b-delete-button\" variant=\"danger\">Delete</Button>\n                    </Col>\n                </Row>\n            </Container>\n            <NewMessageModal isUpdate=\"true\" show={showModal} handleClose={() => setShowModal(false)}\n                updateMessageContent={updateMessageContent} messageId={message.id} />\n\n        </div >\n    );\n}\n\nexport default MessageCard;","import React from 'react'\nimport { Accordion, Card } from \"react-bootstrap\";\nimport \"./MessagesAccordion.css\"\n\n\nfunction MessagesAccordion(props) {\n\n    const { panels, updateMessage } = props;\n    const unReadMsgSrc = \"https://cdn3.iconfinder.com/data/icons/mailing-2/96/notification_unread_mail_message_96-512.png\";\n    const readMsgSrc = \"https://icon-library.com/images/read-message-icon/read-message-icon-10.jpg\";\n\n    function SetStateOnClick(messageId, activeUserId) {\n        updateMessage(messageId, activeUserId);\n    }\n\n    return (\n        <Accordion variant=\"success\">\n            {panels.map((panel, index) =>\n                <Card key={index}>\n                    <Accordion.Toggle className=\"accordionHeader\"\n                        onClick={() => SetStateOnClick(panel.props.message.id, panel.props.activeUser.id)}\n                        as={Card.Header} eventKey={index.toString()} >\n                        {panel.props.message.title}\n                        <img alt=\"messageImg\" className=\"readImage\" width=\"20\" height=\"20\"          \n                            src={panel.props.message.isRead.includes(panel.props.activeUser.id) ? readMsgSrc : unReadMsgSrc} >\n                        </img>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey={index.toString()}>\n                        <Card.Body>{panel}</Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            )}\n        </Accordion>\n    )\n}\n\nexport default MessagesAccordion;","\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport { Container, Row, Col, InputGroup, FormControl, Form, Dropdown, DropdownButton } from 'react-bootstrap';\nimport \"./FilterContent.css\"\n\n\n\nfunction FilterContent(props) {\n\n    const { filteredText, onFilterChange, FilterPriority, Sort, isMessagesPage } = props;\n\n    return (\n        <Container>\n            <Row>\n                <Col xs={isMessagesPage ? 7 : 12}>\n                    <InputGroup size=\"sm\" className=\"mb-3\" onChange={e => onFilterChange(e)} value={filteredText}>\n                        <InputGroup.Prepend>\n                            <InputGroup.Text>\n                                <FontAwesomeIcon icon={faSearch} />\n                            </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl placeholder=\"Filter\"\n                            aria-label=\"Medium\" aria-describedby=\"inputGroup-sizing-sm\" />\n                    </InputGroup>\n                </Col>\n                {isMessagesPage ?\n                    <>\n                        <Col>\n                            <DropdownButton onSelect={FilterPriority} size=\"sm\" variant=\"warning\" id=\"dropdown-basic-button\" title=\"Filter by Priority\">\n                                <Dropdown.Item >No Filter</Dropdown.Item>\n                                <Dropdown.Item >Info</Dropdown.Item>\n                                <Dropdown.Item >Important</Dropdown.Item>\n                            </DropdownButton>\n                        </Col>\n                        <Col>\n                            <Form.Group onChange={e => Sort(e.target.id)} className=\"sort-radio\" controlId=\"formBasicCheckboxFirst\">\n                                <div className=\"sortByLabel\"><Form.Label >Sort By:</Form.Label></div>\n                                <Form.Check inline id=\"date\" type=\"radio\" label=\"Date\" name=\"sort\" />\n                                <Form.Check inline id=\"priority\" type=\"radio\" label=\"Priority\" name=\"sort\" />\n                            </Form.Group>\n                        </Col>\n                    </>\n                    : null}\n            </Row>\n            {isMessagesPage ? <br /> :<> </>}\n        </Container>\n    );\n}\n\nexport default FilterContent;","import { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport NewMessageModal from \"../../components/NewMessageModal/NewMessageModal\";\nimport MessageCard from \"../../components/MessageCard/MessageCard\";\nimport HoaNavbr from \"../../components/HOANavbar/HOANavbr\";\nimport './MessagesPage.css'\nimport MessagesAccordion from \"../../components/Accordion/MessagesAccordion\";\nimport FilterContent from \"../../components/FilterContent/FilterContent\";\n\nfunction MessagesPage(props) {\n    const { activeUser, onLogout, messages, addMessage, message_items, addMessageItems,\n        updateMessage, SortMessages, removeMessage, updateMessageContent } = props;\n    const [showModal, setShowModal] = useState(false);\n    const [filteredText, setFilteredText] = useState(\"\");\n    const [priorityFilter, setPriorityFilter] = useState(\"\");\n    let filteredMessages = messages.filter(message =>\n        message.title.toLowerCase().includes(filteredText.toLowerCase()) ||\n        message.details.toLowerCase().includes(filteredText.toLowerCase()));\n\n\n\n    if (!activeUser) {\n        return <Redirect to=\"/\" />\n    }\n\n    function FilterPriority(eventKey, event) {\n        if (event.target.innerHTML === \"No Filter\") {\n            setPriorityFilter(\"\");\n        }\n        else {\n            setPriorityFilter(event.target.innerHTML);\n        }\n\n    }\n\n    filteredMessages = filteredMessages.filter(message =>\n        message.priority.toLowerCase().includes(priorityFilter.toLowerCase()));\n\n\n\n    const messagesView = filteredMessages.map(message => <MessageCard message={message} message_items={message_items}\n        addMessageItems={addMessageItems}\n        removeMessage={removeMessage} activeUser={activeUser} updateMessageContent={updateMessageContent} />)\n\n    return (\n        <div className=\"p-messages\">\n            <HoaNavbr activeUser={activeUser} onLogout={onLogout} />\n            <FilterContent isMessagesPage={true} filteredText={filteredText} onFilterChange={e => setFilteredText(e.target.value)}\n                priorityFilter={priorityFilter} FilterPriority={FilterPriority} Sort={SortMessages}/>\n            <div className=\"b-new-message\" style={{ visibility: activeUser.role === \"committee\" ? \"visible\" : \"hidden\" }}>\n                <Button variant=\"link\" onClick={() => setShowModal(true)}>New Message</Button>\n            </div>\n            <MessagesAccordion panels={messagesView} updateMessage={updateMessage} />\n            <NewMessageModal isUpdate=\"false\" show={showModal} handleClose={() => setShowModal(false)} addMessage={addMessage} />\n        </div>\n    )\n\n}\n\nexport default MessagesPage;","import React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\n\nfunction VoteOptions(props) {\n\n    const {updateOptions} = props;\n    const [options, setOptions] = useState([]);\n    const [newOption, setNewOption] = useState(\"\");\n\n    function handleAddOption(){\n        setOptions(options.concat(newOption));\n        setNewOption(\"\");\n        updateOptions(options.concat(newOption));\n    }\n    const optionsView = options.map(option => <div className=\"option-added\"><Form.Control type=\"text\" value={option} /></div>);\n\n    return (\n        <div>\n            {optionsView}\n            <div><Form.Control type=\"text\" placeholder=\"New Option\" value={newOption} onChange={e => setNewOption(e.target.value)}/></div>\n            <div className=\"option-add-button\"><Button onClick={handleAddOption}>Add Option</Button></div>\n        </div>\n    );\n}\n\nexport default VoteOptions;","import { useState } from \"react\";\nimport { Button, Modal, Form, Col, Row } from \"react-bootstrap\";\nimport VoteOptions from \"../VoteOptions/VoteOptions\";\n\n\nfunction NewVoteModal(props) {\n    const { show, handleClose, addVote } = props;\n    const [title, setTitle] = useState(\"\");\n    const [details, setDetails] = useState(\"\");\n    const [options, setOptions] = useState([]);\n    const [endDate, setEndDate] = useState(new Date());\n\n    function closeModal() {\n        setTitle(\"\");\n        setDetails(\"\");\n        setOptions([]);\n        setEndDate(\"\");\n        handleClose();\n    }\n\n    function updateOptions(newOptions) {\n        setOptions(newOptions);\n    }\n\n    function handleAddVote() {\n        // 1) triggers addVote at App that will then add this vote to its votes state\n        let date = new Date(endDate);\n        let jsonStr = JSON.stringify(date);\n        var dateStr = JSON.parse(jsonStr);  \n        addVote(title, details, options, dateStr);\n\n        // 2) cleanup (clean all field + close the modal)\n        closeModal();\n    }\n\n    return (\n        <Modal show={show} onHide={closeModal} size=\"xl\">\n            <Modal.Header closeButton>\n                <Modal.Title>New Vote</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Group as={Row} controlId=\"formHorizontalTitle\">\n                        <Form.Label column sm={2}>\n                            Title:\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"text\" placeholder=\"Vote Title\" value={title} onChange={e => setTitle(e.target.value)} />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalDetails\">\n                        <Form.Label column sm={2}>\n                            Details:\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"textarea\" rows={3} type=\"text\" placeholder=\"Vote Details\" value={details} onChange={e => setDetails(e.target.value)} />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalOptions\">\n                        <Form.Label column sm={2}>\n                            Options:\n                        </Form.Label>\n                        <Col sm={10}>\n                            <VoteOptions updateOptions={updateOptions}></VoteOptions>\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalEndDate\">\n                        <Form.Label column sm={2}>\n                            End Date:\n                        </Form.Label>\n                        <Col sm={2}>\n                            <Form.Control type=\"date\" onChange={e => setEndDate(e.target.value)}>\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                </Form>\n\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={closeModal}>\n                    Cancel\n                </Button>\n                <Button variant=\"primary\" onClick={handleAddVote}>\n                    Create Vote\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default NewVoteModal;","import React from 'react'\nimport { Accordion, Card, Col, Row } from \"react-bootstrap\";\nimport './VotesAccordion.css'\n\nfunction VotesAccordion(props) {\n\n    const { panels, isResaultAccordion } = props;\n    \n    return (\n        <Accordion>\n            {panels.map((panel, index) =>\n                <Card key={index}>\n                    <Accordion.Toggle className=\"accordionHeader\" as={Card.Header} eventKey={index.toString()} >\n                        {isResaultAccordion === \"true\" ?\n                            <Row>\n                                <Col sm={9} className=\"accordion-header-title\">{panel.props.vote.title}</Col>\n                                <Col sm={3} className=\"accordion-header-result\">{\"Result: \" + panel.props.vote.result}</Col>\n                            </Row>\n                            :\n                            <div>{panel.props.vote.title}</div>\n                        }\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey={index.toString()}>\n                        <Card.Body>{panel}</Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            )}\n        </Accordion>\n    )\n}\n\nexport default VotesAccordion;","import { useState } from \"react\";\nconst { Modal, Form, Button, Col, Row } = require(\"react-bootstrap\");\n\nfunction DateModal(props) {\n    const { show, handleClose, handleUpdateEndDate } = props;\n    const [endDate, setEndDate] = useState(new Date());\n\n    function UpdateEndDate() {\n\n        let date = new Date(endDate);\n        let jsonStr = JSON.stringify(date);\n        var dateStr = JSON.parse(jsonStr);  \n        handleUpdateEndDate(dateStr);\n        handleClose();\n    }\n\n    return (\n        <>\n            {/* <Button onClick={() => setSmShow(true)}>Small modal</Button> */}\n            <Modal size=\"sm\" show={show} onHide={handleClose}\n                aria-labelledby=\"example-modal-sizes-title-sm\"\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"example-modal-sizes-title-sm\">\n                        Small Modal\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group as={Row} controlId=\"formHorizontalEndDate\">\n                        <Form.Label column >\n                            Choose End Date:\n                        </Form.Label>\n                        <Col>\n                            <Form.Control type=\"date\" value={endDate} onChange={e => setEndDate(e.target.value)}>\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={UpdateEndDate}>\n                        Update End Date\n                        </Button>\n                </Modal.Footer>\n            </Modal>\n\n        </>\n    );\n}\n\nexport default DateModal;\n","import * as React from 'react';\nimport { Pie } from \"react-chartjs-2\";\nimport './PieChart.css'\nimport { Card, Container } from 'react-bootstrap';\n\n\n\nfunction getPieColors(numOfOptions) {\n    let colors = {\n        pieColors: [],\n        pieColorsBorder: []\n    }\n\n    let colorsArray = [\n        'rgba(255, 99, 132, ',\n        'rgba(54, 162, 235, ',\n        'rgba(10, 57, 173, ',\n        'rgba(10, 84, 48, ',\n        'rgba(2, 86, 86,',\n        'rgba(3, 29, 8, ',\n        'rgba(165, 85, 48, ',\n        'rgba(97, 232, 249, ',\n        'rgba(219, 186, 252, ',\n        'rgba(183, 220, 23, ',\n    ]\n\n    for (let i = 0; i < numOfOptions; ++i) {\n        // let red = Math.floor(Math.random() * 256).toString();\n        // let green = Math.floor(Math.random() * 256).toString();\n        // let blue = Math.floor(Math.random() * 256).toString();\n        let pieColor = colorsArray[i % colorsArray.length] + `0.2)`;\n        let pieColorBorder = colorsArray[i % colorsArray.length] + `1)`;\n        // let pieColor = `rgba(${red},${green},${blue},0.2)`;\n        // let pieColorBorder = `rgba(${red},${green},${blue},1)`;\n        colors.pieColors.push(pieColor);\n        colors.pieColorsBorder.push(pieColorBorder);\n    }\n\n    return colors;\n}\n\nfunction PieChart(props) {\n\n    const { title, vote } = props;\n\n    const optionsChartData = React.useMemo(getVoteOptionsChartData, [vote]);\n\n    function getVoteOptionsChartData() {\n        console.log(\"calculating chart data\");\n\n        let colors = getPieColors(vote.options.length);\n\n        let voteCount = [];\n\n        for (const option of vote.options) {\n            let count = 0;\n            for (const single_vote of Object.values(vote.votesPieData)) {\n                if (single_vote === option) {\n                    count++;\n                }\n            }\n            voteCount.push(count);\n        }\n\n        return {\n            labels: vote.options,\n            datasets: [\n                {\n                    label: '# of Votes',\n                    data: voteCount,\n                    backgroundColor: colors.pieColors,\n                    borderColor: colors.pieColorsBorder,\n                    borderWidth: 1,\n                },\n            ],\n        }\n    }\n    const option = { legend: { display: false } };\n    return (\n        <Container className=\"chart-title\">\n            <Card.Title  >{title}</Card.Title>\n            {Object.keys(vote.votesPieData).length === 0 ?\n                <p style={{backgroundColor: \"yellow\"}}>No Votes Yet</p>\n                :\n                <Pie options={option} data={optionsChartData} />\n            }\n        </Container>\n    )\n}\n\nexport default PieChart;","import { Button, Col, Container, Form, Row } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport DateModal from \"../DateModal/DateModal\";\nimport PieChart from \"../PieChart/PieChart\";\nimport './ActiveVoteCard.css'\n\n\nfunction ActiveVoteCard(props) {\n    const { vote, activeUser, updateEndDate, AddUsersVote } = props;\n    const [showDateModal, setShowDateModal] = useState(false);\n    const [chosenOption, setChosenOption] = useState(vote.options[0]);\n    let i = 0;\n\n    var endDate = vote.endDate.substring(0, 16);\n    endDate = endDate.replace(\"T\", \" \");\n\n\n    let options = vote.options.map(option => <option key={i++}>{option}</option>)\n\n    function handleUpdateEndDate(updatedEndDate) {\n        updateEndDate(vote.id, updatedEndDate);\n    }\n\n    function handleVote() {\n        AddUsersVote(chosenOption, vote.id, activeUser.id);\n    }\n    return (\n        <div className=\"c-vote-card\">\n            {activeUser.role === \"committee\" ?\n                <Container fluid>\n                    <Row>\n                        <Col >\n                            <Row>\n                                <div className=\"vote-details\">\n                                    <label>Details: </label>\n                                    <p>{vote.details}</p>\n                                </div>\n                            </Row>\n                            <Row>\n                                <div className=\"vote-end-date\">\n                                    <label>End date: </label>\n                                    <p>{endDate}</p>\n                                </div>\n                                <Button className=\"b-update\" variant=\"warning\" onClick={() => setShowDateModal(true)}>Update End Date</Button>\n                            </Row>\n                        </Col>\n                        <Col sm={6}>\n                            <PieChart title=\"Results\" vote={vote}/>\n                        </Col>\n                    </Row>\n                </Container>\n                :\n                <Form>\n                    <Form.Group as={Row} controlId={\"formHorizontalVote\" + i + vote.title}>\n                        <Form.Label column sm={2}>\n                            Your Vote:\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" onChange={e => setChosenOption(e.target.value)}>\n                                {options}\n                            </Form.Control>\n                            <div className=\"vote-button\">\n                                <Button variant=\"warning\" onClick={handleVote}>Submit Vote</Button>\n                                <div className=\"vote-end-date\">\n                                    <label>Vote end at: </label>\n                                    <p>{endDate}</p>\n                                </div>\n                            </div>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            }\n            <DateModal show={showDateModal} handleClose={() => setShowDateModal(false)} handleUpdateEndDate={handleUpdateEndDate} />\n        </div >\n    );\n}\n\nexport default ActiveVoteCard;","import {   Container,Col, Row } from \"react-bootstrap\";\nimport PieChart from \"../PieChart/PieChart\";\nimport './VoteResultCard.css'\n\n\nfunction VoteResultCard(props) {\n    const { vote } = props;\n\n    var endDate = vote.endDate.substring(0, 16);\n    endDate = endDate.replace(\"T\", \" \");\n\n    return (\n        <div className=\"c-vote-card\">\n            <Container fluid>\n                <Row>\n                    <Col >\n                        <Row>\n                            <div className=\"vote-details\">\n                                <label>Details: </label>\n                                <p>{vote.details}</p>\n                            </div>\n                        </Row>\n                        <Row>\n                            <div className=\"vote-end-date\">\n                                <label>End date: </label>\n                                <p>{endDate}</p>\n                            </div>\n                        </Row>\n                    </Col>\n                    <Col sm={4}>\n                        <PieChart title=\"Results\" vote={vote} />\n                    </Col>\n                    <Col sm={4}>\n                        <PieChart title=\"Voting Precentage\" vote={vote} />\n                    </Col>\n                </Row>\n            </Container>\n        </div >\n    );\n}\n\nexport default VoteResultCard;","import { useState } from \"react\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\n\nimport HoaNavbr from \"../../components/HOANavbar/HOANavbr\";\nimport './VotingPage.css'\nimport NewVoteModal from \"../../components/NewVoteModal/NewVoteModal\";\nimport VotesAccordion from \"../../components/Accordion/VotesAccordion\";\nimport ActiveVoteCard from \"../../components/ActiveVoteCard/ActiveVoteCard\";\nimport VoteResultCard from \"../../components/VoteResultCard/VoteResultCard\"\nimport FilterContent from \"../../components/FilterContent/FilterContent\";\n\nfunction VotingPage(props) {\n    const { activeUser, onLogout, votings, addVote,\n        addVoteItems, vote_items, updateEndDate, AddUsersVote } = props;\n    const [showModal, setShowModal] = useState(false);\n    const [filteredText, setFilteredText] = useState(\"\");\n\n    if (!activeUser) {\n        return <Redirect to=\"/\" />\n    }\n\n\n    let filteredVotes = votings.filter(vote =>\n        vote.title.toLowerCase().includes(filteredText.toLowerCase()) ||\n        vote.details.toLowerCase().includes(filteredText.toLowerCase()));\n\n\n    //Filter Only Active votes\n    const activeVotes = votings.filter(vote => vote.voteStatus === \"active\");\n    const activeVoteView = activeVotes.map(vote => <ActiveVoteCard vote={vote} addVoteItems={addVoteItems}\n        vote_items={vote_items} activeUser={activeUser} updateEndDate={updateEndDate} AddUsersVote={AddUsersVote} />)\n\n    //Filter Only NonActive votes\n    const nonActiveVotes = filteredVotes.filter(vote => vote.voteStatus !== \"active\");\n    const nonActiveVoteView = nonActiveVotes.map(vote => <VoteResultCard vote={vote} activeUser={activeUser} />)\n\n\n    return (\n        <div className=\"p-votes\">\n            <HoaNavbr activeUser={activeUser} onLogout={onLogout} />\n            <Container fluid>\n                <Row>\n                    <Col className=\"block-example border-right border-dark\">\n                        <h1>Active Votings</h1>\n                        <div className=\"b-new-vote\" style={{ visibility: activeUser.role === \"committee\" ? \"visible\" : \"hidden\" }}>\n                            <Button variant=\"link\" onClick={() => setShowModal(true)}>New Vote</Button>\n                        </div>\n                        <VotesAccordion panels={activeVoteView} isResaultAccordion=\"false\" />\n                    </Col>\n                    <Col>\n                        <h1>Voting Results</h1>\n                        <FilterContent isMessagesPage={false} filteredText={filteredText} onFilterChange={e => setFilteredText(e.target.value)} />\n                        <VotesAccordion panels={nonActiveVoteView} isResaultAccordion=\"true\" />\n                    </Col>\n                </Row>\n            </Container>\n            <NewVoteModal show={showModal} handleClose={() => setShowModal(false)} addVote={addVote} />\n        </div>\n    )\n\n}\n\nexport default VotingPage;","import { useState } from \"react\";\nimport { Button, Modal, Form, Col, Image, Row } from \"react-bootstrap\";\n\n\nfunction NewTenantModal(props) {\n    const { show, handleClose, addTenant, userId, isUpdate, updateTenantContent } = props;\n    const [email, setEmail] = useState(\"eyal@barak.com\");\n    const [pwd, setPwd] = useState(\"123\");\n    const [fname, setfname] = useState(\"Eyal\");\n    const [lname, setlname] = useState(\"Barak\");\n    const [building, setBuilding] = useState(\"Einstein\");\n    const [img, setImg] = useState(\"\");\n    const placeHolderImage = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ4tJDcJYnlhTCuciLukYiHdpeS9XL5wGGHSg&usqp=CAU\";\n\n\n    function closeModal() {\n        setEmail(\"\");\n        setPwd(\"\");\n        setfname([]);\n        setlname(\"\");\n        setBuilding(\"\");\n        setImg(\"\");\n        handleClose();\n    }\n\n    function handleAddTennant() {\n        const newCommittee = {\n            id: Date.now(),\n            fname,\n            lname,\n            email,\n            pwd,\n            role: \"tenant\",\n            building,\n            img,\n        }\n\n        addTenant(newCommittee);\n\n        // 2) cleanup (clean all field + close the modal)\n        closeModal();\n    }\n\n\n    function handleUpdateTenant() {\n        updateTenantContent(fname, lname, email, building, pwd, img, userId);\n\n        closeModal();\n    }\n\n    return (\n        <Modal show={show} onHide={closeModal} size=\"xl\">\n            <Modal.Header closeButton>\n                <Modal.Title>Create a Committee Member Account</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Group controlId=\"formBasicfname\">\n                        <Form.Label>First Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter first name\" value={fname} onChange={e => setfname(e.target.value)} />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasiclname\">\n                        <Form.Label>Last Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter last name\" value={lname} onChange={e => setlname(e.target.value)} />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={e => setEmail(e.target.value)} />\n                        <Form.Text className=\"text-muted\">\n                            We'll never share your email with anyone else.\n                    </Form.Text>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" value={pwd} onChange={e => setPwd(e.target.value)} />\n                    </Form.Group>\n                    <Form.Group controlId=\"formHorizontalImage\">\n                        <Form.Label>\n                            Image URL\n                        </Form.Label>\n                        <Row>\n                            <Col sm={10}>\n                                <Form.Control type=\"text\" placeholder=\"Image URL\" value={img} onChange={e => setImg(e.target.value)} />\n                            </Col>\n                            <Col sm={2}>\n                                <Image width=\"100\" height=\"100\" src={img === \"\" ? placeHolderImage : img} />\n                            </Col>\n                        </Row>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicbuilding\">\n                        <Form.Label>Building/Condomium Community Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Building/Condomium Community Name\" value={building} onChange={e => setBuilding(e.target.value)} />\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n            <div>\n                {isUpdate === \"true\" ?\n                    <Modal.Footer>\n                        <Button variant=\"primary\" onClick={handleUpdateTenant}>\n                            Update Tenant\n                        </Button>\n                    </Modal.Footer>\n                    :\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={closeModal}>\n                            Cancel\n                        </Button>\n                        <Button variant=\"primary\" onClick={handleAddTennant}>\n                            Add Tenant\n                    </  Button>\n                    </Modal.Footer>}\n            </div>\n        </Modal>\n    );\n}\n\nexport default NewTenantModal;","import { Button, Col, Container, Row } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport NewTenantModal from \"../../components/NewTenantModal/NewTenantModal\";\nimport './TenantCard.css'\n\n\nfunction TenantCard(props) {\n    const { tenant, removeTenant, updateTenantContent } = props;\n    const [showModal, setShowModal] = useState(false);\n    const placeHolderImage = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ4tJDcJYnlhTCuciLukYiHdpeS9XL5wGGHSg&usqp=CAU\";\n\n    function removeTenantById() {\n        removeTenant(tenant.id);\n    }\n    return (\n        <div className=\"c-tenant-card\">\n            <Container fluid>\n                <Row>\n                    <Col sm={10}>\n                        <Row>\n                            <Col sm={4}>\n                                <img alt=\"tenantImg\" className=\"tenant-image\" src={tenant.img === \"\" ? placeHolderImage : tenant.img} ></img>\n                            </Col>\n                            <Col sm={8}>\n                                <div className=\"tenant-name\">\n                                    <label>Name: </label>\n                                    <p>{tenant.fname + \" \" + tenant.lname}</p>\n                                </div>\n                                <div className=\"tenant-email\">\n                                    <label>Email: </label>\n                                    <p>{tenant.email}</p>\n                                </div>\n                                <div className=\"tenant-building\">\n                                    <label>Building: </label>\n                                    <p>{tenant.building}</p>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col className=\"tenant-card-buttons\" sm={2}>\n                        <Button className=\"b-update-button\" variant=\"info\" onClick={() => setShowModal(true)}>Update</Button>\n                        <Button onClick={removeTenantById} className=\"b-delete-button\" variant=\"danger\">Delete</Button>\n                    </Col>\n                </Row>\n            </Container>\n            <NewTenantModal isUpdate=\"true\" show={showModal} handleClose={() => setShowModal(false)}\n                updateTenantContent={updateTenantContent} userId={tenant.id} />\n        </div >\n    );\n}\n\nexport default TenantCard;","import React from 'react'\nimport { Accordion, Card } from \"react-bootstrap\";\nimport './TenantsAccordion.css'\n\nfunction TenantsAccordion(props) {\n\n    const { panels } = props;\n\n    return (\n        <Accordion>\n            {panels.map((panel, index) =>\n                <Card key={index}>\n                    <Accordion.Toggle className=\"accordionHeader\" as={Card.Header} eventKey={index.toString()} >\n                        <div>{panel.props.tenant.fname + \" \" + panel.props.tenant.lname}</div>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey={index.toString()}>\n                        <Card.Body>{panel}</Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            )}\n        </Accordion>\n    )\n}\n\nexport default TenantsAccordion;","import { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport TenantCard from \"../../components/TenantCard/TenantCard\";\nimport HoaNavbr from \"../../components/HOANavbar/HOANavbr\";\nimport './TenantsPage.css'\nimport TenantsAccordion from \"../../components/Accordion/TenantsAccordion\";\nimport NewTenantModal from \"../../components/NewTenantModal/NewTenantModal\";\nimport FilterContent from \"../../components/FilterContent/FilterContent\";\n\nfunction TenantsPage(props) {\n    const { activeUser, onLogout, tenants, addTenant, removeTenant, updateTenantContent } = props;\n    const [showModal, setShowModal] = useState(false);\n    const [filteredText, setFilteredText] = useState(\"\");\n\n    if (!activeUser) {\n        return <Redirect to=\"/\" />\n    }\n\n    let filteredTenants = tenants.filter(tenant =>\n        tenant.fname.toLowerCase().includes(filteredText.toLowerCase()) ||\n        tenant.lname.toLowerCase().includes(filteredText.toLowerCase()) ||\n        tenant.email.toLowerCase().includes(filteredText.toLowerCase())\n    );\n\n    const TenantView = filteredTenants.map(tenant => <TenantCard tenant={tenant}\n        removeTenant={removeTenant} activeUser={activeUser} updateTenantContent={updateTenantContent} />)\n\n    return (\n        <div className=\"p-messages\">\n            <HoaNavbr activeUser={activeUser} onLogout={onLogout} />\n            <FilterContent isMessagesPage={false} filteredText={filteredText} onFilterChange={e => setFilteredText(e.target.value)}/>\n            <div className=\"b-new-message\">\n                <Button variant=\"link\" onClick={() => setShowModal(true)}>New Tenant</Button>\n            </div>\n            <TenantsAccordion panels={TenantView}  />\n            <NewTenantModal isUpdate=\"false\" show={showModal} handleClose={() => setShowModal(false)} addTenant={addTenant} />\n        </div>\n    )\n\n}\n\nexport default TenantsPage;","import { useState } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport HomePage from './pages/HomePage/HomePage';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport SignupPage from './pages/SignupPage/SignupPage';\nimport jsonUsers from './data/users.json';\nimport jsonMessages from './data/messages.json';\nimport jsonVotings from './data/votings.json';\nimport MessagesPage from './pages/MessagesPage/MessagesPage';\nimport VotingPage from './pages/VotingPage/VotingPage';\nimport TenantsPage from './pages/TenantsPage/TenantsPage';\n\n\n\n\nfunction App() {\n  const [users, setUsers] = useState(jsonUsers);        // HACK ALERT: holding all users as state only because this is a JSON based application (no server side)\n  const [activeUser, setActiveUser] = useState(jsonUsers[0]);   // During development it's conveient to be logged in by default\n  const [messages, setMessages] = useState(jsonMessages);  // HACK ALERT: holding all messages as state only because this is a JSON based application (no server side)\n  const [messageItems, setMessageItems] = useState([]);\n  const [votings, setVotings] = useState(jsonVotings);\n\n  //============== loging/logout==================\n  function handleLogout() {\n    setActiveUser(null);\n  }\n\n  function handleLogin(loggedinUser) {\n    setActiveUser(loggedinUser);\n  }\n\n\n  // Users\n  function AddUser(newUser) {\n    setUsers(users.concat(newUser));\n  }\n\n  function removeTenant(userId) {\n    const found = users.find(element => element.id === userId);\n    const index = users.indexOf(found);\n    if (index > -1) {\n      users.splice(index, 1);\n      setUsers([...users]);\n    }\n  }\n  \n\n  function updateTenantContent(fname, lname, email, building, pwd, userId) {\n    const found = users.find(element => element.id === userId);\n    const index = users.indexOf(found);\n    if (index > -1) {\n      users[index].fname = fname;\n      users[index].lname = lname;\n      users[index].email = email;\n      users[index].building = building;\n      users[index].pwd = pwd;\n      setMessages([...users]);\n    }\n  }\n\n  //============== Messages ==================\n  function addMessage(title, details, priority, img) {\n    const newMessage = {\n      id: Date.now(),\n      title,\n      details,\n      priority,\n      img,\n      userId: activeUser.id,\n      building: activeUser.building,\n      isRead: [],\n      date: new Date(),\n    }\n\n    setMessages(messages.concat(newMessage));\n  }\n\n  function updateMessage(messageId, activeUserId) {\n    const found = messages.find(element => element.id === messageId);\n    const index = messages.indexOf(found);\n    if (index > -1) {\n      messages[index].isRead.push(activeUserId);\n      setMessages([...messages]);\n    }\n  }\n\n  function removeMessage(messageId) {\n    const found = messages.find(element => element.id === messageId);\n    const index = messages.indexOf(found);\n    if (index > -1) {\n      messages.splice(index, 1);\n      setMessages([...messages]);\n    }\n  }\n\n  function updateMessageContent(title, details, priority, img, messageId) {\n    const found = messages.find(element => element.id === messageId);\n    const index = messages.indexOf(found);\n    if (index > -1) {\n      messages[index].title = title;\n      messages[index].details = details;\n      messages[index].priority = priority;\n      messages[index].img = img;\n      setMessages([...messages]);\n    }\n  }\n  const activeUserMessages = activeUser ? messages.filter(message => message.building === activeUser.building) : [];\n\n\n\n  function addMessageItems(newItem) {\n    setMessageItems(messageItems.concat(newItem));\n  }\n\n  function SortMessages(sortBy) {\n    if (sortBy === \"date\") {\n      messages.sort(function (a, b) {\n        const firstDate = Date.parse(a.date);\n        const secondDate = Date.parse(b.date);\n\n        return secondDate - firstDate;\n      });\n    }\n    else {\n      messages.sort(function (a, b) {\n        var nameA = a.priority.toUpperCase(); // ignore upper and lowercase\n        var nameB = b.priority.toUpperCase(); // ignore upper and lowercase\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n        // names must be equal\n        return 0;\n      });\n    }\n    setMessages([...messages]);\n  }\n\n\n  //============== Voting ==================\n  function addVote(title, details, options, endDate) {\n    const newVote = {\n      id: Date.now(),\n      title,\n      details,\n      options,\n      endDate,\n      userId: activeUser.id,\n      building: activeUser.building,\n      voteStatus: \"active\",\n      result: \"\",\n      votesPieData: {}\n    }\n\n    setVotings(votings.concat(newVote));\n  }\n\n  // Check the end Date And Update Vote Status\n  function CheckDateAndUpdateVoteStat(voteItem, index) {\n    var now = new Date();\n    var itemsEndDate = new Date(voteItem.endDate);\n\n    voteItem.voteStatus = now >= itemsEndDate ? \"not active\" : \"active\";\n  }\n\n  votings.forEach(CheckDateAndUpdateVoteStat);\n\n  //\n\n  const activeUserVoting = activeUser ? votings.filter(voting => voting.building === activeUser.building) : [];\n\n  function updateEndDate(voteId, updatedEndDate) {\n    const found = votings.find(element => element.id === voteId);\n    const index = votings.indexOf(found);\n    if (index > -1) {\n      votings[index].endDate = updatedEndDate;\n      setVotings([...votings]);\n    }\n  }\n\n  function AddUsersVote(chosenOption, voteId, userId) {\n    const found = votings.find(element => element.id === voteId);\n    const index = votings.indexOf(found);\n\n    if (index > -1) {\n      votings[index].votesPieData[userId] = chosenOption;\n      setVotings([...votings]);\n    }\n  }\n\n\n  return (\n\n\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\"><HomePage activeUser={activeUser} onLogout={handleLogout} /></Route>\n        <Route exact path=\"/login\"><LoginPage activeUser={activeUser} users={users} onLogin={handleLogin} /></Route>\n        <Route exact path=\"/signup\"><SignupPage activeUser={activeUser} users={users} AddCommittee={AddUser} onLogin={handleLogin}/></Route>\n        <Route exact path=\"/tenants\"><TenantsPage activeUser={activeUser} tenants={users} onLogin={handleLogin}\n        removeTenant={removeTenant}  updateTenantContent={updateTenantContent} addTenant={AddUser} onLogout={handleLogout}/></Route>\n\n        <Route exact path=\"/messages\">\n          <MessagesPage activeUser={activeUser} onLogout={handleLogout}\n            messages={activeUserMessages} updateMessage={updateMessage} SortMessages={SortMessages} removeMessage={removeMessage}\n            addMessage={addMessage} addMessageItems={addMessageItems}\n            message_items={messageItems} updateMessageContent={updateMessageContent} />\n        </Route>\n\n        <Route exact path=\"/voting\">\n          <VotingPage activeUser={activeUser} onLogout={handleLogout} votings={activeUserVoting} addVote={addVote}\n            updateEndDate={updateEndDate} AddUsersVote={AddUsersVote} />\n        </Route>\n      </Switch>\n    </HashRouter>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}